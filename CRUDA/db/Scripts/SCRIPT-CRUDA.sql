/**********************************************************************************
Criar banco-de-dados cruda
**********************************************************************************/
USE [master]
SET NOCOUNT ON
IF EXISTS(SELECT 1 FROM sys.databases where name = 'cruda')
    DROP DATABASE cruda
GO
CREATE DATABASE [cruda]
    CONTAINMENT = NONE
    ON PRIMARY
    (NAME = N'cruda', FILENAME = N'D:\CRUDA-C#\CRUDA-CORE\CRUDA\db\cruda.mdf', SIZE = 8192KB, MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB)
    LOG ON
    (NAME = N'cruda_log', FILENAME = N'D:\CRUDA-C#\CRUDA-CORE\CRUDA\db\cruda.ldf', SIZE = 8192KB, MAXSIZE = 2048GB, FILEGROWTH = 65536KB)
    WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF
GO
ALTER DATABASE[cruda] SET COMPATIBILITY_LEVEL = 160
GO
IF(1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
    EXEC[cruda].[dbo].[sp_fulltext_database] @action = 'enable'
GO
ALTER DATABASE[cruda] SET ANSI_NULL_DEFAULT OFF
GO
ALTER DATABASE[cruda] SET ANSI_NULLS OFF
GO
ALTER DATABASE[cruda] SET ANSI_PADDING OFF
GO
ALTER DATABASE[cruda] SET ANSI_WARNINGS OFF
GO
ALTER DATABASE[cruda] SET ARITHABORT OFF
GO
ALTER DATABASE[cruda] SET AUTO_CLOSE OFF
GO
ALTER DATABASE[cruda] SET AUTO_SHRINK OFF
GO
ALTER DATABASE[cruda] SET AUTO_UPDATE_STATISTICS ON
GO
ALTER DATABASE[cruda] SET CURSOR_CLOSE_ON_COMMIT OFF
GO
ALTER DATABASE[cruda] SET CURSOR_DEFAULT  GLOBAL
GO
ALTER DATABASE[cruda] SET CONCAT_NULL_YIELDS_NULL OFF
GO
ALTER DATABASE[cruda] SET NUMERIC_ROUNDABORT OFF
GO
ALTER DATABASE[cruda] SET QUOTED_IDENTIFIER OFF
GO
ALTER DATABASE[cruda] SET RECURSIVE_TRIGGERS OFF
GO
ALTER DATABASE[cruda] SET  DISABLE_BROKER
GO
ALTER DATABASE[cruda] SET AUTO_UPDATE_STATISTICS_ASYNC OFF
GO
ALTER DATABASE[cruda] SET DATE_CORRELATION_OPTIMIZATION OFF
GO
ALTER DATABASE[cruda] SET TRUSTWORTHY OFF
GO
ALTER DATABASE[cruda] SET ALLOW_SNAPSHOT_ISOLATION ON
GO
ALTER DATABASE[cruda] SET PARAMETERIZATION SIMPLE
GO
ALTER DATABASE[cruda] SET READ_COMMITTED_SNAPSHOT OFF
GO
ALTER DATABASE[cruda] SET HONOR_BROKER_PRIORITY OFF
GO
ALTER DATABASE[cruda] SET RECOVERY SIMPLE
GO
ALTER DATABASE[cruda] SET  MULTI_USER
GO
ALTER DATABASE[cruda] SET PAGE_VERIFY CHECKSUM
GO
ALTER DATABASE[cruda] SET DB_CHAINING OFF
GO
ALTER DATABASE[cruda] SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF)
GO
ALTER DATABASE[cruda] SET TARGET_RECOVERY_TIME = 60 SECONDS
GO
ALTER DATABASE[cruda] SET DELAYED_DURABILITY = DISABLED
GO
ALTER DATABASE[cruda] SET ACCELERATED_DATABASE_RECOVERY = OFF
GO
ALTER DATABASE[cruda] SET QUERY_STORE = ON
GO
ALTER DATABASE[cruda] SET QUERY_STORE(OPERATION_MODE = READ_WRITE, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_STORAGE_SIZE_MB = 1000, QUERY_CAPTURE_MODE = AUTO, SIZE_BASED_CLEANUP_MODE = AUTO, MAX_PLANS_PER_QUERY = 200, WAIT_STATS_CAPTURE_MODE = ON)
GO
/**********************************************************************************
Início da criação dos scripts
**********************************************************************************/
USE [cruda]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE SCHEMA cruda AUTHORIZATION [dbo]
GO
/**********************************************************************************
Criar stored procedure [dbo].[Config]
**********************************************************************************/
IF(SELECT object_id('[dbo].[Config]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[Config] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[Config](@SystemName VARCHAR(25)
							  ,@DatabaseName VARCHAR(25) = NULL
							  ,@TableName VARCHAR(25) = NULL) AS
BEGIN
	DECLARE @ErrorMessage VARCHAR(250)

	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ COMMITTED
	BEGIN TRY
		IF @SystemName IS NULL BEGIN
			SET @ErrorMessage = 'Nome de sistema é requerido.';
			THROW 51000, @ErrorMessage, 1
		END
		-- 0 [Systems]
		SELECT 	'RecordSystem' AS [ClassName]
				,[Id]
				,[Name]
				,[Description]
				,[ClientName]
				,[MaxRetryLogins]
				,[IsOffAir]
			INTO [dbo].[#Systems]
			FROM [dbo].[Systems]
			WHERE [Name] = @SystemName
		IF @@ROWCOUNT = 0 BEGIN
			SET @ErrorMessage = 'Sistema "' + @SystemName + '" não cadastrado.';
			THROW 51000, @ErrorMessage, 1
		END
		IF (SELECT IsOffAir FROM [dbo].[#Systems]) = 1 BEGIN
			SET @ErrorMessage = 'Sistema "' + @SystemName + '" fora do ar.';
			THROW 51000, @ErrorMessage, 1
		END
		ALTER TABLE [dbo].[#Systems] DROP COLUMN [IsOffAir]
		IF @DatabaseName IS NULL
			RETURN
		ALTER TABLE [dbo].[#Systems] ADD PRIMARY KEY CLUSTERED([Id])
		IF @DatabaseName = 'all' BEGIN
			SET @DatabaseName = NULL
			SET @TableName = NULL
		END

		-- 1 [Databases]
		SELECT 	'RecordDatabase' AS [ClassName]
				,[D].[Id]
				,[D].[Name]
				,[D].[Description]
				,[D].[Alias]
				,[D].[ServerName]
				,[D].[HostName]
				,[D].[Port]
				,[D].[Logon]
				,[D].[Password]
				,[D].[Folder]
			INTO [dbo].[#Databases]
			FROM [dbo].[Databases] [D]
				INNER JOIN [dbo].[SystemsDatabases] [SD] ON [SD].[DatabaseId] = [D].[id]
				INNER JOIN [dbo].[#Systems] [S] ON [S].[Id] = [SD].[SystemId]
			WHERE [D].[Name] = ISNULL(@DatabaseName, [D].[Name])
		IF @@ROWCOUNT = 0 BEGIN
			SET @ErrorMessage = 'Banco(s)-de-dados não cadastrado(s).';
			THROW 51000, @ErrorMessage, 1
		END
		ALTER TABLE [dbo].[#Databases] ADD PRIMARY KEY CLUSTERED([Id])
		IF @DatabaseName IS NULL BEGIN
			ALTER TABLE [dbo].[#Databases] DROP COLUMN [ServerName]
			ALTER TABLE [dbo].[#Databases] DROP COLUMN [HostName]
			ALTER TABLE [dbo].[#Databases] DROP COLUMN [Port]
			ALTER TABLE [dbo].[#Databases] DROP COLUMN [Logon]
			ALTER TABLE [dbo].[#Databases] DROP COLUMN [Password]
			ALTER TABLE [dbo].[#Databases] DROP COLUMN [Folder]
		END

		-- 2 [Tables]
		SELECT	'RecordTable' AS [ClassName]
				,[T].[Id]
				,[DT].[DatabaseId]
				,[T].[Name]
				,[T].[Alias]
				,[T].[Description]
				,[T].[ParentTableId]
				,[T].[IsPaged]
			INTO [dbo].[#Tables]
			FROM [dbo].[Tables] [T]
				INNER JOIN [dbo].[DatabasesTables] [DT] ON [DT].[TableId] = [T].[Id]
				INNER JOIN [dbo].[#Databases] [D] ON [D].[Id] = [DT].[DatabaseId]
			WHERE [T].[Name] = ISNULL(@TableName, [T].[Name])
		IF @@ROWCOUNT = 0 BEGIN
			SET @ErrorMessage = 'Tabela(s) não cadastrada(s).';
			THROW 51000, @ErrorMessage, 1
		END
		ALTER TABLE [dbo].[#Tables] ADD PRIMARY KEY CLUSTERED([Id])

		IF @DatabaseName IS NULL BEGIN
			-- 3 [Columns]
			SELECT	'RecordColumn' AS [ClassName]
					,[C].[Id]
					,[C].[TableId]
					,[C].[Sequence]
					,[C].[DomainId]
					,[C].[ReferenceTableId]
					,[C].[Name]
					,[C].[Description]
					,[C].[Title]
					,[C].[Caption]
				    ,[C].[Default]
				    ,[C].[Minimum]
				    ,[C].[Maximum]
					,[C].[IsPrimarykey]
					,[C].[IsAutoIncrement]
					,[C].[IsRequired]
					,[C].[IsListable]
					,[C].[IsFilterable]
					,[C].[IsEditable]
					,[C].[IsGridable]			
					,[C].[IsEncrypted]
				INTO [dbo].[#Columns]
				FROM [dbo].[Columns] [C]
					INNER JOIN [dbo].[#Tables] [T] ON [T].[Id]= [C].[TableId] 
			IF @@ROWCOUNT = 0 BEGIN
				SET @ErrorMessage = 'Colunas de tabelas não cadastradas.';
				THROW 51000, @ErrorMessage, 1
			END
			ALTER TABLE [dbo].[#Columns] ADD PRIMARY KEY CLUSTERED([Id])
			CREATE INDEX [#ColumnsDomainId] ON [dbo].[#Columns]([DomainId])

			-- 4 [Domains]
			SELECT	'RecordDomain' AS [ClassName]
					,[D].[Id]
					,[D].[TypeId]
					,[D].[MaskId]
					,[D].[Name]
					,[D].[Length]
					,[D].[Decimals]
					,[D].[ValidValues]
					,[D].[Default]
					,[D].[Minimum]
					,[D].[Maximum]
					,[D].[Codification]
				INTO [dbo].[#Domains]
				FROM [dbo].[Domains] [D]
				WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[#Columns] WHERE [DomainId] = [D].[Id])
			IF @@ROWCOUNT = 0 BEGIN
				SET @ErrorMessage = 'Domínios de colunas não cadastrados.';
				THROW 51000, @ErrorMessage, 1
			END
			ALTER TABLE [dbo].[#Domains] ADD PRIMARY KEY NONCLUSTERED([Id])
			CREATE INDEX [#DomainsTypeId] ON [dbo].[#Domains]([TypeId])

			-- 5 [Types]
			SELECT 	'RecordType' AS [ClassName]
					,[T].[Id]
					,[T].[CategoryId]
					,[T].[Name]
				    ,[T].[Minimum]
					,[T].[Maximum]
					,[T].[AskLength]
					,[T].[AskDecimals]
					,[T].[AskPrimarykey]
					,[T].[AskAutoincrement]
					,[T].[AskFilterable]
					,[T].[AskGridable]
					,[T].[AskCodification]
					,[T].[AskFormula]
					,[T].[AllowMaxLength]
					,[T].[IsActive]
				INTO [dbo].[#Types]
				FROM [dbo].[Types] [T]
				WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[#Domains] WHERE [TypeId] = [T].[Id])
			IF @@ROWCOUNT = 0 BEGIN
				SET @ErrorMessage = 'Tipos de domínios não cadastrados.';
				THROW 51000, @ErrorMessage, 1
			END
			CREATE INDEX [#TypesCategoryId] ON [dbo].[#Types]([CategoryId])

			-- 6 [Categories]
			SELECT 	'RecordCategory' AS [ClassName]
					,[C].[Id]
					,[C].[Name]
					,[C].[HtmlInputType]
					,[C].[HtmlInputAlign]
					,[C].[AskEncrypted]
					,[C].[AskMask]
					,[C].[AskListable]
					,[C].[AskDefault]
					,[C].[AskMinimum]
					,[C].[AskMaximum]
				INTO [dbo].[#Categories]
				FROM [dbo].[Categories] [C]
				WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[#Types] WHERE [CategoryId] = [C].[Id])
			IF @@ROWCOUNT = 0 BEGIN
			   SET @ErrorMessage = 'Categoria(s) de tipos não cadastrada(s).';
			   THROW 51000, @ErrorMessage, 1
			END

			-- 7 [Menus]
			SELECT 	'RecordMenu' AS [ClassName]
					,[M].[Id]
					,[M].[SystemId]
					,[M].[Sequence]
					,[M].[Caption]
					,[M].[Message]
					,[M].[Action]
					,[M].[ParentMenuId]
				INTO [dbo].[#Menus]
				FROM [dbo].[Menus] [M]
					INNER JOIN [dbo].[#Systems] [S] ON [S].[Id] = [M].[SystemId]
			IF @@ROWCOUNT = 0 BEGIN
			   SET @ErrorMessage = 'Menu(s) de sistema não cadastrado(s).';
			   THROW 51000, @ErrorMessage, 1
			END

			-- 8 [Indexes]
			SELECT 	'RecordIndex' AS [ClassName]
					,[I].[Id]
					,[I].[TableId]
					,[I].[Name]
					,[I].[IsUnique]
				INTO [dbo].[#Indexes]
				FROM [dbo].[Indexes] [I]
					INNER JOIN [dbo].[#Tables] [T] ON [T].[Id] = [I].[TableId]
			ALTER TABLE [dbo].[#Indexes] ADD PRIMARY KEY NONCLUSTERED([Id])

			-- 9 [Indexkeys]
			SELECT 	'RecordIndexkey' AS [ClassName]
					,[IK].[Id]
					,[IK].[IndexId]
					,[IK].[Sequence]
					,[IK].[ColumnId]
					,[IK].[IsDescending]
				INTO [dbo].[#Indexkeys]
				FROM [dbo].[Indexkeys] [IK]
					INNER JOIN [dbo].[#Indexes] [I] ON [I].[Id] = [IK].IndexId
			-- 10 [Masks]
			SELECT 	'RecordMask' AS [ClassName]
					,[M].[Id]
					,[M].[Name]
					,[M].[Mask]
				INTO [dbo].[#Masks]
				FROM [dbo].[Masks] [M]
				WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[#Domains] WHERE [MaskId] = [M].[Id])
		END

		-- Results
		SELECT * FROM [dbo].[#Systems] ORDER BY [Name] -- 0 [#Systems]
		IF @DatabaseName IS NULL BEGIN
			SELECT * FROM [dbo].[#Databases] ORDER BY [Name] -- 1 [#Databases]
			SELECT * FROM [dbo].[#Tables] ORDER BY [DatabaseId], [Name] -- 2 [#Tables]
			SELECT * FROM [dbo].[#Columns] ORDER BY [TableId], [Sequence] -- 3 [#Columns]
			SELECT * FROM [dbo].[#Domains] ORDER BY [Name] -- 4 [#Domains]
			SELECT * FROM [dbo].[#Types] ORDER BY [Name] -- 5 [#Types]
			SELECT * FROM [dbo].[#Categories] ORDER BY [Name] -- 6 [#Categories]
			SELECT * FROM [dbo].[#Menus] ORDER BY [SystemId], [Sequence] -- 7 [#Menus]
			SELECT * FROM [dbo].[#Indexes] ORDER BY [Name] -- 8 [#Indexes]
			SELECT * FROM [dbo].[#Indexkeys] ORDER BY [IndexId], [Sequence] -- 9 [#Indexkeys]
			SELECT * FROM [dbo].[#Masks] ORDER BY [Id] -- 10 [#Masks]
		END ELSE BEGIN
			SELECT * FROM [dbo].[#Databases] ORDER BY [Name] -- 1 [#Databases]
			SELECT * FROM [dbo].[#Tables] ORDER BY [DatabaseId], [Name] -- 2 [#Tables]
		END

		RETURN CAST(1 AS BIT)
	END TRY
	BEGIN CATCH
		THROW
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[GenerateId]
**********************************************************************************/
IF(SELECT object_id('[dbo].[GenerateId]','P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[GenerateId] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[GenerateId](@SystemName VARCHAR(25)
								  ,@DatabaseName VARCHAR(25)
								  ,@TableName VARCHAR(25)) AS
BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		DECLARE @SystemId INT
				,@DatabaseId INT
				,@TableId INT
				,@NextId INT

		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]
		SELECT @SystemId = [Id]
			FROM [dbo].[Systems]
			WHERE [Name] = @SystemName
		IF @SystemId IS NULL
			THROW 51000, 'Sistema não encontrado', 1
		SELECT @DatabaseId = [Id]
			FROM [dbo].[Databases]
			WHERE [Name] = @DatabaseName
		IF @DatabaseId IS NULL
			THROW 51000, 'Banco-de-dados não encontrado', 1
		IF NOT EXISTS(SELECT 1
						FROM [dbo].[SystemsDatabases]
						WHERE [SystemId] = @SystemId
							  AND [DatabaseId] = @DatabaseId)
			THROW 51000, 'Banco-de-dados não pertence ao sistema especificado', 1
		SELECT @TableId = [Id]
			   ,@NextId = [CurrentId] + 1
			FROM [dbo].[Tables]
			WHERE [Name] = @TableName
		IF @TableId IS NULL
			THROW 51000, 'Tabela não encontrada', 1
		IF NOT EXISTS(SELECT 1
						FROM [dbo].[DatabasesTables]
						WHERE [DatabaseId] = @DatabaseId
							  AND [TableId] = @TableId)
			THROW 51000, 'Tabela não pertence ao banco-de-dados especificado', 1
		UPDATE [dbo].[Tables] 
			SET [CurrentId] = @NextId
			WHERE [Id] = @TableId
		COMMIT TRANSACTION

		RETURN @NextId
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[Login]
**********************************************************************************/
IF(SELECT object_id('[dbo].[Login]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[Login] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[Login](@Parameters VARCHAR(MAX)) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED
		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]

		IF ISJSON(@Parameters) = 0
			THROW 51000, 'Parâmetro login não está no formato JSON', 1

		DECLARE @Action VARCHAR(15) = CAST([cruda].[JSON_EXTRACT](@Parameters, '$.Action') AS VARCHAR(15))
				,@LoginId INT = CAST([cruda].[JSON_EXTRACT](@Parameters, '$.LoginId') AS INT)
				,@SystemName VARCHAR(25) = CAST([cruda].[JSON_EXTRACT](@Parameters, '$.SystemName') AS VARCHAR(25))
				,@UserName VARCHAR(25) = CAST([cruda].[JSON_EXTRACT](@Parameters, '$.UserName') AS VARCHAR(25))
				,@Password VARCHAR(256) = CAST([cruda].[JSON_EXTRACT](@Parameters, '$.Password') AS VARCHAR(256))
				,@PublicKey VARCHAR(256) = CAST([cruda].[JSON_EXTRACT](@Parameters, '$.PublicKey') AS VARCHAR(256))
				,@PasswordAux VARCHAR(256)
				,@SystemId INT
				,@SystemIdAux INT
				,@UserId INT
				,@UserIdAux INT
				,@MaxRetryLogins TINYINT
				,@RetryLogins TINYINT
				,@IsLogged BIT
				,@IsActive BIT
				,@IsOffAir BIT
	
		IF @Action IS NULL
			THROW 51000, 'Ação de login é requerida', 1
		IF @Action NOT IN ('login','logout','authenticate')
			THROW 51000, 'Ação de login é inválida', 1
		IF @SystemName IS NULL
			THROW 51000, 'Sistema é requerido', 1
		SELECT @SystemId = [Id]
			   ,@MaxRetryLogins = [MaxRetryLogins]
			   ,@IsOffAir = [IsOffAir]
			FROM [dbo].[Systems]
			WHERE [Name] = @SystemName
		IF @SystemId IS NULL
			THROW 51000, 'Sistema não cadastrado', 1
		IF @IsOffAir = 1
			THROW 51000, 'Sistema fora do ar', 1
		IF @UserName IS NULL
			THROW 51000, 'Usuário é requerido', 1
		SELECT	@UserId = [Id]
				,@RetryLogins = [RetryLogins]
				,@IsActive = [IsActive]
				,@PasswordAux = [Password]
			FROM [dbo].[Users]
			WHERE [Name] = @UserName
		IF @UserId IS NULL
			THROW 51000, 'Usuário não cadastrado', 1
		IF @IsActive = 0
			THROW 51000, 'Usuário está inativo', 1
		IF @RetryLogins >= @MaxRetryLogins
			THROW 51000, 'Usuário está bloqueado', 1
		IF NOT EXISTS(SELECT TOP 1 1
						FROM [dbo].[SystemsUsers]
						WHERE [SystemId] = @SystemId
							  AND [UserId] =  @UserId)
			THROW 51000, 'Usuário não autorizado', 1
		IF @Password IS NULL
			THROW 51000, 'Senha é requerida', 1
		IF CAST(@PasswordAux AS VARCHAR(MAX)) <> CAST(@Password AS VARCHAR(MAX)) BEGIN
			SET @RetryLogins = @RetryLogins + 1
			UPDATE [dbo].[Users] 
				SET [RetryLogins] = @RetryLogins
				WHERE [Id] = @UserId
			COMMIT TRANSACTION 
			IF @RetryLogins = @MaxRetryLogins
				THROW 51000, 'Usuário está bloqueado', 1
			ELSE BEGIN
				SET @ErrorMessage = 'Senha é inválida (' + CAST(@MaxRetryLogins -  @RetryLogins AS VARCHAR(3)) + ' tentativas restantes)';
				THROW 51000, @ErrorMessage, 1
			END
		
		END
		IF @action = 'login' BEGIN
			IF @PublicKey IS NULL
				THROW 51000, 'Chave pública é requerida', 1
			EXEC @LoginId = [dbo].[GenerateId] 'cruda', 'cruda', 'Logins'
			INSERT [dbo].[Logins]([Id],
								  [SystemId],
								  [UserId],
								  [PublicKey],
								  [IsLogged],
								  [CreatedAt],
								  [CreatedBy])
						  VALUES (ISNULL(@LoginId, 1),
								  @SystemId,
								  @UserId,
								  @PublicKey,
								  1,
								  GETDATE(),
								  @UserName)
		END ELSE IF @LoginId IS NULL
			THROW 51000, 'Id de login é requerido', 1
		ELSE BEGIN
			SELECT @SystemIdAux = [SystemId],
				   @UserIdAux = [UserId],
				   @IsLogged = [IsLogged]
				FROM [dbo].[Logins]
				WHERE [Id] = @LoginId
			IF @SystemIdAux IS NULL
				THROW 51000, 'Login não cadastrado', 1
			IF @SystemId <> @SystemIdAux
				THROW 51000, 'Sistema é inválido para este login', 1
			IF @UserId <> @UserIdAux
				THROW 51000, 'Usuário é inválido para este login', 1
			IF @IsLogged = 0
				THROW 51000, 'Login já encerrado', 1
			IF @action = 'logout'
				UPDATE [dbo].[Logins]
					SET [IsLogged] = 0,
						[UpdatedAt] = GETDATE(),
						[UpdatedBy] = @UserName
					WHERE [Id] = @LoginId
		END
		UPDATE [dbo].[Users]
			SET [RetryLogins] = 0
			WHERE [Id] = @UserId
		COMMIT TRANSACTION 

		RETURN @LoginId
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[GetPublicKey]
**********************************************************************************/
IF(SELECT object_id('[dbo].[GetPublicKey]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[GetPublicKey] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[GetPublicKey](@LoginId INT) AS BEGIN
	DECLARE @ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		IF @LoginId IS NULL
			THROW 51000, 'Parâmetro @LoginId é requerido', 1
		SELECT [PublicKey]
			FROM [dbo].[Logins]
			WHERE [Id] = @LoginId
		IF @@ROWCOUNT = 0
			THROW 51000, 'Valor @LoginId é inexistente', 1

		RETURN @LoginId
	END TRY
	BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar function [cruda].[HUNDREDS_IN_WORDS]
**********************************************************************************/
IF(SELECT object_id('[cruda].[HUNDREDS_IN_WORDS]', 'FN')) IS NULL
	EXEC('CREATE FUNCTION [cruda].[HUNDREDS_IN_WORDS]() RETURNS VARCHAR(MAX) AS BEGIN RETURN '''' END')
GO
ALTER FUNCTION [cruda].[HUNDREDS_IN_WORDS](@Value AS SMALLINT
										  ,@EnglishOrPortuguese BIT)
RETURNS VARCHAR(MAX) AS  
BEGIN 
	DECLARE @ThirdDigit INT = @Value / 100,
			@SecondDigit INT = CAST(@Value / 10 AS INT) % 10,
			@FirstDigit INT = @Value % 10,
			@And VARCHAR(10),
			@Result VARCHAR(MAX) = '',
			@Separator VARCHAR(5)
	DECLARE @Units TABLE (Id INT, Nome VARCHAR(50))
	DECLARE @Dozens TABLE (Id INT, Nome VARCHAR(50))
	DECLARE @Hundreds TABLE (Id INT, Nome VARCHAR(50))

	IF @EnglishOrPortuguese = 1 BEGIN
		SET @And = ' e '
		INSERT @Units
			VALUES(0, ''),
				  (1, 'Um'),
				  (2, 'Dois'),
				  (3, 'Três'),
				  (4, 'Quatro'),
				  (5, 'Cinco'),
				  (6, 'Seis'),
				  (7, 'Sete'),
				  (8, 'Oito'),
				  (9, 'Nove'),
				  (10, 'Dez'),
				  (11, 'Onze'),
				  (12, 'Doze'),
				  (13, 'Treze'),
				  (14, 'Quatorze'),
				  (15, 'Quinze'),
				  (16, 'Dezesseis'),
				  (17, 'Dezessete'),
				  (18, 'Dezoito'),
				  (19, 'Dezenove')
			
		INSERT @Dozens
			VALUES(0, ''),
				  (1, 'Dez'),
				  (2, 'Vinte'),
				  (3, 'Trinta'),
				  (4, 'Quarenta'),
				  (5, 'Cinquenta'),
				  (6, 'Sessenta'),
				  (7, 'Setenta'),
				  (8, 'Oitenta'),
				  (9, 'Noventa')
			
		INSERT @Hundreds
			VALUES(0, ''),
				  (1, 'Cento'),
				  (2, 'Duzentos'),
				  (3, 'Trezentos'),
				  (4, 'Quatrocentos'),
				  (5, 'Quinhentos'),
				  (6, 'Seiscentos'),
				  (7, 'Setecentos'),
				  (8, 'Oitocentos'),
				  (9, 'Novecentos')
	END ELSE BEGIN
		SET @And = ' and '
		INSERT @Units
			VALUES(0, ''),
				  (1, 'One'),
				  (2, 'Two'),
				  (3, 'Three'),
				  (4, 'Four'),
				  (5, 'Five'),
				  (6, 'Six'),
				  (7, 'Seven'),
				  (8, 'Eight'),
				  (9, 'Nine'),
				  (10, 'Ten'),
				  (11, 'Eleven'),
				  (12, 'Twelve'),
				  (13, 'Thirteen'),
				  (14, 'Fourteen'),
				  (15, 'Fifteen'),
				  (16, 'Sixteen'),
				  (17, 'Seventeen'),
				  (18, 'Eighteen'),
				  (19, 'Nineteen')
			
		INSERT @Dozens
			VALUES(0, ''),
				  (1, 'Ten'),
				  (2, 'Twenty'),
				  (3, 'Thirty'),
				  (4, 'Forty'),
				  (5, 'Fifty'),
				  (6, 'Sixty'),
				  (7, 'Seventy'),
				  (8, 'Eighty'),
				  (9, 'Ninety')
			
		INSERT @Hundreds
			VALUES(0, ''),
				  (1, 'One Hundred'),
				  (2, 'Two Hundred'),
				  (3, 'Three Hundred'),
				  (4, 'Four Hundred'),
				  (5, 'Five Hundred'),
				  (6, 'Six Hundred'),
				  (7, 'Seven Hundred'),
				  (8, 'Eight Hundred'),
				  (9, 'Nine Hundred')
	END
	SET  @Separator = CASE WHEN @EnglishOrPortuguese = 1 THEN @And ELSE ' ' END
	IF @Value < 20 BEGIN
		SET @Result = (SELECT Nome FROM @Units WHERE Id = @Value)
	END ELSE IF @Value < 100 BEGIN
		SET @Result = (SELECT Nome FROM @Dozens WHERE Id = @SecondDigit) +
						 CASE WHEN @FirstDigit = 0 THEN '' ELSE CASE WHEN @EnglishOrPortuguese = 1 THEN @And ELSE '-' END + (SELECT Nome FROM @Units WHERE Id = @FirstDigit) END
	END ELSE IF @Value = 100 BEGIN
		SET @Result = CASE WHEN @EnglishOrPortuguese = 1 THEN 'Cem' ELSE 'One Hundred' END
	END ELSE IF @Value % 100 = 0 BEGIN
		SET @Result = (SELECT Nome FROM @Hundreds WHERE Id = @ThirdDigit)
	END ELSE BEGIN
		SET @Result = (SELECT Nome FROM @Hundreds WHERE Id = @ThirdDigit) +
						 CASE WHEN @Value < 20
							  THEN @Separator + (SELECT Nome FROM @Units WHERE Id = @SecondDigit * 10 + @FirstDigit)
						      ELSE @Separator + (SELECT Nome FROM @Dozens WHERE Id = @SecondDigit) + CASE WHEN @FirstDigit = 0 
																										  THEN '' 
																										  ELSE CASE WHEN @EnglishOrPortuguese = 1 THEN @And ELSE '-' END + (SELECT Nome FROM @Units WHERE Id = @FirstDigit)
																									 END
						 END
	END

	RETURN @Result
END
GO
/**********************************************************************************
Criar function [cruda].[NUMBER_IN_WORDS]
**********************************************************************************/
IF(SELECT object_id('[cruda].[NUMBER_IN_WORDS]', 'FN')) IS NULL
	EXEC('CREATE FUNCTION [cruda].[NUMBER_IN_WORDS]() RETURNS VARCHAR(MAX) AS BEGIN RETURN '''' END')
GO
ALTER FUNCTION [cruda].[NUMBER_IN_WORDS](@Value AS DECIMAL(18,2)
										,@EnglishOrPortuguese BIT = 1
										,@CurrencyInSingular VARCHAR(50) = NULL
										,@CurrencyInPlural VARCHAR(50) = NULL
										,@CentsInSingular VARCHAR(50) = NULL
										,@CentsInPlural VARCHAR(50) = NULL)
RETURNS VARCHAR(MAX) AS  
BEGIN 
	DECLARE @Power INT = 0,
		    @Separator VARCHAR(5) = '',
		    @PartialValue INT,
		    @Digito INT = 0,
		    @LastDigit INT,
			@Result VARCHAR(MAX) = '',
			@Minus VARCHAR(10) = '',
			@Of VARCHAR(10),
			@And VARCHAR(10),
			@ValueOfHundreds INT = 0,
			@ValueOfThousands INT = 0
	DECLARE @Powers TABLE (Id INT, NomeSingular VARCHAR(50), NomePlural VARCHAR(50))

	IF @EnglishOrPortuguese = 1 BEGIN
		IF @CurrencyInSingular IS NULL
			SET @CurrencyInSingular = 'Real'
		IF @CurrencyInPlural IS NULL
			SET @CurrencyInPlural = 'Reais'
		IF @CentsInSingular IS NULL
			SET @CentsInSingular = 'Centavo'
		IF @CentsInPlural IS NULL
			SET @CentsInPlural = 'Centavos'
		SET @Of = ' de '
		SET @And = ' e '
		IF @Value < 0 BEGIN
			SET @Value = -@Value
			SET @Minus = 'Menos'
		END	
		INSERT @Powers
			VALUES(0,'', ''),
				  (1,'Mil', 'Mil'),
				  (2,'Milhão', 'Milhões'),
				  (3,'Bilhão', 'Bilhões'),
				  (4,'Trilhão', 'Trilhões'),
				  (5,'Quatrilhão', 'Quatrilhões'),
				  (6,'Quintilhão', 'Quintilhões'),
				  (7,'Sextilhão', 'Sextilhões'),
				  (8,'Septilhão', 'Septilhões'),
				  (9,'Octilhão', 'Octilhões'),
				  (10,'Nonilhão', 'Nonilhões'),
				  (11,'Decilhão', 'Decilhões'),
			      (12,'Undecilhão', 'Undecilhões'),
				  (13,'Duodecilhão', 'Duodecilhões'),
				  (14,'Tredecilhão', 'Tredecilhões')
	END ELSE BEGIN
		IF @CurrencyInSingular IS NULL
			SET @CurrencyInSingular = 'Dollar'
		IF @CurrencyInPlural IS NULL
			SET @CurrencyInPlural = 'Dollars'
		IF @CentsInSingular IS NULL
			SET @CentsInSingular = 'Cent'
		IF @CentsInPlural IS NULL
			SET @CentsInPlural = 'Cents'
		SET @Of = ' of '
		SET @And = ' and '
		IF @Value < 0 BEGIN
			SET @Value = -@Value
			SET @Minus = 'Minus'
		END	
		INSERT @Powers
			VALUES(0,'', ''),
				  (1,'Thousand', 'Thousand'),
				  (2,'Million', 'Million'),
				  (3,'Billion', 'Billion'),
				  (4,'Trillion', 'Trillion'),
				  (5,'Quadrillion', 'Quadrillion'),
				  (6,'Quintillion', 'Quintillion'),
				  (7,'Sextillion', 'Sextillion'),
				  (8,'Septillion', 'Septillion'),
				  (9,'Octillion', 'Octillion'),
				  (10,'Nonillion', 'Nonillion'),
				  (11,'Decillion', 'Decillion'),
				  (12,'Undecillion', 'Undecillion'),
				  (13,'Duodecillion', 'Duodecillion'),
				  (14,'Tredecillion', 'Tredecillion')
	END
	SET @PartialValue = FLOOR(@Value)
	WHILE @PartialValue > 0 BEGIN
		SET @LastDigit = @Digito
		SET @Digito = @PartialValue % 1000
		IF @Power = 0 BEGIN
			SET @ValueOfHundreds = @Digito
		END ELSE IF @Power = 1 BEGIN
			SET @ValueOfThousands = @Digito
		END
		IF @Digito = 1 BEGIN
			 SET @Result = [cruda].[HUNDREDS_IN_WORDS](@Digito, @EnglishOrPortuguese) + ' ' + 
							  (SELECT NomeSingular FROM @Powers WHERE Id = @Power) + 
							  @Separator + @Result
		END ELSE IF @Digito > 0 BEGIN
			 SET @Result = [cruda].[HUNDREDS_IN_WORDS](@Digito, @EnglishOrPortuguese) + ' ' + 
							  (SELECT NomePlural FROM @Powers WHERE Id = @Power) + 
							  @Separator + @Result
		END
		SET @PartialValue = @PartialValue / 1000
		IF @Digito > 0 BEGIN
			IF (@Power = 0) BEGIN
				SET @Separator = CASE WHEN @EnglishOrPortuguese = 1 THEN @And ELSE ', ' END
			END ELSE BEGIN
				SET @Separator = ', '
			END
		END
		SET @Power = @Power + 1
	END
	SET @Result = RTRIM(@Result)
	IF @Result = '' BEGIN
		IF @Value = 0 BEGIN
			SET @Result = 'Zero ' + @CurrencyInPlural
		END
	END ELSE IF @Digito = 1 BEGIN
		IF @Power < 2 BEGIN
			SET @Result = @Result + ' ' + @CurrencyInSingular
		END ELSE IF @Power = 2 BEGIN
			SET @Result = @Result + ' ' + @CurrencyInPlural
		END ELSE BEGIN
			SET @Result = @Result + CASE WHEN @ValueOfHundreds > 0 OR @ValueOfThousands > 0 THEN ' ' ELSE @Of END + @CurrencyInPlural
		END
	END ELSE IF @Power <= 2 BEGIN
		SET @Result = @Result + ' ' + @CurrencyInPlural
	END ELSE BEGIN
		SET @Result = @Result + CASE WHEN @ValueOfHundreds > 0 OR @ValueOfThousands > 0 THEN ' ' ELSE @Of END + @CurrencyInPlural
	END
	SET @PartialValue = FLOOR(@Value * 100) % 100
	IF @PartialValue > 0 BEGIN
		IF @PartialValue = 1 BEGIN
			IF @Result = '' BEGIN
				SET @Result = [cruda].[HUNDREDS_IN_WORDS](@PartialValue, @EnglishOrPortuguese) + ' ' + @CentsInSingular + @Of + @CurrencyInSingular
			END ELSE BEGIN
				SET @Result = @Result + @And + [cruda].[HUNDREDS_IN_WORDS](@PartialValue, @EnglishOrPortuguese) + ' ' + @CentsInSingular 
			END
		END ELSE BEGIN
			IF @Result = '' BEGIN
				SET @Result = [cruda].[HUNDREDS_IN_WORDS](@PartialValue, @EnglishOrPortuguese) + ' ' + @CentsInPlural + @Of + @CurrencyInPlural
			END ELSE BEGIN
				SET @Result = @Result + @And + [cruda].[HUNDREDS_IN_WORDS](@PartialValue, @EnglishOrPortuguese) + ' ' + @CentsInPlural
			END
		END
	END		

	RETURN @Minus + ' ' + @Result
END
GO
/**********************************************************************************
Criar stored procedure [cruda].[IS_EQUAL]
**********************************************************************************/
IF (SELECT object_id('[cruda].[IS_EQUAL]', 'FN')) IS NULL
    EXEC('CREATE FUNCTION [cruda].[IS_EQUAL]() RETURNS BIT AS BEGIN RETURN 1 END')
GO

ALTER FUNCTION [cruda].[IS_EQUAL](
    @LeftValue NVARCHAR(MAX),
    @RightValue NVARCHAR(4000),
    @TypeValue VARCHAR(25)
)
RETURNS BIT AS 
BEGIN
    IF @LeftValue IS NULL AND @RightValue IS NULL
        RETURN 1;
    IF @LeftValue IS NULL OR @RightValue IS NULL
        RETURN 0;
	
    -- Compara��es num�ricas
	IF @TypeValue = 'int'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS int) = TRY_CAST(@RightValue AS int) THEN 1 ELSE 0 END;
	IF @TypeValue = 'smallint'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS smallint) = TRY_CAST(@RightValue AS smallint) THEN 1 ELSE 0 END;
	IF @TypeValue = 'tinyint'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS tinyint) = TRY_CAST(@RightValue AS tinyint) THEN 1 ELSE 0 END;
	IF @TypeValue = 'int'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS int) = TRY_CAST(@RightValue AS int) THEN 1 ELSE 0 END;

	-- Compara��es decimais e monet�rias
	IF @TypeValue = 'decimal'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS decimal(38, 18)) = TRY_CAST(@RightValue AS decimal(38, 18)) THEN 1 ELSE 0 END;
	IF @TypeValue = 'numeric'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS numeric(38, 18)) = TRY_CAST(@RightValue AS numeric(38, 18)) THEN 1 ELSE 0 END;
	IF @TypeValue = 'float'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS float) = TRY_CAST(@RightValue AS float) THEN 1 ELSE 0 END;
	IF @TypeValue = 'real'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS real) = TRY_CAST(@RightValue AS real) THEN 1 ELSE 0 END;
	IF @TypeValue = 'money'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS money) = TRY_CAST(@RightValue AS money) THEN 1 ELSE 0 END;
	IF @TypeValue = 'smallmoney'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS smallmoney) = TRY_CAST(@RightValue AS smallmoney) THEN 1 ELSE 0 END;
    
    -- Compara��o de strings
	IF @TypeValue IN ('varchar', 'char', 'text', 'nvarchar', 'nchar', 'ntext')
        RETURN CASE WHEN @LeftValue = @RightValue THEN 1 ELSE 0 END;

    -- Compara��es de datas
	IF @TypeValue = 'date'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS date) = TRY_CAST(@RightValue AS date) THEN 1 ELSE 0 END;
	IF @TypeValue = 'datetime'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS datetime) = TRY_CAST(@RightValue AS datetime) THEN 1 ELSE 0 END;
	IF @TypeValue = 'datetime2'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS datetime2) = TRY_CAST(@RightValue AS datetime2) THEN 1 ELSE 0 END;
	IF @TypeValue = 'smalldatetime'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS smalldatetime) = TRY_CAST(@RightValue AS smalldatetime) THEN 1 ELSE 0 END;
	IF @TypeValue = 'datetimeoffset'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS datetimeoffset) = TRY_CAST(@RightValue AS datetimeoffset) THEN 1 ELSE 0 END;
	IF @TypeValue = 'time'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS time) = TRY_CAST(@RightValue AS time) THEN 1 ELSE 0 END;

    -- Compara��es de tipos especiais
    IF @TypeValue = 'bit'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS BIT) = TRY_CAST(@RightValue AS BIT) THEN 1 ELSE 0 END;
    IF @TypeValue = 'sysname'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS SYSNAME) = TRY_CAST(@RightValue AS SYSNAME) THEN 1 ELSE 0 END;
    IF @TypeValue = 'uniqueidentifier'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS UNIQUEIDENTIFIER) = TRY_CAST(@RightValue AS UNIQUEIDENTIFIER) THEN 1 ELSE 0 END;

    -- Compara��o final como VARBINARY(MAX) (fallback)
    RETURN CASE WHEN TRY_CAST(@LeftValue AS VARBINARY(MAX)) = TRY_CAST(@RightValue AS VARBINARY(MAX)) THEN 1 ELSE 0 END;
END
GO
/**********************************************************************************
Criar stored procedure [cruda].[JSON_EXTRACT]
**********************************************************************************/
IF (SELECT object_id('[cruda].[JSON_EXTRACT]', 'FN')) IS NULL
    EXEC('CREATE FUNCTION [cruda].[JSON_EXTRACT]() RETURNS NVARCHAR(MAX) AS BEGIN RETURN '''' END')
GO
ALTER FUNCTION [cruda].[JSON_EXTRACT](@json NVARCHAR(MAX),
                                              @propertyPath NVARCHAR(MAX))
RETURNS NVARCHAR(MAX) AS
BEGIN
    DECLARE @result NVARCHAR(MAX);

    SET @result = JSON_QUERY(@json, @propertyPath);

    IF @result IS NULL
        SET @result = JSON_VALUE(@json, @propertyPath);

    RETURN @result;
END
GO
/**********************************************************************************
Criar tabela [cruda].[Transactions]
**********************************************************************************/
IF (SELECT object_id('[cruda].[Transactions]', 'U')) IS NOT NULL
    DROP TABLE [cruda].[Transactions]
CREATE TABLE [cruda].[Transactions]([Id] [int] IDENTITY(1,1) NOT NULL
                                   ,[LoginId] [int] NOT NULL
                                   ,[IsConfirmed] [bit] NULL
                                   ,[CreatedAt] datetime NOT NULL
                                   ,[CreatedBy] varchar(25) NOT NULL
                                   ,[UpdatedAt] datetime NULL
                                   ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [cruda].[Transactions] ADD CONSTRAINT PK_Transactions PRIMARY KEY CLUSTERED([Id])
CREATE INDEX [IDX_Transactions_LoginId_IsConfirmed] ON [cruda].[Transactions]([LoginId], [IsConfirmed])
GO
/**********************************************************************************
Criar tabela [cruda].[Operations]
**********************************************************************************/
IF (SELECT object_id('[cruda].[Operations]', 'U')) IS NOT NULL
    DROP TABLE [cruda].[Operations]
CREATE TABLE [cruda].[Operations]([Id] [int] IDENTITY(1,1) NOT NULL
                                 ,[TransactionId] [int] NOT NULL
                                 ,[TableName] [varchar](25) NOT NULL
                                 ,[Action] [varchar](15) NOT NULL
                                 ,[LastRecord] [varchar](max) NULL
                                 ,[ActualRecord] [varchar](max) NOT NULL
                                 ,[IsConfirmed] [bit] NULL
                                 ,[CreatedAt] datetime NOT NULL
                                 ,[CreatedBy] varchar(25) NOT NULL
                                 ,[UpdatedAt] datetime NULL
                                 ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [cruda].[Operations] ADD CONSTRAINT PK_Operations PRIMARY KEY CLUSTERED([Id])
CREATE INDEX [IDX_Operations_TransactionId_TableName_Action_IsConfirmed] ON [cruda].[Operations]([TransactionId], [TableName], [Action], [IsConfirmed])
GO
ALTER TABLE [cruda].[Operations] WITH CHECK 
    ADD CONSTRAINT [FK_Operations_Transactions] 
    FOREIGN KEY([TransactionId]) 
    REFERENCES [cruda].[Transactions] ([Id])
GO
ALTER TABLE [cruda].[Operations] CHECK CONSTRAINT [FK_Operations_Transactions]
GO
/**********************************************************************************
Criar stored procedure [cruda].TransactionBegin]
**********************************************************************************/
IF(SELECT object_id('[cruda].[TransactionBegin]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [cruda].[TransactionBegin] AS PRINT 1')
GO
ALTER PROCEDURE[cruda].[TransactionBegin](@LoginId INT
										 ,@UserName VARCHAR(25)) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED
		
		DECLARE @TransactionId	INT

		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]
		IF @LoginId IS NULL
			THROW 51000, 'Valor de @LoginId é requerido', 1
		INSERT [cruda].[Transactions] ([LoginId]
									  ,[IsConfirmed]
									  ,[CreatedAt]
									  ,[CreatedBy])
								VALUES (@LoginId
									   ,NULL
									   ,GETDATE()
									   ,@UserName)
		SET @TransactionId = @@IDENTITY
		COMMIT TRANSACTION

		RETURN CAST(@TransactionId AS INT)
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [cruda].[TransactionCommit]
**********************************************************************************/
IF(SELECT object_id('[cruda].[TransactionCommit]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [cruda].[TransactionCommit] AS PRINT 1')
GO
ALTER PROCEDURE[cruda].[TransactionCommit](@TransactionId INT
										  ,@UserName VARCHAR(25)) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		DECLARE @LoginId INT
				,@OperationId INT
				,@TableName VARCHAR(25)
				,@IsConfirmed BIT
				,@CreatedBy VARCHAR(25)
				,@sql VARCHAR(MAX)

		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]
		IF @TransactionId IS NULL
			THROW 51000, 'Valor de @TransactionId é requerido', 1
		SELECT @LoginId = [LoginId]
			  ,@IsConfirmed = [IsConfirmed]
			  ,@CreatedBy = [CreatedBy]
			FROM [cruda].[Transactions]
			WHERE [Id] = @TransactionId
		IF @@ROWCOUNT = 0
			THROW 51000, 'Transação inexistente', 1
		IF @IsConfirmed IS NOT NULL BEGIN
			SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
			THROW 51000, @ErrorMessage, 1
		END
		IF @UserName <> @CreatedBy
			THROW 51000, 'Erro grave de segurança', 1
		WHILE 1 = 1 BEGIN
			SELECT TOP 1 @OperationId = [Id]
						,@TableName = [TableName]
				FROM [cruda].[Operations]
				WHERE [TransactionId] = @TransactionId
						AND [IsConfirmed] IS NULL
			IF @@ROWCOUNT = 0
				BREAK
			SET @sql = '[dbo].[' + @TableName + 'Commit] @LoginId = ' + CAST(@LoginId AS VARCHAR) + ', @OperationId = ' + CAST(@OperationId AS VARCHAR)
			EXEC @sql
		END
		UPDATE [cruda].[Transactions]
			SET [IsConfirmed] = 1
				,[UpdatedBy] = @UserName
				,[UpdatedAt] = GETDATE()
			WHERE [Id] = @TransactionId
		COMMIT TRANSACTION

		RETURN 1
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [cruda].[TransactionRollback]
**********************************************************************************/
IF(SELECT object_id('[cruda].[TransactionRollback]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [cruda].[TransactionRollback] AS PRINT 1')
GO
ALTER PROCEDURE[cruda].[TransactionRollback](@TransactionId INT
											,@UserName VARCHAR(25)) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		DECLARE @OperationId INT
				,@CreatedBy VARCHAR(25)
				,@IsConfirmed BIT

		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]
		IF @TransactionId IS NULL
			THROW 51000, 'Valor de @TransactionId é requerido', 1
		SELECT @IsConfirmed = [IsConfirmed]
			  ,@CreatedBy = [CreatedBy]
			FROM [cruda].[Transactions]
			WHERE [Id] = @TransactionId
		IF @@ROWCOUNT = 0
			THROW 51000, 'Transação inexistente', 1
		IF @IsConfirmed IS NOT NULL BEGIN
			SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
			THROW 51000, @ErrorMessage, 1
		END

		IF @UserName <> @CreatedBy
			THROW 51000, 'Erro grave de segurança', 1
		WHILE 1 = 1 BEGIN
			SELECT TOP 1 @OperationId = [Id]
						,@CreatedBy = [CreatedBy]
				FROM [cruda].[Operations]
				WHERE [TransactionId] = @TransactionId
						AND [IsConfirmed] IS NULL
				ORDER BY [Id]
			IF @@ROWCOUNT = 0
				BREAK
			IF @UserName <> @CreatedBy
				THROW 51000, 'Erro grave de segurança', 1
			UPDATE [cruda].[Operations]
				SET [IsConfirmed] = 0
					,[UpdatedBy] = @UserName
					,[UpdatedAt] = GETDATE()
				WHERE [Id] = @OperationId
		END
		UPDATE [cruda].[Transactions]
			SET [IsConfirmed] = 0
				,[UpdatedBy] = @UserName
				,[UpdatedAt] = GETDATE()
			WHERE [Id] = @TransactionId
		COMMIT TRANSACTION

		RETURN 1
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar tabela [dbo].[Categories]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Categories]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Categories]
CREATE TABLE [dbo].[Categories]([Id] tinyint NOT NULL CHECK ([Id] >= CAST('1' AS tinyint) AND [Id] <= CAST('255' AS tinyint))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[HtmlInputType] nvarchar(10) NULL
                                    ,[HtmlInputAlign] nvarchar(6) NULL
                                    ,[AskEncrypted] bit NOT NULL
                                    ,[AskMask] bit NOT NULL
                                    ,[AskListable] bit NOT NULL
                                    ,[AskDefault] bit NOT NULL
                                    ,[AskMinimum] bit NOT NULL
                                    ,[AskMaximum] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Categories] ADD CONSTRAINT PK_Categories PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Categories_Name] ON [dbo].[Categories]([Name] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Types]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Types]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Types]
CREATE TABLE [dbo].[Types]([Id] tinyint NOT NULL CHECK ([Id] >= CAST('1' AS tinyint) AND [Id] <= CAST('255' AS tinyint))
                                    ,[CategoryId] tinyint NOT NULL CHECK ([CategoryId] >= CAST('0' AS tinyint) AND [CategoryId] <= CAST('255' AS tinyint))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Minimum] nvarchar(MAX) NULL
                                    ,[Maximum] nvarchar(MAX) NULL
                                    ,[AskLength] bit NOT NULL
                                    ,[AskDecimals] bit NOT NULL
                                    ,[AskPrimarykey] bit NOT NULL
                                    ,[AskAutoincrement] bit NOT NULL
                                    ,[AskFilterable] bit NOT NULL
                                    ,[AskGridable] bit NOT NULL
                                    ,[AskCodification] bit NOT NULL
                                    ,[AskFormula] bit NOT NULL
                                    ,[AllowMaxLength] bit NOT NULL
                                    ,[IsActive] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Types] ADD CONSTRAINT PK_Types PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Types_Name] ON [dbo].[Types]([Name] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Masks]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Masks]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Masks]
CREATE TABLE [dbo].[Masks]([Id] int NOT NULL CHECK ([Id] >= CAST('-2147483648' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Mask] nvarchar(MAX) NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Masks] ADD CONSTRAINT PK_Masks PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Masks_Name] ON [dbo].[Masks]([Name] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Domains]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Domains]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Domains]
CREATE TABLE [dbo].[Domains]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[TypeId] tinyint NOT NULL CHECK ([TypeId] >= CAST('1' AS tinyint) AND [TypeId] <= CAST('255' AS tinyint))
                                    ,[MaskId] int NULL CHECK ([MaskId] >= CAST('-2147483648' AS int) AND [MaskId] <= CAST('2147483647' AS int))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Length] smallint NULL CHECK ([Length] >= CAST('0' AS smallint) AND [Length] <= CAST('32767' AS smallint))
                                    ,[Decimals] tinyint NULL CHECK ([Decimals] >= CAST('0' AS tinyint) AND [Decimals] <= CAST('255' AS tinyint))
                                    ,[ValidValues] nvarchar(MAX) NULL
                                    ,[Default] nvarchar(MAX) NULL
                                    ,[Minimum] nvarchar(MAX) NULL
                                    ,[Maximum] nvarchar(MAX) NULL
                                    ,[Codification] nvarchar(5) NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Domains] ADD CONSTRAINT PK_Domains PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Domains_Name] ON [dbo].[Domains]([Name] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Systems]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Systems]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Systems]
CREATE TABLE [dbo].[Systems]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[ClientName] nvarchar(15) NOT NULL
                                    ,[MaxRetryLogins] tinyint NOT NULL DEFAULT CAST('5' AS tinyint) CHECK ([MaxRetryLogins] >= CAST('1' AS tinyint) AND [MaxRetryLogins] <= CAST('255' AS tinyint))
                                    ,[IsOffAir] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Systems] ADD CONSTRAINT PK_Systems PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Systems_Name] ON [dbo].[Systems]([Name] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Menus]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Menus]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Menus]
CREATE TABLE [dbo].[Menus]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[SystemId] int NOT NULL CHECK ([SystemId] >= CAST('1' AS int) AND [SystemId] <= CAST('2147483647' AS int))
                                    ,[Sequence] smallint NOT NULL CHECK ([Sequence] >= CAST('1' AS smallint) AND [Sequence] <= CAST('32767' AS smallint))
                                    ,[Caption] nvarchar(20) NOT NULL
                                    ,[Message] nvarchar(50) NOT NULL
                                    ,[Action] nvarchar(50) NULL
                                    ,[ParentMenuId] int NULL CHECK ([ParentMenuId] >= CAST('1' AS int) AND [ParentMenuId] <= CAST('2147483647' AS int))
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Menus] ADD CONSTRAINT PK_Menus PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Menus_SystemId_Sequence] ON [dbo].[Menus]([SystemId] ASC, [Sequence] ASC)
CREATE UNIQUE INDEX [UNQ_Menus_SystemId_Caption] ON [dbo].[Menus]([SystemId] ASC, [Caption] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Users]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Users]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Users]
CREATE TABLE [dbo].[Users]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Password] nvarchar(256) NOT NULL
                                    ,[FullName] nvarchar(50) NOT NULL
                                    ,[RetryLogins] tinyint NOT NULL DEFAULT CAST('0' AS tinyint) CHECK ([RetryLogins] >= CAST('0' AS tinyint) AND [RetryLogins] <= CAST('255' AS tinyint))
                                    ,[IsActive] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Users] ADD CONSTRAINT PK_Users PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Users_Name] ON [dbo].[Users]([Name] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[SystemsUsers]
**********************************************************************************/
IF (SELECT object_id('[dbo].[SystemsUsers]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[SystemsUsers]
CREATE TABLE [dbo].[SystemsUsers]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[SystemId] int NOT NULL CHECK ([SystemId] >= CAST('1' AS int) AND [SystemId] <= CAST('2147483647' AS int))
                                    ,[UserId] int NOT NULL CHECK ([UserId] >= CAST('1' AS int) AND [UserId] <= CAST('2147483647' AS int))
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[SystemsUsers] ADD CONSTRAINT PK_SystemsUsers PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_SystemsUsers_SystemId_UserId] ON [dbo].[SystemsUsers]([SystemId] ASC, [UserId] ASC)
CREATE UNIQUE INDEX [UNQ_SystemsUsers_Description] ON [dbo].[SystemsUsers]([Description] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Databases]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Databases]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Databases]
CREATE TABLE [dbo].[Databases]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[Alias] nvarchar(25) NOT NULL
                                    ,[ServerName] nvarchar(50) NULL
                                    ,[HostName] nvarchar(25) NULL
                                    ,[Port] int NULL CHECK ([Port] >= CAST('1' AS int) AND [Port] <= CAST('65535' AS int))
                                    ,[Logon] nvarchar(256) NULL
                                    ,[Password] nvarchar(256) NULL
                                    ,[Folder] nvarchar(256) NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Databases] ADD CONSTRAINT PK_Databases PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Databases_Name] ON [dbo].[Databases]([Name] ASC)
CREATE UNIQUE INDEX [UNQ_Databases_Alias] ON [dbo].[Databases]([Alias] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[SystemsDatabases]
**********************************************************************************/
IF (SELECT object_id('[dbo].[SystemsDatabases]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[SystemsDatabases]
CREATE TABLE [dbo].[SystemsDatabases]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[SystemId] int NOT NULL CHECK ([SystemId] >= CAST('1' AS int) AND [SystemId] <= CAST('2147483647' AS int))
                                    ,[DatabaseId] int NOT NULL CHECK ([DatabaseId] >= CAST('1' AS int) AND [DatabaseId] <= CAST('2147483647' AS int))
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[SystemsDatabases] ADD CONSTRAINT PK_SystemsDatabases PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_SystemsDatabases_SystemId_DatabaseId] ON [dbo].[SystemsDatabases]([SystemId] ASC, [DatabaseId] ASC)
CREATE UNIQUE INDEX [UNQ_SystemsDatabases_Description] ON [dbo].[SystemsDatabases]([Description] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Tables]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Tables]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Tables]
CREATE TABLE [dbo].[Tables]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Alias] nvarchar(25) NOT NULL
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[ParentTableId] int NULL CHECK ([ParentTableId] >= CAST('0' AS int) AND [ParentTableId] <= CAST('2147483647' AS int))
                                    ,[IsPaged] bit NOT NULL
                                    ,[CurrentId] int NOT NULL DEFAULT CAST('0' AS int) CHECK ([CurrentId] >= CAST('0' AS int) AND [CurrentId] <= CAST('2147483647' AS int))
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Tables] ADD CONSTRAINT PK_Tables PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Tables_Name] ON [dbo].[Tables]([Name] ASC)
CREATE UNIQUE INDEX [UNQ_Tables_Alias] ON [dbo].[Tables]([Alias] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[DatabasesTables]
**********************************************************************************/
IF (SELECT object_id('[dbo].[DatabasesTables]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[DatabasesTables]
CREATE TABLE [dbo].[DatabasesTables]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[DatabaseId] int NOT NULL CHECK ([DatabaseId] >= CAST('1' AS int) AND [DatabaseId] <= CAST('2147483647' AS int))
                                    ,[TableId] int NOT NULL CHECK ([TableId] >= CAST('1' AS int) AND [TableId] <= CAST('2147483647' AS int))
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[DatabasesTables] ADD CONSTRAINT PK_DatabasesTables PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_DatabasesTables_DatabaseId_TableId] ON [dbo].[DatabasesTables]([Id] ASC, [TableId] ASC)
CREATE UNIQUE INDEX [UNQ_DatabasesTables_Description] ON [dbo].[DatabasesTables]([Description] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Columns]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Columns]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Columns]
CREATE TABLE [dbo].[Columns]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[TableId] int NOT NULL CHECK ([TableId] >= CAST('1' AS int) AND [TableId] <= CAST('2147483647' AS int))
                                    ,[Sequence] smallint NOT NULL CHECK ([Sequence] >= CAST('1' AS smallint) AND [Sequence] <= CAST('32767' AS smallint))
                                    ,[DomainId] int NOT NULL CHECK ([DomainId] >= CAST('1' AS int) AND [DomainId] <= CAST('2147483647' AS int))
                                    ,[ReferenceTableId] int NULL CHECK ([ReferenceTableId] >= CAST('1' AS int) AND [ReferenceTableId] <= CAST('2147483647' AS int))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[Title] nvarchar(25) NOT NULL
                                    ,[Caption] nvarchar(25) NOT NULL
                                    ,[ValidValues] nvarchar(MAX) NULL
                                    ,[Default] nvarchar(MAX) NULL
                                    ,[Minimum] nvarchar(MAX) NULL
                                    ,[Maximum] nvarchar(MAX) NULL
                                    ,[IsPrimarykey] bit NULL
                                    ,[IsAutoIncrement] bit NULL
                                    ,[IsRequired] bit NOT NULL
                                    ,[IsListable] bit NULL
                                    ,[IsFilterable] bit NULL
                                    ,[IsEditable] bit NULL
                                    ,[IsGridable] bit NULL
                                    ,[IsEncrypted] bit NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Columns] ADD CONSTRAINT PK_Columns PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Columns_TableId_Name] ON [dbo].[Columns]([TableId] ASC, [Name] ASC)
CREATE UNIQUE INDEX [UNQ_Columns_TableId_Sequence] ON [dbo].[Columns]([TableId] ASC, [Sequence] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Indexes]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Indexes]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Indexes]
CREATE TABLE [dbo].[Indexes]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[DatabaseId] int NOT NULL CHECK ([DatabaseId] >= CAST('1' AS int) AND [DatabaseId] <= CAST('2147483647' AS int))
                                    ,[TableId] int NOT NULL CHECK ([TableId] >= CAST('1' AS int) AND [TableId] <= CAST('2147483647' AS int))
                                    ,[Name] nvarchar(50) NOT NULL
                                    ,[IsUnique] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Indexes] ADD CONSTRAINT PK_Indexes PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Indexes_DatabaseId_Name] ON [dbo].[Indexes]([DatabaseId] ASC, [Name] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Indexkeys]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Indexkeys]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Indexkeys]
CREATE TABLE [dbo].[Indexkeys]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[IndexId] int NOT NULL CHECK ([IndexId] >= CAST('1' AS int) AND [IndexId] <= CAST('2147483647' AS int))
                                    ,[Sequence] smallint NOT NULL CHECK ([Sequence] >= CAST('1' AS smallint) AND [Sequence] <= CAST('32767' AS smallint))
                                    ,[ColumnId] int NOT NULL CHECK ([ColumnId] >= CAST('1' AS int) AND [ColumnId] <= CAST('2147483647' AS int))
                                    ,[IsDescending] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Indexkeys] ADD CONSTRAINT PK_Indexkeys PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Indexkeys_IndexId_Sequence] ON [dbo].[Indexkeys]([IndexId] ASC, [Sequence] ASC)
CREATE UNIQUE INDEX [UNQ_Indexkeys_IndexId_ColumnId] ON [dbo].[Indexkeys]([IndexId] ASC, [ColumnId] ASC)
GO
/**********************************************************************************
Criar tabela [dbo].[Logins]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Logins]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Logins]
CREATE TABLE [dbo].[Logins]([Id] int NOT NULL CHECK ([Id] >= CAST('1' AS int) AND [Id] <= CAST('2147483647' AS int))
                                    ,[SystemId] int NOT NULL CHECK ([SystemId] >= CAST('1' AS int) AND [SystemId] <= CAST('2147483647' AS int))
                                    ,[UserId] int NOT NULL CHECK ([UserId] >= CAST('1' AS int) AND [UserId] <= CAST('2147483647' AS int))
                                    ,[PublicKey] nvarchar(256) NOT NULL
                                    ,[IsLogged] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] varchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] varchar(25) NULL)
ALTER TABLE [dbo].[Logins] ADD CONSTRAINT PK_Logins PRIMARY KEY CLUSTERED ([Id])
CREATE  INDEX [IDX_Logins_SystemId_UserId_IsLogged] ON [dbo].[Logins]([SystemId] ASC, [UserId] ASC, [IsLogged] ASC)
GO
/**********************************************************************************
Criar referências de [dbo].[Types]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Types_Categories')
    ALTER TABLE [dbo].[Types] DROP CONSTRAINT FK_Types_Categories
GO
ALTER TABLE [dbo].[Types] WITH CHECK 
    ADD CONSTRAINT [FK_Types_Categories] 
    FOREIGN KEY([CategoryId]) 
    REFERENCES [dbo].[Categories] ([Id])
GO
ALTER TABLE [dbo].[Types] CHECK CONSTRAINT [FK_Types_Categories]
GO
/**********************************************************************************
Criar referências de [dbo].[Domains]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Domains_Types')
    ALTER TABLE [dbo].[Domains] DROP CONSTRAINT FK_Domains_Types
GO
ALTER TABLE [dbo].[Domains] WITH CHECK 
    ADD CONSTRAINT [FK_Domains_Types] 
    FOREIGN KEY([TypeId]) 
    REFERENCES [dbo].[Types] ([Id])
GO
ALTER TABLE [dbo].[Domains] CHECK CONSTRAINT [FK_Domains_Types]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Domains_Masks')
    ALTER TABLE [dbo].[Domains] DROP CONSTRAINT FK_Domains_Masks
GO
ALTER TABLE [dbo].[Domains] WITH CHECK 
    ADD CONSTRAINT [FK_Domains_Masks] 
    FOREIGN KEY([MaskId]) 
    REFERENCES [dbo].[Masks] ([Id])
GO
ALTER TABLE [dbo].[Domains] CHECK CONSTRAINT [FK_Domains_Masks]
GO
/**********************************************************************************
Criar referências de [dbo].[Menus]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Menus_Systems')
    ALTER TABLE [dbo].[Menus] DROP CONSTRAINT FK_Menus_Systems
GO
ALTER TABLE [dbo].[Menus] WITH CHECK 
    ADD CONSTRAINT [FK_Menus_Systems] 
    FOREIGN KEY([SystemId]) 
    REFERENCES [dbo].[Systems] ([Id])
GO
ALTER TABLE [dbo].[Menus] CHECK CONSTRAINT [FK_Menus_Systems]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Menus_Menus')
    ALTER TABLE [dbo].[Menus] DROP CONSTRAINT FK_Menus_Menus
GO
ALTER TABLE [dbo].[Menus] WITH CHECK 
    ADD CONSTRAINT [FK_Menus_Menus] 
    FOREIGN KEY([ParentMenuId]) 
    REFERENCES [dbo].[Menus] ([Id])
GO
ALTER TABLE [dbo].[Menus] CHECK CONSTRAINT [FK_Menus_Menus]
GO
/**********************************************************************************
Criar referências de [dbo].[SystemsUsers]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_SystemsUsers_Systems')
    ALTER TABLE [dbo].[SystemsUsers] DROP CONSTRAINT FK_SystemsUsers_Systems
GO
ALTER TABLE [dbo].[SystemsUsers] WITH CHECK 
    ADD CONSTRAINT [FK_SystemsUsers_Systems] 
    FOREIGN KEY([SystemId]) 
    REFERENCES [dbo].[Systems] ([Id])
GO
ALTER TABLE [dbo].[SystemsUsers] CHECK CONSTRAINT [FK_SystemsUsers_Systems]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_SystemsUsers_Users')
    ALTER TABLE [dbo].[SystemsUsers] DROP CONSTRAINT FK_SystemsUsers_Users
GO
ALTER TABLE [dbo].[SystemsUsers] WITH CHECK 
    ADD CONSTRAINT [FK_SystemsUsers_Users] 
    FOREIGN KEY([UserId]) 
    REFERENCES [dbo].[Users] ([Id])
GO
ALTER TABLE [dbo].[SystemsUsers] CHECK CONSTRAINT [FK_SystemsUsers_Users]
GO
/**********************************************************************************
Criar referências de [dbo].[SystemsDatabases]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_SystemsDatabases_Systems')
    ALTER TABLE [dbo].[SystemsDatabases] DROP CONSTRAINT FK_SystemsDatabases_Systems
GO
ALTER TABLE [dbo].[SystemsDatabases] WITH CHECK 
    ADD CONSTRAINT [FK_SystemsDatabases_Systems] 
    FOREIGN KEY([SystemId]) 
    REFERENCES [dbo].[Systems] ([Id])
GO
ALTER TABLE [dbo].[SystemsDatabases] CHECK CONSTRAINT [FK_SystemsDatabases_Systems]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_SystemsDatabases_Databases')
    ALTER TABLE [dbo].[SystemsDatabases] DROP CONSTRAINT FK_SystemsDatabases_Databases
GO
ALTER TABLE [dbo].[SystemsDatabases] WITH CHECK 
    ADD CONSTRAINT [FK_SystemsDatabases_Databases] 
    FOREIGN KEY([DatabaseId]) 
    REFERENCES [dbo].[Databases] ([Id])
GO
ALTER TABLE [dbo].[SystemsDatabases] CHECK CONSTRAINT [FK_SystemsDatabases_Databases]
GO
/**********************************************************************************
Criar referências de [dbo].[DatabasesTables]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_DatabasesTables_Databases')
    ALTER TABLE [dbo].[DatabasesTables] DROP CONSTRAINT FK_DatabasesTables_Databases
GO
ALTER TABLE [dbo].[DatabasesTables] WITH CHECK 
    ADD CONSTRAINT [FK_DatabasesTables_Databases] 
    FOREIGN KEY([DatabaseId]) 
    REFERENCES [dbo].[Databases] ([Id])
GO
ALTER TABLE [dbo].[DatabasesTables] CHECK CONSTRAINT [FK_DatabasesTables_Databases]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_DatabasesTables_Tables')
    ALTER TABLE [dbo].[DatabasesTables] DROP CONSTRAINT FK_DatabasesTables_Tables
GO
ALTER TABLE [dbo].[DatabasesTables] WITH CHECK 
    ADD CONSTRAINT [FK_DatabasesTables_Tables] 
    FOREIGN KEY([TableId]) 
    REFERENCES [dbo].[Tables] ([Id])
GO
ALTER TABLE [dbo].[DatabasesTables] CHECK CONSTRAINT [FK_DatabasesTables_Tables]
GO
/**********************************************************************************
Criar referências de [dbo].[Columns]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Columns_Tables')
    ALTER TABLE [dbo].[Columns] DROP CONSTRAINT FK_Columns_Tables
GO
ALTER TABLE [dbo].[Columns] WITH CHECK 
    ADD CONSTRAINT [FK_Columns_Tables] 
    FOREIGN KEY([TableId]) 
    REFERENCES [dbo].[Tables] ([Id])
GO
ALTER TABLE [dbo].[Columns] CHECK CONSTRAINT [FK_Columns_Tables]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Columns_Domains')
    ALTER TABLE [dbo].[Columns] DROP CONSTRAINT FK_Columns_Domains
GO
ALTER TABLE [dbo].[Columns] WITH CHECK 
    ADD CONSTRAINT [FK_Columns_Domains] 
    FOREIGN KEY([DomainId]) 
    REFERENCES [dbo].[Domains] ([Id])
GO
ALTER TABLE [dbo].[Columns] CHECK CONSTRAINT [FK_Columns_Domains]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Columns_Tables')
    ALTER TABLE [dbo].[Columns] DROP CONSTRAINT FK_Columns_Tables
GO
ALTER TABLE [dbo].[Columns] WITH CHECK 
    ADD CONSTRAINT [FK_Columns_Tables] 
    FOREIGN KEY([ReferenceTableId]) 
    REFERENCES [dbo].[Tables] ([Id])
GO
ALTER TABLE [dbo].[Columns] CHECK CONSTRAINT [FK_Columns_Tables]
GO
/**********************************************************************************
Criar referências de [dbo].[Indexes]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Indexes_Databases')
    ALTER TABLE [dbo].[Indexes] DROP CONSTRAINT FK_Indexes_Databases
GO
ALTER TABLE [dbo].[Indexes] WITH CHECK 
    ADD CONSTRAINT [FK_Indexes_Databases] 
    FOREIGN KEY([DatabaseId]) 
    REFERENCES [dbo].[Databases] ([Id])
GO
ALTER TABLE [dbo].[Indexes] CHECK CONSTRAINT [FK_Indexes_Databases]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Indexes_Tables')
    ALTER TABLE [dbo].[Indexes] DROP CONSTRAINT FK_Indexes_Tables
GO
ALTER TABLE [dbo].[Indexes] WITH CHECK 
    ADD CONSTRAINT [FK_Indexes_Tables] 
    FOREIGN KEY([TableId]) 
    REFERENCES [dbo].[Tables] ([Id])
GO
ALTER TABLE [dbo].[Indexes] CHECK CONSTRAINT [FK_Indexes_Tables]
GO
/**********************************************************************************
Criar referências de [dbo].[Indexkeys]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Indexkeys_Indexes')
    ALTER TABLE [dbo].[Indexkeys] DROP CONSTRAINT FK_Indexkeys_Indexes
GO
ALTER TABLE [dbo].[Indexkeys] WITH CHECK 
    ADD CONSTRAINT [FK_Indexkeys_Indexes] 
    FOREIGN KEY([IndexId]) 
    REFERENCES [dbo].[Indexes] ([Id])
GO
ALTER TABLE [dbo].[Indexkeys] CHECK CONSTRAINT [FK_Indexkeys_Indexes]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Indexkeys_Columns')
    ALTER TABLE [dbo].[Indexkeys] DROP CONSTRAINT FK_Indexkeys_Columns
GO
ALTER TABLE [dbo].[Indexkeys] WITH CHECK 
    ADD CONSTRAINT [FK_Indexkeys_Columns] 
    FOREIGN KEY([ColumnId]) 
    REFERENCES [dbo].[Columns] ([Id])
GO
ALTER TABLE [dbo].[Indexkeys] CHECK CONSTRAINT [FK_Indexkeys_Columns]
GO
/**********************************************************************************
Criar referências de [dbo].[Logins]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Logins_Systems')
    ALTER TABLE [dbo].[Logins] DROP CONSTRAINT FK_Logins_Systems
GO
ALTER TABLE [dbo].[Logins] WITH CHECK 
    ADD CONSTRAINT [FK_Logins_Systems] 
    FOREIGN KEY([SystemId]) 
    REFERENCES [dbo].[Systems] ([Id])
GO
ALTER TABLE [dbo].[Logins] CHECK CONSTRAINT [FK_Logins_Systems]
GO
IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Logins_Users')
    ALTER TABLE [dbo].[Logins] DROP CONSTRAINT FK_Logins_Users
GO
ALTER TABLE [dbo].[Logins] WITH CHECK 
    ADD CONSTRAINT [FK_Logins_Users] 
    FOREIGN KEY([UserId]) 
    REFERENCES [dbo].[Users] ([Id])
GO
ALTER TABLE [dbo].[Logins] CHECK CONSTRAINT [FK_Logins_Users]
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Categories]
**********************************************************************************/
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS tinyint)
                                ,CAST('string' AS nvarchar(25))
                                ,CAST('text' AS nvarchar(10))
                                ,CAST('left' AS nvarchar(6))
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS tinyint)
                                ,CAST('numeric' AS nvarchar(25))
                                ,CAST('number' AS nvarchar(10))
                                ,CAST('right' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS tinyint)
                                ,CAST('date' AS nvarchar(25))
                                ,CAST('date' AS nvarchar(10))
                                ,CAST('right' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS tinyint)
                                ,CAST('datetime' AS nvarchar(25))
                                ,CAST('datetime-local' AS nvarchar(10))
                                ,CAST('right' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS tinyint)
                                ,CAST('boolean' AS nvarchar(25))
                                ,CAST('checkbox' AS nvarchar(10))
                                ,CAST('center' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS tinyint)
                                ,CAST('time' AS nvarchar(25))
                                ,CAST('time' AS nvarchar(10))
                                ,CAST('right' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS tinyint)
                                ,CAST('text' AS nvarchar(25))
                                ,CAST('textarea' AS nvarchar(10))
                                ,CAST('left' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS tinyint)
                                ,CAST('image' AS nvarchar(25))
                                ,CAST('image' AS nvarchar(10))
                                ,CAST('left' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS tinyint)
                                ,CAST('binary' AS nvarchar(25))
                                ,CAST('file' AS nvarchar(10))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS tinyint)
                                ,CAST('undefined' AS nvarchar(25))
                                ,CAST('textarea' AS nvarchar(10))
                                ,CAST('left' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Types]
**********************************************************************************/
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('bigint' AS nvarchar(25))
                                ,CAST('-9007199254740990' AS nvarchar(MAX))
                                ,CAST('9007199254740990' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS tinyint)
                                ,CAST('9' AS tinyint)
                                ,CAST('binary' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS tinyint)
                                ,CAST('5' AS tinyint)
                                ,CAST('bit' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('char' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS tinyint)
                                ,CAST('3' AS tinyint)
                                ,CAST('date' AS nvarchar(25))
                                ,CAST('01/01/0001' AS nvarchar(MAX))
                                ,CAST('31/12/9999' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('datetime' AS nvarchar(25))
                                ,CAST('01/01/1753 00:00:00.000' AS nvarchar(MAX))
                                ,CAST('31/12/9999 23:59:59.997' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('datetime2' AS nvarchar(25))
                                ,CAST('01/01/0001 00:00:00.0000000' AS nvarchar(MAX))
                                ,CAST('31/12/9999 23:59:59.9999999' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('datetimeoffset' AS nvarchar(25))
                                ,CAST('01/01/0001 00:00:00.0000000' AS nvarchar(MAX))
                                ,CAST('31/12/9999 23:59:59.9999999' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('decimal' AS nvarchar(25))
                                ,CAST('-9007199254740990' AS nvarchar(MAX))
                                ,CAST('9007199254740990' AS nvarchar(MAX))
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('float' AS nvarchar(25))
                                ,CAST('-9007199254740990' AS nvarchar(MAX))
                                ,CAST('9007199254740990' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('geography' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('geometry' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('hierarchyid' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS tinyint)
                                ,CAST('8' AS tinyint)
                                ,CAST('image' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('int' AS nvarchar(25))
                                ,CAST('-2147483648' AS nvarchar(MAX))
                                ,CAST('2147483647' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('money' AS nvarchar(25))
                                ,CAST('-922337203685477' AS nvarchar(MAX))
                                ,CAST('922337203685477' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('nchar' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('ntext' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('numeric' AS nvarchar(25))
                                ,CAST('-9007199254740990' AS nvarchar(MAX))
                                ,CAST('9007199254740990' AS nvarchar(MAX))
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('nvarchar' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('real' AS nvarchar(25))
                                ,CAST('-9007199254740990' AS nvarchar(MAX))
                                ,CAST('9007199254740990' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('22' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('smalldatetime' AS nvarchar(25))
                                ,CAST('01/01/1900' AS nvarchar(MAX))
                                ,CAST('06/06/2079' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('23' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('smallint' AS nvarchar(25))
                                ,CAST('-32768' AS nvarchar(MAX))
                                ,CAST('32767' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('24' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('smallmoney' AS nvarchar(25))
                                ,CAST('214748' AS nvarchar(MAX))
                                ,CAST('214748' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('25' AS tinyint)
                                ,CAST('10' AS tinyint)
                                ,CAST('sql_variant' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('26' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('sysname' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('27' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('text' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('28' AS tinyint)
                                ,CAST('6' AS tinyint)
                                ,CAST('time' AS nvarchar(25))
                                ,CAST('00:00:00.0000000' AS nvarchar(MAX))
                                ,CAST('23:59:59.9999999' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('29' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('timestamp' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('30' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('tinyint' AS nvarchar(25))
                                ,CAST('0' AS nvarchar(MAX))
                                ,CAST('255' AS nvarchar(MAX))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('31' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('uniqueidentifier' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('32' AS tinyint)
                                ,CAST('9' AS tinyint)
                                ,CAST('varbinary' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('33' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('varchar' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[AskFormula]
                                ,[AllowMaxLength]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('34' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('xml' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Masks]
**********************************************************************************/
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('BigInteger' AS nvarchar(25))
                                ,CAST('#.###.###.###.###.###' AS nvarchar(MAX))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('Integer' AS nvarchar(25))
                                ,CAST('#.###.###.###' AS nvarchar(MAX))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS int)
                                ,CAST('SmallInteger' AS nvarchar(25))
                                ,CAST('##.###' AS nvarchar(MAX))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS int)
                                ,CAST('TinyInteger' AS nvarchar(25))
                                ,CAST('###' AS nvarchar(MAX))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS int)
                                ,CAST('ShortInteger' AS nvarchar(25))
                                ,CAST('##.###' AS nvarchar(MAX))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS int)
                                ,CAST('DateTime' AS nvarchar(25))
                                ,CAST('dd/MM/yyyy hh:mm:ss' AS nvarchar(MAX))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Domains]
**********************************************************************************/
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('15' AS tinyint)
                                ,CAST('2' AS int)
                                ,CAST('BigInteger' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('15' AS tinyint)
                                ,CAST('2' AS int)
                                ,CAST('Integer' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS int)
                                ,CAST('15' AS tinyint)
                                ,CAST('5' AS int)
                                ,CAST('ShortInteger' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('-65536' AS nvarchar(MAX))
                                ,CAST('65535' AS nvarchar(MAX))
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS int)
                                ,CAST('23' AS tinyint)
                                ,CAST('3' AS int)
                                ,CAST('SmallInteger' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS int)
                                ,CAST('30' AS tinyint)
                                ,CAST('4' AS int)
                                ,CAST('TinyInteger' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS int)
                                ,CAST('3' AS tinyint)
                                ,NULL
                                ,CAST('Boolean' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Varchar(15)' AS nvarchar(25))
                                ,CAST('15' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Varchar(20)' AS nvarchar(25))
                                ,CAST('20' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Varchar(25)' AS nvarchar(25))
                                ,CAST('25' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Varchar(50)' AS nvarchar(25))
                                ,CAST('50' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Varchar(256)' AS nvarchar(25))
                                ,CAST('256' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Varchar(MAX)' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('JavaScript' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('JS' AS nvarchar(5))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('SQL' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('SQL' AS nvarchar(5))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('JSON' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('JSON' AS nvarchar(5))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS int)
                                ,CAST('6' AS tinyint)
                                ,CAST('6' AS int)
                                ,CAST('DateTime' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Variant' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Codification' AS nvarchar(25))
                                ,CAST('5' AS smallint)
                                ,NULL
                                ,CAST('JSON;JS;SQL' AS nvarchar(MAX))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('HtmlInputType' AS nvarchar(25))
                                ,CAST('10' AS smallint)
                                ,NULL
                                ,CAST('text;checkbox;textarea;image;file' AS nvarchar(MAX))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('HtmlInputAlign' AS nvarchar(25))
                                ,CAST('6' AS smallint)
                                ,NULL
                                ,CAST('left;center;right' AS nvarchar(MAX))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS int)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Action' AS nvarchar(25))
                                ,CAST('15' AS smallint)
                                ,NULL
                                ,CAST('create;read;update;delete;commit;rollback' AS nvarchar(MAX))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Systems]
**********************************************************************************/
INSERT INTO [dbo].[Systems] ([Id]
                                ,[Name]
                                ,[Description]
                                ,[ClientName]
                                ,[MaxRetryLogins]
                                ,[IsOffAir]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('cruda' AS nvarchar(25))
                                ,CAST('CRUD Automático' AS nvarchar(50))
                                ,CAST('DAYCOVAL' AS nvarchar(15))
                                ,CAST('5' AS tinyint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Menus]
**********************************************************************************/
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('Cadastros' AS nvarchar(20))
                                ,CAST('Cadastros' AS nvarchar(50))
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('1' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('Usuários' AS nvarchar(20))
                                ,CAST('Cadastro de Usuários' AS nvarchar(50))
                                ,CAST('grid/cruda/Users' AS nvarchar(50))
                                ,CAST('1' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS int)
                                ,CAST('1' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('Tabelas' AS nvarchar(20))
                                ,CAST('Cadastro de tabelas' AS nvarchar(50))
                                ,CAST('grid/cruda/Tables' AS nvarchar(50))
                                ,CAST('1' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS int)
                                ,CAST('1' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('Menus' AS nvarchar(20))
                                ,CAST('Cadastro de menus' AS nvarchar(50))
                                ,CAST('grid/cruda/Menus' AS nvarchar(50))
                                ,CAST('1' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS int)
                                ,CAST('1' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('Sistemas' AS nvarchar(20))
                                ,CAST('Cadastro de sistemas' AS nvarchar(50))
                                ,CAST('grid/cruda/Systems' AS nvarchar(50))
                                ,CAST('3' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS int)
                                ,CAST('1' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('Banco de Dados' AS nvarchar(20))
                                ,CAST('Cadastro de bancos de dados' AS nvarchar(50))
                                ,CAST('grid/cruda/Databases' AS nvarchar(50))
                                ,CAST('3' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS int)
                                ,CAST('1' AS int)
                                ,CAST('35' AS smallint)
                                ,CAST('Colunas' AS nvarchar(20))
                                ,CAST('Cadastro de colunas de tabelas' AS nvarchar(50))
                                ,CAST('grid/cruda/Columns' AS nvarchar(50))
                                ,CAST('6' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS int)
                                ,CAST('1' AS int)
                                ,CAST('40' AS smallint)
                                ,CAST('Tipos' AS nvarchar(20))
                                ,CAST('Cadastro de tipos' AS nvarchar(50))
                                ,CAST('grid/cruda/Types' AS nvarchar(50))
                                ,CAST('6' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS int)
                                ,CAST('1' AS int)
                                ,CAST('45' AS smallint)
                                ,CAST('Associações' AS nvarchar(20))
                                ,CAST('Associações entre tabelas' AS nvarchar(50))
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS int)
                                ,CAST('1' AS int)
                                ,CAST('50' AS smallint)
                                ,CAST('Sistemas x BD' AS nvarchar(20))
                                ,CAST('Associação entre sistemas e bancos de dados' AS nvarchar(50))
                                ,CAST('grid/cruda/SystemsDatabases' AS nvarchar(50))
                                ,CAST('9' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS int)
                                ,CAST('1' AS int)
                                ,CAST('55' AS smallint)
                                ,CAST('Usuários x Sistemas' AS nvarchar(20))
                                ,CAST('Associação entre usuários e sistemas' AS nvarchar(50))
                                ,CAST('grid/cruda/SystemsUsers' AS nvarchar(50))
                                ,CAST('9' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS int)
                                ,CAST('1' AS int)
                                ,CAST('60' AS smallint)
                                ,CAST('Sair' AS nvarchar(20))
                                ,CAST('Retornar ao login' AS nvarchar(50))
                                ,CAST('exit/login' AS nvarchar(50))
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Users]
**********************************************************************************/
INSERT INTO [dbo].[Users] ([Id]
                                ,[Name]
                                ,[Password]
                                ,[FullName]
                                ,[RetryLogins]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('adm' AS nvarchar(25))
                                ,CAST('adm' AS nvarchar(256))
                                ,CAST('Administrador' AS nvarchar(50))
                                ,CAST('0' AS tinyint)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Users] ([Id]
                                ,[Name]
                                ,[Password]
                                ,[FullName]
                                ,[RetryLogins]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('labrego' AS nvarchar(25))
                                ,CAST('diva' AS nvarchar(256))
                                ,CAST('João da Rocha Labrego' AS nvarchar(50))
                                ,CAST('0' AS tinyint)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[SystemsUsers]
**********************************************************************************/
INSERT INTO [dbo].[SystemsUsers] ([Id]
                                ,[SystemId]
                                ,[UserId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('cruda x adm' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[SystemsUsers] ([Id]
                                ,[SystemId]
                                ,[UserId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('1' AS int)
                                ,CAST('2' AS int)
                                ,CAST('cruda x labrego' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Databases]
**********************************************************************************/
INSERT INTO [dbo].[Databases] ([Id]
                                ,[Name]
                                ,[Description]
                                ,[Alias]
                                ,[ServerName]
                                ,[HostName]
                                ,[Port]
                                ,[Logon]
                                ,[Password]
                                ,[Folder]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('cruda' AS nvarchar(25))
                                ,CAST('CRUD Automático' AS nvarchar(50))
                                ,CAST('cruda' AS nvarchar(25))
                                ,CAST('NOTEBOOK-DELL' AS nvarchar(50))
                                ,CAST('localhost' AS nvarchar(25))
                                ,CAST('1433' AS int)
                                ,CAST('sa' AS nvarchar(256))
                                ,CAST('diva' AS nvarchar(256))
                                ,CAST('D:\CRUDA-C#\CRUDA-CORE\CRUDA\db\' AS nvarchar(256))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[SystemsDatabases]
**********************************************************************************/
INSERT INTO [dbo].[SystemsDatabases] ([Id]
                                ,[SystemId]
                                ,[DatabaseId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('cruda x cruda' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Tables]
**********************************************************************************/
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('Categories' AS nvarchar(25))
                                ,CAST('Category' AS nvarchar(25))
                                ,CAST('Categorias de tipos de dados' AS nvarchar(50))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('10' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('Types' AS nvarchar(25))
                                ,CAST('Type' AS nvarchar(25))
                                ,CAST('Tipos' AS nvarchar(50))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('34' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS int)
                                ,CAST('Masks' AS nvarchar(25))
                                ,CAST('Mask' AS nvarchar(25))
                                ,CAST('Máscaras de Edição' AS nvarchar(50))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('6' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS int)
                                ,CAST('Domains' AS nvarchar(25))
                                ,CAST('Domain' AS nvarchar(25))
                                ,CAST('Domínios' AS nvarchar(50))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('21' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS int)
                                ,CAST('Systems' AS nvarchar(25))
                                ,CAST('System' AS nvarchar(25))
                                ,CAST('Sistemas' AS nvarchar(50))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS int)
                                ,CAST('Menus' AS nvarchar(25))
                                ,CAST('Menu' AS nvarchar(25))
                                ,CAST('Menus' AS nvarchar(50))
                                ,CAST('5' AS int)
                                ,CAST('1' AS bit)
                                ,CAST('12' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS int)
                                ,CAST('Users' AS nvarchar(25))
                                ,CAST('User' AS nvarchar(25))
                                ,CAST('Usuários' AS nvarchar(50))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('2' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS int)
                                ,CAST('SystemsUsers' AS nvarchar(25))
                                ,CAST('SystemUser' AS nvarchar(25))
                                ,CAST('Sistemas x Usuários' AS nvarchar(50))
                                ,CAST('5' AS int)
                                ,CAST('1' AS bit)
                                ,CAST('2' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS int)
                                ,CAST('Databases' AS nvarchar(25))
                                ,CAST('Database' AS nvarchar(25))
                                ,CAST('Bancos-de-Dados' AS nvarchar(50))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS int)
                                ,CAST('SystemsDatabases' AS nvarchar(25))
                                ,CAST('SystemDatabase' AS nvarchar(25))
                                ,CAST('Sistemas x Bancos-de-Dados' AS nvarchar(50))
                                ,CAST('5' AS int)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS int)
                                ,CAST('Tables' AS nvarchar(25))
                                ,CAST('Table' AS nvarchar(25))
                                ,CAST('Tabelas' AS nvarchar(50))
                                ,CAST('9' AS int)
                                ,CAST('1' AS bit)
                                ,CAST('16' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS int)
                                ,CAST('DatabasesTables' AS nvarchar(25))
                                ,CAST('DatabaseTable' AS nvarchar(25))
                                ,CAST('Bancos-de-Dados x Tabelas' AS nvarchar(50))
                                ,CAST('9' AS int)
                                ,CAST('1' AS bit)
                                ,CAST('16' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS int)
                                ,CAST('Columns' AS nvarchar(25))
                                ,CAST('Column' AS nvarchar(25))
                                ,CAST('Colunas' AS nvarchar(50))
                                ,CAST('11' AS int)
                                ,CAST('1' AS bit)
                                ,CAST('123' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS int)
                                ,CAST('Indexes' AS nvarchar(25))
                                ,CAST('Index' AS nvarchar(25))
                                ,CAST('Índices' AS nvarchar(50))
                                ,CAST('11' AS int)
                                ,CAST('1' AS bit)
                                ,CAST('23' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS int)
                                ,CAST('Indexkeys' AS nvarchar(25))
                                ,CAST('Indexkey' AS nvarchar(25))
                                ,CAST('Chaves de índices' AS nvarchar(50))
                                ,CAST('14' AS int)
                                ,CAST('1' AS bit)
                                ,CAST('34' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsPaged]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS int)
                                ,CAST('Logins' AS nvarchar(25))
                                ,CAST('Login' AS nvarchar(25))
                                ,CAST('Logins de Acesso aos Sistemas' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS int)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[DatabasesTables]
**********************************************************************************/
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('cruda x Categories' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('1' AS int)
                                ,CAST('2' AS int)
                                ,CAST('cruda x Types' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS int)
                                ,CAST('1' AS int)
                                ,CAST('3' AS int)
                                ,CAST('cruda x Masks' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS int)
                                ,CAST('1' AS int)
                                ,CAST('4' AS int)
                                ,CAST('cruda x Domains' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS int)
                                ,CAST('1' AS int)
                                ,CAST('5' AS int)
                                ,CAST('cruda x Systems' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS int)
                                ,CAST('1' AS int)
                                ,CAST('6' AS int)
                                ,CAST('cruda x Menus' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS int)
                                ,CAST('1' AS int)
                                ,CAST('7' AS int)
                                ,CAST('cruda x Users' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS int)
                                ,CAST('1' AS int)
                                ,CAST('8' AS int)
                                ,CAST('cruda x SystemsUsers' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS int)
                                ,CAST('1' AS int)
                                ,CAST('9' AS int)
                                ,CAST('cruda x Databases' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS int)
                                ,CAST('1' AS int)
                                ,CAST('10' AS int)
                                ,CAST('cruda x SystemsDatabases' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS int)
                                ,CAST('1' AS int)
                                ,CAST('11' AS int)
                                ,CAST('cruda x Tables' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS int)
                                ,CAST('1' AS int)
                                ,CAST('12' AS int)
                                ,CAST('cruda x DatabasesTables' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS int)
                                ,CAST('1' AS int)
                                ,CAST('13' AS int)
                                ,CAST('cruda x Columns' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS int)
                                ,CAST('1' AS int)
                                ,CAST('14' AS int)
                                ,CAST('cruda x Indexes' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS int)
                                ,CAST('1' AS int)
                                ,CAST('15' AS int)
                                ,CAST('cruda x Indexkeys' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Description]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS int)
                                ,CAST('1' AS int)
                                ,CAST('16' AS int)
                                ,CAST('cruda x Logins' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Columns]
**********************************************************************************/
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('5' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('Id da categoria' AS nvarchar(50))
                                ,CAST('Categoria' AS nvarchar(25))
                                ,CAST('Categoria' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('1' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome da categoria' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS int)
                                ,CAST('1' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('19' AS int)
                                ,NULL
                                ,CAST('HtmlInputType' AS nvarchar(25))
                                ,CAST('Tipo do input HTML' AS nvarchar(50))
                                ,CAST('Tipo input HTML' AS nvarchar(25))
                                ,CAST('Tipo input HTML' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS int)
                                ,CAST('1' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('20' AS int)
                                ,NULL
                                ,CAST('HtmlInputAlign' AS nvarchar(25))
                                ,CAST('Alinhamento do input HTML' AS nvarchar(50))
                                ,CAST('Alinhamento input HTML' AS nvarchar(25))
                                ,CAST('Alinhamento input HTML' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS int)
                                ,CAST('1' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskEncrypted' AS nvarchar(25))
                                ,CAST('Tipo pede criptografia?' AS nvarchar(50))
                                ,CAST('Pede criptografia?' AS nvarchar(25))
                                ,CAST('Pede criptografia?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS int)
                                ,CAST('1' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskMask' AS nvarchar(25))
                                ,CAST('Tipo pede máscara?' AS nvarchar(50))
                                ,CAST('Pede máscara?' AS nvarchar(25))
                                ,CAST('Pede máscara?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS int)
                                ,CAST('1' AS int)
                                ,CAST('35' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskListable' AS nvarchar(25))
                                ,CAST('Tipo pede listável?' AS nvarchar(50))
                                ,CAST('Pede listável?' AS nvarchar(25))
                                ,CAST('Pede listável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS int)
                                ,CAST('1' AS int)
                                ,CAST('40' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskDefault' AS nvarchar(25))
                                ,CAST('Tipo pede valor padrão?' AS nvarchar(50))
                                ,CAST('Pede valor padrão?' AS nvarchar(25))
                                ,CAST('Pede valor padrão?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS int)
                                ,CAST('1' AS int)
                                ,CAST('45' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskMinimum' AS nvarchar(25))
                                ,CAST('Tipo pede valor mínimo?' AS nvarchar(50))
                                ,CAST('Pede valor mínimo?' AS nvarchar(25))
                                ,CAST('Pede valor mínimo?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS int)
                                ,CAST('1' AS int)
                                ,CAST('50' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskMaximum' AS nvarchar(25))
                                ,CAST('Tipo pede valor máximo?' AS nvarchar(50))
                                ,CAST('Pede valor máximo?' AS nvarchar(25))
                                ,CAST('Pede valor máximo?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS int)
                                ,CAST('2' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('5' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do tipo' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS int)
                                ,CAST('2' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('5' AS int)
                                ,CAST('1' AS int)
                                ,CAST('CategoryId' AS nvarchar(25))
                                ,CAST('Categoria do tipo' AS nvarchar(50))
                                ,CAST('Categoria' AS nvarchar(25))
                                ,CAST('Categoria' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS int)
                                ,CAST('2' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome do tipo' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS int)
                                ,CAST('2' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('17' AS int)
                                ,NULL
                                ,CAST('Minimum' AS nvarchar(25))
                                ,CAST('Valor mínimo do tipo' AS nvarchar(50))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS int)
                                ,CAST('2' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('17' AS int)
                                ,NULL
                                ,CAST('Maximum' AS nvarchar(25))
                                ,CAST('Valor máximo do tipo' AS nvarchar(50))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS int)
                                ,CAST('2' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskLength' AS nvarchar(25))
                                ,CAST('Tipo pede tamanho?' AS nvarchar(50))
                                ,CAST('Pede Tamanho?' AS nvarchar(25))
                                ,CAST('Pede Tamanho?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS int)
                                ,CAST('2' AS int)
                                ,CAST('35' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskDecimals' AS nvarchar(25))
                                ,CAST('Tipo pede decimais?' AS nvarchar(50))
                                ,CAST('Pede decimais?' AS nvarchar(25))
                                ,CAST('Pede decimais?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS int)
                                ,CAST('2' AS int)
                                ,CAST('40' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskPrimarykey' AS nvarchar(25))
                                ,CAST('Tipo pede chave-primária?' AS nvarchar(50))
                                ,CAST('Pede chave-primária?' AS nvarchar(25))
                                ,CAST('Pede chave-primária?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS int)
                                ,CAST('2' AS int)
                                ,CAST('45' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskAutoincrement' AS nvarchar(25))
                                ,CAST('Tipo pede autoincremento?' AS nvarchar(50))
                                ,CAST('Pede autoincremento?' AS nvarchar(25))
                                ,CAST('Pede autoincremento?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS int)
                                ,CAST('2' AS int)
                                ,CAST('50' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskFilterable' AS nvarchar(25))
                                ,CAST('Tipo pede filtrável?' AS nvarchar(50))
                                ,CAST('Pede filtrável?' AS nvarchar(25))
                                ,CAST('Pede filtrável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS int)
                                ,CAST('2' AS int)
                                ,CAST('55' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskGridable' AS nvarchar(25))
                                ,CAST('Tipo pede exibível em grade?' AS nvarchar(50))
                                ,CAST('Pede exibível em grade?' AS nvarchar(25))
                                ,CAST('Pede exibível em grade?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('22' AS int)
                                ,CAST('2' AS int)
                                ,CAST('60' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskCodification' AS nvarchar(25))
                                ,CAST('Tipo pede codificação?' AS nvarchar(50))
                                ,CAST('Pede codificação?' AS nvarchar(25))
                                ,CAST('Pede codificação?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('23' AS int)
                                ,CAST('2' AS int)
                                ,CAST('65' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AskFormula' AS nvarchar(25))
                                ,CAST('Tipo pede fórmula?' AS nvarchar(50))
                                ,CAST('Pede fórmula?' AS nvarchar(25))
                                ,CAST('Pede fórmula?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('24' AS int)
                                ,CAST('2' AS int)
                                ,CAST('70' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('AllowMaxLength' AS nvarchar(25))
                                ,CAST('Tipo permite MAX no tamanho?' AS nvarchar(50))
                                ,CAST('Permite MAX?' AS nvarchar(25))
                                ,CAST('Permite MAX?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('25' AS int)
                                ,CAST('2' AS int)
                                ,CAST('75' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsActive' AS nvarchar(25))
                                ,CAST('Tipo é ativo?' AS nvarchar(50))
                                ,CAST('É ativo?' AS nvarchar(25))
                                ,CAST('É ativo?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('26' AS int)
                                ,CAST('3' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID da máscara de edição' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('27' AS int)
                                ,CAST('3' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome da máscara' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('28' AS int)
                                ,CAST('3' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('12' AS int)
                                ,NULL
                                ,CAST('Mask' AS nvarchar(25))
                                ,CAST('Máscara de edição' AS nvarchar(50))
                                ,CAST('Máscara' AS nvarchar(25))
                                ,CAST('Máscara' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('29' AS int)
                                ,CAST('4' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do domínio' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('30' AS int)
                                ,CAST('4' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('5' AS int)
                                ,CAST('2' AS int)
                                ,CAST('TypeId' AS nvarchar(25))
                                ,CAST('ID do tipo do domínio' AS nvarchar(50))
                                ,CAST('Tipo' AS nvarchar(25))
                                ,CAST('Tipo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('31' AS int)
                                ,CAST('4' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('3' AS int)
                                ,CAST('MaskId' AS nvarchar(25))
                                ,CAST('Id da máscara de edição do domínio' AS nvarchar(50))
                                ,CAST('Máscara' AS nvarchar(25))
                                ,CAST('Máscara' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('32' AS int)
                                ,CAST('4' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome do domínio' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('33' AS int)
                                ,CAST('4' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('4' AS int)
                                ,NULL
                                ,CAST('Length' AS nvarchar(25))
                                ,CAST('Tamanho do domínio' AS nvarchar(50))
                                ,CAST('Tamanho' AS nvarchar(25))
                                ,CAST('Tamanho' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('34' AS int)
                                ,CAST('4' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('5' AS int)
                                ,NULL
                                ,CAST('Decimals' AS nvarchar(25))
                                ,CAST('Decimais do domínio' AS nvarchar(50))
                                ,CAST('Decimais' AS nvarchar(25))
                                ,CAST('Decimais' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('35' AS int)
                                ,CAST('4' AS int)
                                ,CAST('35' AS smallint)
                                ,CAST('12' AS int)
                                ,NULL
                                ,CAST('ValidValues' AS nvarchar(25))
                                ,CAST('Valores válidos' AS nvarchar(50))
                                ,CAST('Valores válidos' AS nvarchar(25))
                                ,CAST('Valores válidos' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('36' AS int)
                                ,CAST('4' AS int)
                                ,CAST('40' AS smallint)
                                ,CAST('17' AS int)
                                ,NULL
                                ,CAST('Default' AS nvarchar(25))
                                ,CAST('Valor padrão do domínio' AS nvarchar(50))
                                ,CAST('Padrão' AS nvarchar(25))
                                ,CAST('Padrão' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('37' AS int)
                                ,CAST('4' AS int)
                                ,CAST('45' AS smallint)
                                ,CAST('17' AS int)
                                ,NULL
                                ,CAST('Minimum' AS nvarchar(25))
                                ,CAST('Valor mínimo do domínio' AS nvarchar(50))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('38' AS int)
                                ,CAST('4' AS int)
                                ,CAST('50' AS smallint)
                                ,CAST('17' AS int)
                                ,NULL
                                ,CAST('Maximum' AS nvarchar(25))
                                ,CAST('Valor máximo do domínio' AS nvarchar(50))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('39' AS int)
                                ,CAST('4' AS int)
                                ,CAST('55' AS smallint)
                                ,CAST('18' AS int)
                                ,NULL
                                ,CAST('Codification' AS nvarchar(25))
                                ,CAST('Codificação do domínio' AS nvarchar(50))
                                ,CAST('Codificação' AS nvarchar(25))
                                ,CAST('Codificação' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('40' AS int)
                                ,CAST('5' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do sistema' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('41' AS int)
                                ,CAST('5' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome do sistema' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('42' AS int)
                                ,CAST('5' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,CAST('Descrição do sistema' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('43' AS int)
                                ,CAST('5' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('7' AS int)
                                ,NULL
                                ,CAST('ClientName' AS nvarchar(25))
                                ,CAST('Cliente do sistema' AS nvarchar(50))
                                ,CAST('Cliente' AS nvarchar(25))
                                ,CAST('Cliente' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('44' AS int)
                                ,CAST('5' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('5' AS int)
                                ,NULL
                                ,CAST('MaxRetryLogins' AS nvarchar(25))
                                ,CAST('Máximo de tentativas de logins' AS nvarchar(50))
                                ,CAST('Máximo de logins' AS nvarchar(25))
                                ,CAST('Máximo de logins' AS nvarchar(25))
                                ,NULL
                                ,CAST('5' AS nvarchar(MAX))
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('45' AS int)
                                ,CAST('5' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsOffAir' AS nvarchar(25))
                                ,CAST('Sistema fora-do-ar' AS nvarchar(50))
                                ,CAST('Fora-do-ar' AS nvarchar(25))
                                ,CAST('Fora-do-ar' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('46' AS int)
                                ,CAST('6' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do menu' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('47' AS int)
                                ,CAST('6' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('5' AS int)
                                ,CAST('SystemId' AS nvarchar(25))
                                ,CAST('ID do sistema do menu' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('48' AS int)
                                ,CAST('6' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('4' AS int)
                                ,NULL
                                ,CAST('Sequence' AS nvarchar(25))
                                ,CAST('Sequência do menu' AS nvarchar(50))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('49' AS int)
                                ,CAST('6' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('8' AS int)
                                ,NULL
                                ,CAST('Caption' AS nvarchar(25))
                                ,CAST('Opção do menu' AS nvarchar(50))
                                ,CAST('Opção' AS nvarchar(25))
                                ,CAST('Opção' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('50' AS int)
                                ,CAST('6' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Message' AS nvarchar(25))
                                ,CAST('Mensagem do menu' AS nvarchar(50))
                                ,CAST('Mensagem' AS nvarchar(25))
                                ,CAST('Mensagem' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('51' AS int)
                                ,CAST('6' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Action' AS nvarchar(25))
                                ,CAST('Ação do menu' AS nvarchar(50))
                                ,CAST('Ação' AS nvarchar(25))
                                ,CAST('Ação' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('52' AS int)
                                ,CAST('6' AS int)
                                ,CAST('35' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('6' AS int)
                                ,CAST('ParentMenuId' AS nvarchar(25))
                                ,CAST('ID do menu-pai' AS nvarchar(50))
                                ,CAST('Menu-pai' AS nvarchar(25))
                                ,CAST('Menu-pai' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('53' AS int)
                                ,CAST('7' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do usuário' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('54' AS int)
                                ,CAST('7' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome do usuário' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('55' AS int)
                                ,CAST('7' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('11' AS int)
                                ,NULL
                                ,CAST('Password' AS nvarchar(25))
                                ,CAST('Senha do usuário' AS nvarchar(50))
                                ,CAST('Senha' AS nvarchar(25))
                                ,CAST('Senha' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('56' AS int)
                                ,CAST('7' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('FullName' AS nvarchar(25))
                                ,CAST('Nome completo do usuário' AS nvarchar(50))
                                ,CAST('Nome completo' AS nvarchar(25))
                                ,CAST('Nome completo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('57' AS int)
                                ,CAST('7' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('5' AS int)
                                ,NULL
                                ,CAST('RetryLogins' AS nvarchar(25))
                                ,CAST('Tentativas de login' AS nvarchar(50))
                                ,CAST('Tentativas de login' AS nvarchar(25))
                                ,CAST('Tentativas de login' AS nvarchar(25))
                                ,NULL
                                ,CAST('0' AS nvarchar(MAX))
                                ,CAST('0' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('58' AS int)
                                ,CAST('7' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsActive' AS nvarchar(25))
                                ,CAST('Ativo?' AS nvarchar(50))
                                ,CAST('Ativo?' AS nvarchar(25))
                                ,CAST('Ativo?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('59' AS int)
                                ,CAST('8' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do sistema x usuário' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('60' AS int)
                                ,CAST('8' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('5' AS int)
                                ,CAST('SystemId' AS nvarchar(25))
                                ,CAST('ID do sistema' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('61' AS int)
                                ,CAST('8' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('7' AS int)
                                ,CAST('UserId' AS nvarchar(25))
                                ,CAST('ID do usuário' AS nvarchar(50))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('62' AS int)
                                ,CAST('8' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,CAST('Descrição do siistema x usuário' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('63' AS int)
                                ,CAST('9' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do banco-de-dados' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('64' AS int)
                                ,CAST('9' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome do banco-de-dados' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('65' AS int)
                                ,CAST('9' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,CAST('Descrição do banco-de-dados' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('66' AS int)
                                ,CAST('9' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Alias' AS nvarchar(25))
                                ,CAST('Alias  do banco-de-dados' AS nvarchar(50))
                                ,CAST('Alias' AS nvarchar(25))
                                ,CAST('Alias' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('67' AS int)
                                ,CAST('9' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('ServerName' AS nvarchar(25))
                                ,CAST('String de conexão do banco-de-dados' AS nvarchar(50))
                                ,CAST('String de Conexão' AS nvarchar(25))
                                ,CAST('String de Conexão' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('68' AS int)
                                ,CAST('9' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('HostName' AS nvarchar(25))
                                ,CAST('Hospedeiro do banco-de-dados' AS nvarchar(50))
                                ,CAST('Hospedeiro' AS nvarchar(25))
                                ,CAST('Hospedeiro' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('69' AS int)
                                ,CAST('9' AS int)
                                ,CAST('35' AS smallint)
                                ,CAST('3' AS int)
                                ,NULL
                                ,CAST('Port' AS nvarchar(25))
                                ,CAST('Porta TCP/IP do banco-de-dados' AS nvarchar(50))
                                ,CAST('Porta TCP/IP' AS nvarchar(25))
                                ,CAST('Porta TCP/IP' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('70' AS int)
                                ,CAST('9' AS int)
                                ,CAST('40' AS smallint)
                                ,CAST('11' AS int)
                                ,NULL
                                ,CAST('Logon' AS nvarchar(25))
                                ,CAST('Usuário do banco-de-dados' AS nvarchar(50))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('71' AS int)
                                ,CAST('9' AS int)
                                ,CAST('45' AS smallint)
                                ,CAST('11' AS int)
                                ,NULL
                                ,CAST('Password' AS nvarchar(25))
                                ,CAST('Senha do banco-de-dados' AS nvarchar(50))
                                ,CAST('Senha' AS nvarchar(25))
                                ,CAST('Senha' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('72' AS int)
                                ,CAST('9' AS int)
                                ,CAST('50' AS smallint)
                                ,CAST('11' AS int)
                                ,NULL
                                ,CAST('Folder' AS nvarchar(25))
                                ,CAST('Pasta diretório do banco-de-dados' AS nvarchar(50))
                                ,CAST('Pasta' AS nvarchar(25))
                                ,CAST('Pasta' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('73' AS int)
                                ,CAST('10' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do sistema x banco-de-dados' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('74' AS int)
                                ,CAST('10' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('5' AS int)
                                ,CAST('SystemId' AS nvarchar(25))
                                ,CAST('ID do sistema' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('75' AS int)
                                ,CAST('10' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('9' AS int)
                                ,CAST('DatabaseId' AS nvarchar(25))
                                ,CAST('ID do banco-de-dados' AS nvarchar(50))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('76' AS int)
                                ,CAST('10' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,CAST('Descrição do sistema x banco-de-dados' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('77' AS int)
                                ,CAST('11' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID da tabela' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('78' AS int)
                                ,CAST('11' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome da tabela' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('79' AS int)
                                ,CAST('11' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Alias' AS nvarchar(25))
                                ,CAST('Alias da tabela' AS nvarchar(50))
                                ,CAST('Alias' AS nvarchar(25))
                                ,CAST('Alias' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('80' AS int)
                                ,CAST('11' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,CAST('Descrição da tabela' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('81' AS int)
                                ,CAST('11' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('ParentTableId' AS nvarchar(25))
                                ,CAST('Id da tabela-pai' AS nvarchar(50))
                                ,CAST('Tabela-pai' AS nvarchar(25))
                                ,CAST('Tabela-pai' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('0' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('82' AS int)
                                ,CAST('11' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsPaged' AS nvarchar(25))
                                ,CAST('Consulta é paginada?' AS nvarchar(50))
                                ,CAST('Paginado?' AS nvarchar(25))
                                ,CAST('Paginado?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('83' AS int)
                                ,CAST('11' AS int)
                                ,CAST('35' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('CurrentId' AS nvarchar(25))
                                ,CAST('Id atual' AS nvarchar(50))
                                ,CAST('Id atual' AS nvarchar(25))
                                ,CAST('Id atual' AS nvarchar(25))
                                ,NULL
                                ,CAST('0' AS nvarchar(MAX))
                                ,CAST('0' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('84' AS int)
                                ,CAST('12' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do banco-de-dados x tabela' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('85' AS int)
                                ,CAST('12' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('9' AS int)
                                ,CAST('DatabaseId' AS nvarchar(25))
                                ,CAST('ID do banco-de-dados' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('86' AS int)
                                ,CAST('12' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('11' AS int)
                                ,CAST('TableId' AS nvarchar(25))
                                ,CAST('ID da tabela' AS nvarchar(50))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('87' AS int)
                                ,CAST('12' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,CAST('Descrição do banco-de-dados x tabela' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('88' AS int)
                                ,CAST('13' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID da coluna' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('89' AS int)
                                ,CAST('13' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('11' AS int)
                                ,CAST('TableId' AS nvarchar(25))
                                ,CAST('Tabela' AS nvarchar(50))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('90' AS int)
                                ,CAST('13' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('4' AS int)
                                ,NULL
                                ,CAST('Sequence' AS nvarchar(25))
                                ,CAST('Sequência' AS nvarchar(50))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('91' AS int)
                                ,CAST('13' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('4' AS int)
                                ,CAST('DomainId' AS nvarchar(25))
                                ,CAST('Domínio da coluna' AS nvarchar(50))
                                ,CAST('Domínio' AS nvarchar(25))
                                ,CAST('Domínio' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('92' AS int)
                                ,CAST('13' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('11' AS int)
                                ,CAST('ReferenceTableId' AS nvarchar(25))
                                ,CAST('Tabela-referência' AS nvarchar(50))
                                ,CAST('Referência' AS nvarchar(25))
                                ,CAST('Referência' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('93' AS int)
                                ,CAST('13' AS int)
                                ,CAST('30' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome da coluna' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('94' AS int)
                                ,CAST('13' AS int)
                                ,CAST('35' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,CAST('Descrição da Coluna' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('95' AS int)
                                ,CAST('13' AS int)
                                ,CAST('40' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Title' AS nvarchar(25))
                                ,CAST('Título da Coluna' AS nvarchar(50))
                                ,CAST('Título' AS nvarchar(25))
                                ,CAST('Título' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('96' AS int)
                                ,CAST('13' AS int)
                                ,CAST('45' AS smallint)
                                ,CAST('9' AS int)
                                ,NULL
                                ,CAST('Caption' AS nvarchar(25))
                                ,CAST('Legenda da Coluna' AS nvarchar(50))
                                ,CAST('Legenda' AS nvarchar(25))
                                ,CAST('Legenda' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('97' AS int)
                                ,CAST('13' AS int)
                                ,CAST('50' AS smallint)
                                ,CAST('12' AS int)
                                ,NULL
                                ,CAST('ValidValues' AS nvarchar(25))
                                ,CAST('Valores válidos' AS nvarchar(50))
                                ,CAST('Valores válidos' AS nvarchar(25))
                                ,CAST('Valores válidos' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('98' AS int)
                                ,CAST('13' AS int)
                                ,CAST('55' AS smallint)
                                ,CAST('17' AS int)
                                ,NULL
                                ,CAST('Default' AS nvarchar(25))
                                ,CAST('Valor padrão da coluna' AS nvarchar(50))
                                ,CAST('Padrão' AS nvarchar(25))
                                ,CAST('Padrão' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('99' AS int)
                                ,CAST('13' AS int)
                                ,CAST('60' AS smallint)
                                ,CAST('17' AS int)
                                ,NULL
                                ,CAST('Minimum' AS nvarchar(25))
                                ,CAST('Valor mínimo da coluna' AS nvarchar(50))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('100' AS int)
                                ,CAST('13' AS int)
                                ,CAST('65' AS smallint)
                                ,CAST('17' AS int)
                                ,NULL
                                ,CAST('Maximum' AS nvarchar(25))
                                ,CAST('Valor máximo da coluna' AS nvarchar(50))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('101' AS int)
                                ,CAST('13' AS int)
                                ,CAST('70' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsPrimarykey' AS nvarchar(25))
                                ,CAST('Coluna é chave-primária?' AS nvarchar(50))
                                ,CAST('Chave-primária?' AS nvarchar(25))
                                ,CAST('Chave-primária?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('102' AS int)
                                ,CAST('13' AS int)
                                ,CAST('75' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsAutoIncrement' AS nvarchar(25))
                                ,CAST('Coluna é autoincremento?' AS nvarchar(50))
                                ,CAST('Autoincremento?' AS nvarchar(25))
                                ,CAST('Autoincremento?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('103' AS int)
                                ,CAST('13' AS int)
                                ,CAST('80' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsRequired' AS nvarchar(25))
                                ,CAST('Coluna é requerida?' AS nvarchar(50))
                                ,CAST('Requerida?' AS nvarchar(25))
                                ,CAST('Requerida?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('104' AS int)
                                ,CAST('13' AS int)
                                ,CAST('85' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsListable' AS nvarchar(25))
                                ,CAST('Coluna é listável?' AS nvarchar(50))
                                ,CAST('Listável?' AS nvarchar(25))
                                ,CAST('Listável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('105' AS int)
                                ,CAST('13' AS int)
                                ,CAST('90' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsFilterable' AS nvarchar(25))
                                ,CAST('Coluna é filtrável?' AS nvarchar(50))
                                ,CAST('Filtrável?' AS nvarchar(25))
                                ,CAST('Filtrável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('106' AS int)
                                ,CAST('13' AS int)
                                ,CAST('95' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsEditable' AS nvarchar(25))
                                ,CAST('Coluna é editável?' AS nvarchar(50))
                                ,CAST('Editável?' AS nvarchar(25))
                                ,CAST('Editável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('107' AS int)
                                ,CAST('13' AS int)
                                ,CAST('100' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsGridable' AS nvarchar(25))
                                ,CAST('Coluna é exibível em grade?' AS nvarchar(50))
                                ,CAST('Exibível em grade?' AS nvarchar(25))
                                ,CAST('Exibível em grade?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('108' AS int)
                                ,CAST('13' AS int)
                                ,CAST('105' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsEncrypted' AS nvarchar(25))
                                ,CAST('Coluna é encriptada?' AS nvarchar(50))
                                ,CAST('Encriptada?' AS nvarchar(25))
                                ,CAST('Encriptada?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('109' AS int)
                                ,CAST('14' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do índice' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('110' AS int)
                                ,CAST('14' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('9' AS int)
                                ,CAST('DatabaseId' AS nvarchar(25))
                                ,CAST('ID do banco-de-dados do índice' AS nvarchar(50))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('111' AS int)
                                ,CAST('14' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('11' AS int)
                                ,CAST('TableId' AS nvarchar(25))
                                ,CAST('ID da tabela do índice' AS nvarchar(50))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('112' AS int)
                                ,CAST('14' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS int)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,CAST('Nome do índice' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('113' AS int)
                                ,CAST('14' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsUnique' AS nvarchar(25))
                                ,CAST('É índice único?' AS nvarchar(50))
                                ,CAST('É único?' AS nvarchar(25))
                                ,CAST('É único?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('114' AS int)
                                ,CAST('15' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID da chave de índice' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('115' AS int)
                                ,CAST('15' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('14' AS int)
                                ,CAST('IndexId' AS nvarchar(25))
                                ,CAST('ID do índice da chave' AS nvarchar(50))
                                ,CAST('Índice' AS nvarchar(25))
                                ,CAST('Índice' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('116' AS int)
                                ,CAST('15' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('4' AS int)
                                ,NULL
                                ,CAST('Sequence' AS nvarchar(25))
                                ,CAST('Sequência da chave' AS nvarchar(50))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('117' AS int)
                                ,CAST('15' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('13' AS int)
                                ,CAST('ColumnId' AS nvarchar(25))
                                ,CAST('ID da coluna-chave do índice' AS nvarchar(50))
                                ,CAST('Coluna' AS nvarchar(25))
                                ,CAST('Coluna' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('118' AS int)
                                ,CAST('15' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsDescending' AS nvarchar(25))
                                ,CAST('Ordem descedente da chave?' AS nvarchar(50))
                                ,CAST('Descendente?' AS nvarchar(25))
                                ,CAST('Descendente?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('119' AS int)
                                ,CAST('16' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,CAST('ID do Login de Acesso' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('120' AS int)
                                ,CAST('16' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('5' AS int)
                                ,CAST('SystemId' AS nvarchar(25))
                                ,CAST('ID do Sistema' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('121' AS int)
                                ,CAST('16' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('7' AS int)
                                ,CAST('UserId' AS nvarchar(25))
                                ,CAST('ID do usuário' AS nvarchar(50))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,CAST('1' AS nvarchar(MAX))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('122' AS int)
                                ,CAST('16' AS int)
                                ,CAST('20' AS smallint)
                                ,CAST('11' AS int)
                                ,NULL
                                ,CAST('PublicKey' AS nvarchar(25))
                                ,CAST('Chave pública do usuário' AS nvarchar(50))
                                ,CAST('Chave pública' AS nvarchar(25))
                                ,CAST('Chave pública' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('123' AS int)
                                ,CAST('16' AS int)
                                ,CAST('25' AS smallint)
                                ,CAST('6' AS int)
                                ,NULL
                                ,CAST('IsLogged' AS nvarchar(25))
                                ,CAST('Logado?' AS nvarchar(50))
                                ,CAST('Logado?' AS nvarchar(25))
                                ,CAST('Logado?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Indexes]
**********************************************************************************/
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('UNQ_Categories_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('1' AS int)
                                ,CAST('2' AS int)
                                ,CAST('UNQ_Types_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS int)
                                ,CAST('1' AS int)
                                ,CAST('3' AS int)
                                ,CAST('UNQ_Masks_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS int)
                                ,CAST('1' AS int)
                                ,CAST('4' AS int)
                                ,CAST('UNQ_Domains_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS int)
                                ,CAST('1' AS int)
                                ,CAST('5' AS int)
                                ,CAST('UNQ_Systems_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS int)
                                ,CAST('1' AS int)
                                ,CAST('6' AS int)
                                ,CAST('UNQ_Menus_SystemId_Sequence' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS int)
                                ,CAST('1' AS int)
                                ,CAST('6' AS int)
                                ,CAST('UNQ_Menus_SystemId_Caption' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS int)
                                ,CAST('1' AS int)
                                ,CAST('7' AS int)
                                ,CAST('UNQ_Users_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS int)
                                ,CAST('1' AS int)
                                ,CAST('8' AS int)
                                ,CAST('UNQ_SystemsUsers_SystemId_UserId' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS int)
                                ,CAST('1' AS int)
                                ,CAST('8' AS int)
                                ,CAST('UNQ_SystemsUsers_Description' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS int)
                                ,CAST('1' AS int)
                                ,CAST('9' AS int)
                                ,CAST('UNQ_Databases_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS int)
                                ,CAST('1' AS int)
                                ,CAST('9' AS int)
                                ,CAST('UNQ_Databases_Alias' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS int)
                                ,CAST('1' AS int)
                                ,CAST('10' AS int)
                                ,CAST('UNQ_SystemsDatabases_SystemId_DatabaseId' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS int)
                                ,CAST('1' AS int)
                                ,CAST('10' AS int)
                                ,CAST('UNQ_SystemsDatabases_Description' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS int)
                                ,CAST('1' AS int)
                                ,CAST('11' AS int)
                                ,CAST('UNQ_Tables_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS int)
                                ,CAST('1' AS int)
                                ,CAST('11' AS int)
                                ,CAST('UNQ_Tables_Alias' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS int)
                                ,CAST('1' AS int)
                                ,CAST('12' AS int)
                                ,CAST('UNQ_DatabasesTables_DatabaseId_TableId' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS int)
                                ,CAST('1' AS int)
                                ,CAST('12' AS int)
                                ,CAST('UNQ_DatabasesTables_Description' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS int)
                                ,CAST('1' AS int)
                                ,CAST('13' AS int)
                                ,CAST('UNQ_Columns_TableId_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS int)
                                ,CAST('1' AS int)
                                ,CAST('13' AS int)
                                ,CAST('UNQ_Columns_TableId_Sequence' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS int)
                                ,CAST('1' AS int)
                                ,CAST('14' AS int)
                                ,CAST('UNQ_Indexes_DatabaseId_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('22' AS int)
                                ,CAST('1' AS int)
                                ,CAST('15' AS int)
                                ,CAST('UNQ_Indexkeys_IndexId_Sequence' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('23' AS int)
                                ,CAST('1' AS int)
                                ,CAST('15' AS int)
                                ,CAST('UNQ_Indexkeys_IndexId_ColumnId' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('24' AS int)
                                ,CAST('1' AS int)
                                ,CAST('16' AS int)
                                ,CAST('IDX_Logins_SystemId_UserId_IsLogged' AS nvarchar(50))
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Inserir dados na tabela [dbo].[Indexkeys]
**********************************************************************************/
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS int)
                                ,CAST('1' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS int)
                                ,CAST('2' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('13' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS int)
                                ,CAST('3' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('27' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS int)
                                ,CAST('4' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('32' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS int)
                                ,CAST('5' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('41' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS int)
                                ,CAST('6' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('47' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS int)
                                ,CAST('6' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('48' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS int)
                                ,CAST('7' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('47' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS int)
                                ,CAST('7' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('49' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS int)
                                ,CAST('8' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('54' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS int)
                                ,CAST('9' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('60' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS int)
                                ,CAST('9' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('61' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS int)
                                ,CAST('10' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('62' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS int)
                                ,CAST('11' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('64' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS int)
                                ,CAST('12' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('66' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS int)
                                ,CAST('13' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('74' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS int)
                                ,CAST('13' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('75' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS int)
                                ,CAST('14' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('76' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS int)
                                ,CAST('15' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('78' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS int)
                                ,CAST('16' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('79' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS int)
                                ,CAST('17' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('84' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('22' AS int)
                                ,CAST('17' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('86' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('23' AS int)
                                ,CAST('18' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('87' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('24' AS int)
                                ,CAST('19' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('89' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('25' AS int)
                                ,CAST('19' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('93' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('26' AS int)
                                ,CAST('20' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('89' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('27' AS int)
                                ,CAST('20' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('90' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('28' AS int)
                                ,CAST('21' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('110' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('29' AS int)
                                ,CAST('21' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('112' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('30' AS int)
                                ,CAST('22' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('115' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('31' AS int)
                                ,CAST('22' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('116' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('32' AS int)
                                ,CAST('23' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('115' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('33' AS int)
                                ,CAST('23' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('117' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('34' AS int)
                                ,CAST('24' AS int)
                                ,CAST('5' AS smallint)
                                ,CAST('120' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('35' AS int)
                                ,CAST('24' AS int)
                                ,CAST('10' AS smallint)
                                ,CAST('121' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('36' AS int)
                                ,CAST('24' AS int)
                                ,CAST('15' AS smallint)
                                ,CAST('123' AS int)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
/**********************************************************************************
Criar stored procedure [dbo].[CategoryValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[CategoryValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[CategoryValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[CategoryValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [CategoryValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'tinyint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputType'), [cruda].[JSON_EXTRACT](@LastRecord, '$.HtmlInputType'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputAlign'), [cruda].[JSON_EXTRACT](@LastRecord, '$.HtmlInputAlign'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskEncrypted'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskEncrypted'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskMask'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskMask'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskListable'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskListable'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskDefault'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskDefault'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskMinimum'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskMinimum'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskMaximum'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskMaximum'), 'bit') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Categories]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [cruda].[IS_EQUAL]([HtmlInputType], [cruda].[JSON_EXTRACT](@LastRecord, '$.HtmlInputType'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([HtmlInputAlign], [cruda].[JSON_EXTRACT](@LastRecord, '$.HtmlInputAlign'), 'nvarchar') = 1
                                  AND [AskEncrypted] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskEncrypted')
                                  AND [AskMask] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskMask')
                                  AND [AskListable] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskListable')
                                  AND [AskDefault] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskDefault')
                                  AND [AskMinimum] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskMinimum')
                                  AND [AskMaximum] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskMaximum')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Categories alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS tinyint) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('255' AS tinyint) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 255';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Categories] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Categories';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Categories';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Types] WHERE [CategoryId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Types';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_HtmlInputType nvarchar(10) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputType') AS nvarchar(10))
                   ,@W_HtmlInputAlign nvarchar(6) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputAlign') AS nvarchar(6))
                   ,@W_AskEncrypted bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskEncrypted') AS bit)
                   ,@W_AskMask bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskMask') AS bit)
                   ,@W_AskListable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskListable') AS bit)
                   ,@W_AskDefault bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskDefault') AS bit)
                   ,@W_AskMinimum bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskMinimum') AS bit)
                   ,@W_AskMaximum bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskMaximum') AS bit)

            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Categories] WHERE [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Categories_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Categories] WHERE [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Categories_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[CategoryPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[CategoryPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[CategoryPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[CategoryPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [CategoryPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[CategoryValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS tinyint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Categories'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[CategoryCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[CategoryCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[CategoryCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[CategoryCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Categories' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[CategoryValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Categories] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_HtmlInputType nvarchar(10) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputType') AS nvarchar(10))
                   ,@W_HtmlInputAlign nvarchar(6) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputAlign') AS nvarchar(6))
                   ,@W_AskEncrypted bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskEncrypted') AS bit)
                   ,@W_AskMask bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskMask') AS bit)
                   ,@W_AskListable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskListable') AS bit)
                   ,@W_AskDefault bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskDefault') AS bit)
                   ,@W_AskMinimum bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskMinimum') AS bit)
                   ,@W_AskMaximum bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskMaximum') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Categories] ([Id]
                                                ,[Name]
                                                ,[HtmlInputType]
                                                ,[HtmlInputAlign]
                                                ,[AskEncrypted]
                                                ,[AskMask]
                                                ,[AskListable]
                                                ,[AskDefault]
                                                ,[AskMinimum]
                                                ,[AskMaximum]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_HtmlInputType
                                                 ,@W_HtmlInputAlign
                                                 ,@W_AskEncrypted
                                                 ,@W_AskMask
                                                 ,@W_AskListable
                                                 ,@W_AskDefault
                                                 ,@W_AskMinimum
                                                 ,@W_AskMaximum
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Categories] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[HtmlInputType] = @W_HtmlInputType
                                              ,[HtmlInputAlign] = @W_HtmlInputAlign
                                              ,[AskEncrypted] = @W_AskEncrypted
                                              ,[AskMask] = @W_AskMask
                                              ,[AskListable] = @W_AskListable
                                              ,[AskDefault] = @W_AskDefault
                                              ,[AskMinimum] = @W_AskMinimum
                                              ,[AskMaximum] = @W_AskMaximum
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[CategoriesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[CategoriesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[CategoriesRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[CategoriesRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Categories') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id tinyint = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS tinyint)
                ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                ,@W_AskEncrypted bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskEncrypted') AS bit)
                ,@W_AskMask bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskMask') AS bit)
                ,@W_AskListable bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskListable') AS bit)
                ,@W_AskDefault bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskDefault') AS bit)
                ,@W_AskMinimum bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskMinimum') AS bit)
                ,@W_AskMaximum bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskMaximum') AS bit)

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS tinyint)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('255' AS tinyint)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''255''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS tinyint) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.HtmlInputType') AS nvarchar(10)) AS [HtmlInputType]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.HtmlInputAlign') AS nvarchar(6)) AS [HtmlInputAlign]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskEncrypted') AS bit) AS [AskEncrypted]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskMask') AS bit) AS [AskMask]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskListable') AS bit) AS [AskListable]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskDefault') AS bit) AS [AskDefault]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskMinimum') AS bit) AS [AskMinimum]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskMaximum') AS bit) AS [AskMaximum]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Categories'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Categories] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
                  AND [C].[AskEncrypted] = ISNULL(@W_AskEncrypted, [C].[AskEncrypted])
                  AND [C].[AskMask] = ISNULL(@W_AskMask, [C].[AskMask])
                  AND [C].[AskListable] = ISNULL(@W_AskListable, [C].[AskListable])
                  AND [C].[AskDefault] = ISNULL(@W_AskDefault, [C].[AskDefault])
                  AND [C].[AskMinimum] = ISNULL(@W_AskMinimum, [C].[AskMinimum])
                  AND [C].[AskMaximum] = ISNULL(@W_AskMaximum, [C].[AskMaximum])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [Name] = ISNULL(@W_Name, [Name])
                      AND [AskEncrypted] = ISNULL(@W_AskEncrypted, [AskEncrypted])
                      AND [AskMask] = ISNULL(@W_AskMask, [AskMask])
                      AND [AskListable] = ISNULL(@W_AskListable, [AskListable])
                      AND [AskDefault] = ISNULL(@W_AskDefault, [AskDefault])
                      AND [AskMinimum] = ISNULL(@W_AskMinimum, [AskMinimum])
                      AND [AskMaximum] = ISNULL(@W_AskMaximum, [AskMaximum])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[Name]
                          ,[C].[HtmlInputType]
                          ,[C].[HtmlInputAlign]
                          ,[C].[AskEncrypted]
                          ,[C].[AskMask]
                          ,[C].[AskListable]
                          ,[C].[AskDefault]
                          ,[C].[AskMinimum]
                          ,[C].[AskMaximum]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[Name]
                              ,[C].[HtmlInputType]
                              ,[C].[HtmlInputAlign]
                              ,[C].[AskEncrypted]
                              ,[C].[AskMask]
                              ,[C].[AskListable]
                              ,[C].[AskDefault]
                              ,[C].[AskMinimum]
                              ,[C].[AskMaximum]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[TypeValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TypeValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TypeValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[TypeValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [TypeValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'tinyint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.CategoryId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.CategoryId'), 'tinyint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Minimum'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Minimum'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Maximum'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Maximum'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskLength'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskLength'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskDecimals'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskDecimals'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskPrimarykey'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskPrimarykey'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskAutoincrement'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskAutoincrement'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskFilterable'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskFilterable'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskGridable'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskGridable'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskCodification'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskCodification'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskFormula'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AskFormula'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.AllowMaxLength'), [cruda].[JSON_EXTRACT](@LastRecord, '$.AllowMaxLength'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsActive'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsActive'), 'bit') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Types]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [CategoryId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.CategoryId')
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [cruda].[IS_EQUAL]([Minimum], [cruda].[JSON_EXTRACT](@LastRecord, '$.Minimum'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Maximum], [cruda].[JSON_EXTRACT](@LastRecord, '$.Maximum'), 'nvarchar') = 1
                                  AND [AskLength] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskLength')
                                  AND [AskDecimals] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskDecimals')
                                  AND [AskPrimarykey] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskPrimarykey')
                                  AND [AskAutoincrement] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskAutoincrement')
                                  AND [AskFilterable] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskFilterable')
                                  AND [AskGridable] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskGridable')
                                  AND [AskCodification] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskCodification')
                                  AND [AskFormula] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AskFormula')
                                  AND [AllowMaxLength] = [cruda].[JSON_EXTRACT](@LastRecord, '$.AllowMaxLength')
                                  AND [IsActive] = [cruda].[JSON_EXTRACT](@LastRecord, '$.IsActive')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Types alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS tinyint) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('255' AS tinyint) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 255';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Types] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Types';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Types';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [TypeId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Domains';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_CategoryId tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.CategoryId') AS tinyint)
                   ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Minimum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(MAX))
                   ,@W_Maximum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(MAX))
                   ,@W_AskLength bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskLength') AS bit)
                   ,@W_AskDecimals bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskDecimals') AS bit)
                   ,@W_AskPrimarykey bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskPrimarykey') AS bit)
                   ,@W_AskAutoincrement bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskAutoincrement') AS bit)
                   ,@W_AskFilterable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskFilterable') AS bit)
                   ,@W_AskGridable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskGridable') AS bit)
                   ,@W_AskCodification bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskCodification') AS bit)
                   ,@W_AskFormula bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskFormula') AS bit)
                   ,@W_AllowMaxLength bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AllowMaxLength') AS bit)
                   ,@W_IsActive bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsActive') AS bit)

            IF @W_CategoryId IS NOT NULL AND @W_CategoryId < CAST('0' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de CategoryId em @ActualRecord deve ser maior que ou igual à 0';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_CategoryId IS NOT NULL AND @W_CategoryId > CAST('255' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de CategoryId em @ActualRecord deve ser menor que ou igual à 255';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Categories] WHERE [Id] = @W_CategoryId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Categories';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Types] WHERE [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Types_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Types] WHERE [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Types_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[TypePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TypePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TypePersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[TypePersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [TypePersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[TypeValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS tinyint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Types'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[TypeCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TypeCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TypeCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[TypeCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Types' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[TypeValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Types] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_CategoryId tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.CategoryId') AS tinyint)
                   ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Minimum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(MAX))
                   ,@W_Maximum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(MAX))
                   ,@W_AskLength bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskLength') AS bit)
                   ,@W_AskDecimals bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskDecimals') AS bit)
                   ,@W_AskPrimarykey bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskPrimarykey') AS bit)
                   ,@W_AskAutoincrement bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskAutoincrement') AS bit)
                   ,@W_AskFilterable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskFilterable') AS bit)
                   ,@W_AskGridable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskGridable') AS bit)
                   ,@W_AskCodification bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskCodification') AS bit)
                   ,@W_AskFormula bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AskFormula') AS bit)
                   ,@W_AllowMaxLength bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.AllowMaxLength') AS bit)
                   ,@W_IsActive bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsActive') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Types] ([Id]
                                                ,[CategoryId]
                                                ,[Name]
                                                ,[Minimum]
                                                ,[Maximum]
                                                ,[AskLength]
                                                ,[AskDecimals]
                                                ,[AskPrimarykey]
                                                ,[AskAutoincrement]
                                                ,[AskFilterable]
                                                ,[AskGridable]
                                                ,[AskCodification]
                                                ,[AskFormula]
                                                ,[AllowMaxLength]
                                                ,[IsActive]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_CategoryId
                                                 ,@W_Name
                                                 ,@W_Minimum
                                                 ,@W_Maximum
                                                 ,@W_AskLength
                                                 ,@W_AskDecimals
                                                 ,@W_AskPrimarykey
                                                 ,@W_AskAutoincrement
                                                 ,@W_AskFilterable
                                                 ,@W_AskGridable
                                                 ,@W_AskCodification
                                                 ,@W_AskFormula
                                                 ,@W_AllowMaxLength
                                                 ,@W_IsActive
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Types] SET [Id] = @W_Id
                                              ,[CategoryId] = @W_CategoryId
                                              ,[Name] = @W_Name
                                              ,[Minimum] = @W_Minimum
                                              ,[Maximum] = @W_Maximum
                                              ,[AskLength] = @W_AskLength
                                              ,[AskDecimals] = @W_AskDecimals
                                              ,[AskPrimarykey] = @W_AskPrimarykey
                                              ,[AskAutoincrement] = @W_AskAutoincrement
                                              ,[AskFilterable] = @W_AskFilterable
                                              ,[AskGridable] = @W_AskGridable
                                              ,[AskCodification] = @W_AskCodification
                                              ,[AskFormula] = @W_AskFormula
                                              ,[AllowMaxLength] = @W_AllowMaxLength
                                              ,[IsActive] = @W_IsActive
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[TypesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TypesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TypesRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[TypesRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Types') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id tinyint = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS tinyint)
                ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                ,@W_AskLength bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskLength') AS bit)
                ,@W_AskDecimals bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskDecimals') AS bit)
                ,@W_AskPrimarykey bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskPrimarykey') AS bit)
                ,@W_AskAutoincrement bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskAutoincrement') AS bit)
                ,@W_AskFilterable bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskFilterable') AS bit)
                ,@W_AskGridable bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskGridable') AS bit)
                ,@W_AskCodification bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskCodification') AS bit)
                ,@W_AskFormula bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AskFormula') AS bit)
                ,@W_AllowMaxLength bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.AllowMaxLength') AS bit)
                ,@W_IsActive bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsActive') AS bit)

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS tinyint)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('255' AS tinyint)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''255''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS tinyint) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.CategoryId') AS tinyint) AS [CategoryId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Minimum') AS nvarchar(MAX)) AS [Minimum]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Maximum') AS nvarchar(MAX)) AS [Maximum]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskLength') AS bit) AS [AskLength]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskDecimals') AS bit) AS [AskDecimals]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskPrimarykey') AS bit) AS [AskPrimarykey]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskAutoincrement') AS bit) AS [AskAutoincrement]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskFilterable') AS bit) AS [AskFilterable]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskGridable') AS bit) AS [AskGridable]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskCodification') AS bit) AS [AskCodification]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AskFormula') AS bit) AS [AskFormula]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.AllowMaxLength') AS bit) AS [AllowMaxLength]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsActive') AS bit) AS [IsActive]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Types'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Types] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
                  AND [C].[AskLength] = ISNULL(@W_AskLength, [C].[AskLength])
                  AND [C].[AskDecimals] = ISNULL(@W_AskDecimals, [C].[AskDecimals])
                  AND [C].[AskPrimarykey] = ISNULL(@W_AskPrimarykey, [C].[AskPrimarykey])
                  AND [C].[AskAutoincrement] = ISNULL(@W_AskAutoincrement, [C].[AskAutoincrement])
                  AND [C].[AskFilterable] = ISNULL(@W_AskFilterable, [C].[AskFilterable])
                  AND [C].[AskGridable] = ISNULL(@W_AskGridable, [C].[AskGridable])
                  AND [C].[AskCodification] = ISNULL(@W_AskCodification, [C].[AskCodification])
                  AND [C].[AskFormula] = ISNULL(@W_AskFormula, [C].[AskFormula])
                  AND [C].[AllowMaxLength] = ISNULL(@W_AllowMaxLength, [C].[AllowMaxLength])
                  AND [C].[IsActive] = ISNULL(@W_IsActive, [C].[IsActive])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [Name] = ISNULL(@W_Name, [Name])
                      AND [AskLength] = ISNULL(@W_AskLength, [AskLength])
                      AND [AskDecimals] = ISNULL(@W_AskDecimals, [AskDecimals])
                      AND [AskPrimarykey] = ISNULL(@W_AskPrimarykey, [AskPrimarykey])
                      AND [AskAutoincrement] = ISNULL(@W_AskAutoincrement, [AskAutoincrement])
                      AND [AskFilterable] = ISNULL(@W_AskFilterable, [AskFilterable])
                      AND [AskGridable] = ISNULL(@W_AskGridable, [AskGridable])
                      AND [AskCodification] = ISNULL(@W_AskCodification, [AskCodification])
                      AND [AskFormula] = ISNULL(@W_AskFormula, [AskFormula])
                      AND [AllowMaxLength] = ISNULL(@W_AllowMaxLength, [AllowMaxLength])
                      AND [IsActive] = ISNULL(@W_IsActive, [IsActive])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[CategoryId]
                          ,[C].[Name]
                          ,[C].[Minimum]
                          ,[C].[Maximum]
                          ,[C].[AskLength]
                          ,[C].[AskDecimals]
                          ,[C].[AskPrimarykey]
                          ,[C].[AskAutoincrement]
                          ,[C].[AskFilterable]
                          ,[C].[AskGridable]
                          ,[C].[AskCodification]
                          ,[C].[AskFormula]
                          ,[C].[AllowMaxLength]
                          ,[C].[IsActive]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[CategoryId]
                              ,[C].[Name]
                              ,[C].[Minimum]
                              ,[C].[Maximum]
                              ,[C].[AskLength]
                              ,[C].[AskDecimals]
                              ,[C].[AskPrimarykey]
                              ,[C].[AskAutoincrement]
                              ,[C].[AskFilterable]
                              ,[C].[AskGridable]
                              ,[C].[AskCodification]
                              ,[C].[AskFormula]
                              ,[C].[AllowMaxLength]
                              ,[C].[IsActive]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[MaskValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MaskValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MaskValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[MaskValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [MaskValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Mask'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Mask'), 'nvarchar') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Masks]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [Mask] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Mask')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Masks alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('-2147483648' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à -2147483648';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Masks] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Masks';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Masks';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [MaskId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Domains';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Mask nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Mask') AS nvarchar(MAX))

            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Masks] WHERE [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Masks_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Masks] WHERE [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Masks_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[MaskPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MaskPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MaskPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[MaskPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [MaskPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[MaskValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Masks'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[MaskCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MaskCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MaskCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[MaskCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Masks' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[MaskValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Masks] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Mask nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Mask') AS nvarchar(MAX))

            IF @Action = 'create'
                INSERT INTO [dbo].[Masks] ([Id]
                                                ,[Name]
                                                ,[Mask]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_Mask
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Masks] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[Mask] = @W_Mask
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[MasksRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MasksRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MasksRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[MasksRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Masks') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))

        IF @W_Id IS NOT NULL AND @W_Id < CAST('-2147483648' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''-2147483648''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Mask') AS nvarchar(MAX)) AS [Mask]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Masks'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Masks] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [Name] = ISNULL(@W_Name, [Name])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[Name]
                          ,[C].[Mask]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[Name]
                              ,[C].[Mask]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DomainValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DomainValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DomainValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DomainValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [DomainValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.TypeId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.TypeId'), 'tinyint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.MaskId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.MaskId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Length'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Length'), 'smallint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Decimals'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Decimals'), 'tinyint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.ValidValues'), [cruda].[JSON_EXTRACT](@LastRecord, '$.ValidValues'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Default'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Default'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Minimum'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Minimum'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Maximum'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Maximum'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Codification'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Codification'), 'nvarchar') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Domains]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [TypeId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.TypeId')
                                  AND [cruda].[IS_EQUAL]([MaskId], [cruda].[JSON_EXTRACT](@LastRecord, '$.MaskId'), 'int') = 1
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [cruda].[IS_EQUAL]([Length], [cruda].[JSON_EXTRACT](@LastRecord, '$.Length'), 'smallint') = 1
                                  AND [cruda].[IS_EQUAL]([Decimals], [cruda].[JSON_EXTRACT](@LastRecord, '$.Decimals'), 'tinyint') = 1
                                  AND [cruda].[IS_EQUAL]([ValidValues], [cruda].[JSON_EXTRACT](@LastRecord, '$.ValidValues'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Default], [cruda].[JSON_EXTRACT](@LastRecord, '$.Default'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Minimum], [cruda].[JSON_EXTRACT](@LastRecord, '$.Minimum'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Maximum], [cruda].[JSON_EXTRACT](@LastRecord, '$.Maximum'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Codification], [cruda].[JSON_EXTRACT](@LastRecord, '$.Codification'), 'nvarchar') = 1) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Domains alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Domains';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Domains';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [DomainId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Columns';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_TypeId tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.TypeId') AS tinyint)
                   ,@W_MaskId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.MaskId') AS int)
                   ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Length smallint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Length') AS smallint)
                   ,@W_Decimals tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Decimals') AS tinyint)
                   ,@W_ValidValues nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ValidValues') AS nvarchar(MAX))
                   ,@W_Default nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Default') AS nvarchar(MAX))
                   ,@W_Minimum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(MAX))
                   ,@W_Maximum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(MAX))
                   ,@W_Codification nvarchar(5) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Codification') AS nvarchar(5))

            IF @W_TypeId IS NOT NULL AND @W_TypeId < CAST('1' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de TypeId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_TypeId IS NOT NULL AND @W_TypeId > CAST('255' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de TypeId em @ActualRecord deve ser menor que ou igual à 255';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Types] WHERE [Id] = @W_TypeId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Types';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_MaskId IS NOT NULL AND @W_MaskId < CAST('-2147483648' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de MaskId em @ActualRecord deve ser maior que ou igual à -2147483648';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_MaskId IS NOT NULL AND @W_MaskId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de MaskId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Masks] WHERE [Id] = @W_MaskId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Masks';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Length IS NOT NULL AND @W_Length < CAST('0' AS smallint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Length em @ActualRecord deve ser maior que ou igual à 0';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Length IS NOT NULL AND @W_Length > CAST('32767' AS smallint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Length em @ActualRecord deve ser menor que ou igual à 32767';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Decimals IS NOT NULL AND @W_Decimals < CAST('0' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Decimals em @ActualRecord deve ser maior que ou igual à 0';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Decimals IS NOT NULL AND @W_Decimals > CAST('255' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Decimals em @ActualRecord deve ser menor que ou igual à 255';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Domains_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Domains_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DomainPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DomainPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DomainPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DomainPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [DomainPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[DomainValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Domains'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DomainCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DomainCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DomainCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DomainCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Domains' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[DomainValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Domains] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_TypeId tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.TypeId') AS tinyint)
                   ,@W_MaskId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.MaskId') AS int)
                   ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Length smallint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Length') AS smallint)
                   ,@W_Decimals tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Decimals') AS tinyint)
                   ,@W_ValidValues nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ValidValues') AS nvarchar(MAX))
                   ,@W_Default nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Default') AS nvarchar(MAX))
                   ,@W_Minimum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(MAX))
                   ,@W_Maximum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(MAX))
                   ,@W_Codification nvarchar(5) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Codification') AS nvarchar(5))

            IF @Action = 'create'
                INSERT INTO [dbo].[Domains] ([Id]
                                                ,[TypeId]
                                                ,[MaskId]
                                                ,[Name]
                                                ,[Length]
                                                ,[Decimals]
                                                ,[ValidValues]
                                                ,[Default]
                                                ,[Minimum]
                                                ,[Maximum]
                                                ,[Codification]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_TypeId
                                                 ,@W_MaskId
                                                 ,@W_Name
                                                 ,@W_Length
                                                 ,@W_Decimals
                                                 ,@W_ValidValues
                                                 ,@W_Default
                                                 ,@W_Minimum
                                                 ,@W_Maximum
                                                 ,@W_Codification
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Domains] SET [Id] = @W_Id
                                              ,[TypeId] = @W_TypeId
                                              ,[MaskId] = @W_MaskId
                                              ,[Name] = @W_Name
                                              ,[Length] = @W_Length
                                              ,[Decimals] = @W_Decimals
                                              ,[ValidValues] = @W_ValidValues
                                              ,[Default] = @W_Default
                                              ,[Minimum] = @W_Minimum
                                              ,[Maximum] = @W_Maximum
                                              ,[Codification] = @W_Codification
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DomainsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DomainsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DomainsRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DomainsRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Domains') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_TypeId tinyint = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.TypeId') AS tinyint)
                ,@W_MaskId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.MaskId') AS int)
                ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                ,@W_ValidValues nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.ValidValues') AS nvarchar(MAX))
                ,@W_Codification nvarchar(5) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Codification') AS nvarchar(5))

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        IF @W_TypeId IS NOT NULL AND @W_TypeId < CAST('1' AS tinyint)
            THROW 51000, 'Valor de TypeId deve ser maior que ou igual à ''1''', 1
        IF @W_TypeId IS NOT NULL AND @W_TypeId > CAST('255' AS tinyint)
            THROW 51000, 'Valor de TypeId deve ser menor que ou igual à ''255''', 1
        IF @W_MaskId IS NOT NULL AND @W_MaskId < CAST('-2147483648' AS int)
            THROW 51000, 'Valor de MaskId deve ser maior que ou igual à ''-2147483648''', 1
        IF @W_MaskId IS NOT NULL AND @W_MaskId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de MaskId deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.TypeId') AS tinyint) AS [TypeId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.MaskId') AS int) AS [MaskId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Length') AS smallint) AS [Length]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Decimals') AS tinyint) AS [Decimals]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.ValidValues') AS nvarchar(MAX)) AS [ValidValues]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Default') AS nvarchar(MAX)) AS [Default]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Minimum') AS nvarchar(MAX)) AS [Minimum]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Maximum') AS nvarchar(MAX)) AS [Maximum]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Codification') AS nvarchar(5)) AS [Codification]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Domains'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Domains] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[TypeId] = ISNULL(@W_TypeId, [C].[TypeId])
                  AND (@W_MaskId IS NULL OR [C].[MaskId] = @W_MaskId)
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
                  AND (@W_ValidValues IS NULL OR [C].[ValidValues] = @W_ValidValues)
                  AND (@W_Codification IS NULL OR [C].[Codification] = @W_Codification)
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [TypeId] = ISNULL(@W_TypeId, [TypeId])
                      AND (@W_MaskId IS NULL OR [MaskId] = @W_MaskId)
                      AND [Name] = ISNULL(@W_Name, [Name])
                      AND (@W_ValidValues IS NULL OR [ValidValues] = @W_ValidValues)
                      AND (@W_Codification IS NULL OR [Codification] = @W_Codification)

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[TypeId]
                          ,[C].[MaskId]
                          ,[C].[Name]
                          ,[C].[Length]
                          ,[C].[Decimals]
                          ,[C].[ValidValues]
                          ,[C].[Default]
                          ,[C].[Minimum]
                          ,[C].[Maximum]
                          ,[C].[Codification]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[TypeId]
                              ,[C].[MaskId]
                              ,[C].[Name]
                              ,[C].[Length]
                              ,[C].[Decimals]
                              ,[C].[ValidValues]
                              ,[C].[Default]
                              ,[C].[Minimum]
                              ,[C].[Maximum]
                              ,[C].[Codification]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [SystemValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Description'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.ClientName'), [cruda].[JSON_EXTRACT](@LastRecord, '$.ClientName'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.MaxRetryLogins'), [cruda].[JSON_EXTRACT](@LastRecord, '$.MaxRetryLogins'), 'tinyint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsOffAir'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsOffAir'), 'bit') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Systems]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [Description] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Description')
                                  AND [ClientName] = [cruda].[JSON_EXTRACT](@LastRecord, '$.ClientName')
                                  AND [MaxRetryLogins] = [cruda].[JSON_EXTRACT](@LastRecord, '$.MaxRetryLogins')
                                  AND [IsOffAir] = [cruda].[JSON_EXTRACT](@LastRecord, '$.IsOffAir')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Systems alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Systems';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Systems';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Menus';
                THROW 51000, @ErrorMessage, 1
            END
            IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [SystemId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em SystemsUsers';
                THROW 51000, @ErrorMessage, 1
            END
            IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [SystemId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em SystemsDatabases';
                THROW 51000, @ErrorMessage, 1
            END
            IF EXISTS(SELECT 1 FROM [dbo].[Logins] WHERE [SystemId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Logins';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_ClientName nvarchar(15) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ClientName') AS nvarchar(15))
                   ,@W_MaxRetryLogins tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.MaxRetryLogins') AS tinyint)
                   ,@W_IsOffAir bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsOffAir') AS bit)

            IF @W_MaxRetryLogins IS NOT NULL AND @W_MaxRetryLogins < CAST('1' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de MaxRetryLogins em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_MaxRetryLogins IS NOT NULL AND @W_MaxRetryLogins > CAST('255' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de MaxRetryLogins em @ActualRecord deve ser menor que ou igual à 255';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Systems_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Systems_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [SystemPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[SystemValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Systems'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Systems' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[SystemValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Systems] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_ClientName nvarchar(15) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ClientName') AS nvarchar(15))
                   ,@W_MaxRetryLogins tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.MaxRetryLogins') AS tinyint)
                   ,@W_IsOffAir bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsOffAir') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Systems] ([Id]
                                                ,[Name]
                                                ,[Description]
                                                ,[ClientName]
                                                ,[MaxRetryLogins]
                                                ,[IsOffAir]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_Description
                                                 ,@W_ClientName
                                                 ,@W_MaxRetryLogins
                                                 ,@W_IsOffAir
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Systems] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[Description] = @W_Description
                                              ,[ClientName] = @W_ClientName
                                              ,[MaxRetryLogins] = @W_MaxRetryLogins
                                              ,[IsOffAir] = @W_IsOffAir
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemsRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemsRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Systems') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                ,@W_ClientName nvarchar(15) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.ClientName') AS nvarchar(15))

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.ClientName') AS nvarchar(15)) AS [ClientName]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.MaxRetryLogins') AS tinyint) AS [MaxRetryLogins]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsOffAir') AS bit) AS [IsOffAir]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Systems'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Systems] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
                  AND [C].[ClientName] = ISNULL(@W_ClientName, [C].[ClientName])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [Name] = ISNULL(@W_Name, [Name])
                      AND [ClientName] = ISNULL(@W_ClientName, [ClientName])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[Name]
                          ,[C].[Description]
                          ,[C].[ClientName]
                          ,[C].[MaxRetryLogins]
                          ,[C].[IsOffAir]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[Name]
                              ,[C].[Description]
                              ,[C].[ClientName]
                              ,[C].[MaxRetryLogins]
                              ,[C].[IsOffAir]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[MenuValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MenuValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MenuValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[MenuValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [MenuValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.SystemId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Sequence'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Sequence'), 'smallint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Caption'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Caption'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Message'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Message'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Action'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Action'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.ParentMenuId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.ParentMenuId'), 'int') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Menus]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [SystemId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.SystemId')
                                  AND [Sequence] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Sequence')
                                  AND [Caption] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Caption')
                                  AND [Message] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Message')
                                  AND [cruda].[IS_EQUAL]([Action], [cruda].[JSON_EXTRACT](@LastRecord, '$.Action'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([ParentMenuId], [cruda].[JSON_EXTRACT](@LastRecord, '$.ParentMenuId'), 'int') = 1) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Menus alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Menus';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Menus';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [ParentMenuId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Menus';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_SystemId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS int)
                   ,@W_Sequence smallint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_Caption nvarchar(20) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Caption') AS nvarchar(20))
                   ,@W_Message nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Message') AS nvarchar(50))
                   ,@W_Action nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Action') AS nvarchar(50))
                   ,@W_ParentMenuId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ParentMenuId') AS int)

            IF @W_SystemId IS NOT NULL AND @W_SystemId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de SystemId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_SystemId IS NOT NULL AND @W_SystemId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de SystemId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Id] = @W_SystemId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Systems';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Sequence IS NOT NULL AND @W_Sequence < CAST('1' AS smallint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Sequence em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Sequence IS NOT NULL AND @W_Sequence > CAST('32767' AS smallint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Sequence em @ActualRecord deve ser menor que ou igual à 32767';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_ParentMenuId IS NOT NULL AND @W_ParentMenuId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de ParentMenuId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_ParentMenuId IS NOT NULL AND @W_ParentMenuId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de ParentMenuId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [Id] = @W_ParentMenuId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Menus';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_SystemId AND [Sequence] = @W_Sequence) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Menus_SystemId_Sequence já existe';
                    THROW 51000, @ErrorMessage, 1
                END
                IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_SystemId AND [Caption] = @W_Caption) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Menus_SystemId_Caption já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_SystemId AND [Sequence] = @W_Sequence AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Menus_SystemId_Sequence inexiste';
                THROW 51000, @ErrorMessage, 1
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_SystemId AND [Caption] = @W_Caption AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Menus_SystemId_Caption inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[MenuPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MenuPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MenuPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[MenuPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [MenuPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[MenuValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Menus'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[MenuCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MenuCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MenuCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[MenuCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Menus' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[MenuValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Menus] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_SystemId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS int)
                   ,@W_Sequence smallint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_Caption nvarchar(20) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Caption') AS nvarchar(20))
                   ,@W_Message nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Message') AS nvarchar(50))
                   ,@W_Action nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Action') AS nvarchar(50))
                   ,@W_ParentMenuId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ParentMenuId') AS int)

            IF @Action = 'create'
                INSERT INTO [dbo].[Menus] ([Id]
                                                ,[SystemId]
                                                ,[Sequence]
                                                ,[Caption]
                                                ,[Message]
                                                ,[Action]
                                                ,[ParentMenuId]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_SystemId
                                                 ,@W_Sequence
                                                 ,@W_Caption
                                                 ,@W_Message
                                                 ,@W_Action
                                                 ,@W_ParentMenuId
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Menus] SET [Id] = @W_Id
                                              ,[SystemId] = @W_SystemId
                                              ,[Sequence] = @W_Sequence
                                              ,[Caption] = @W_Caption
                                              ,[Message] = @W_Message
                                              ,[Action] = @W_Action
                                              ,[ParentMenuId] = @W_ParentMenuId
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[MenusRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MenusRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MenusRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[MenusRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Menus') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_SystemId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.SystemId') AS int)
                ,@W_Caption nvarchar(20) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Caption') AS nvarchar(20))

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        IF @W_SystemId IS NOT NULL AND @W_SystemId < CAST('1' AS int)
            THROW 51000, 'Valor de SystemId deve ser maior que ou igual à ''1''', 1
        IF @W_SystemId IS NOT NULL AND @W_SystemId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de SystemId deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.SystemId') AS int) AS [SystemId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Sequence') AS smallint) AS [Sequence]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Caption') AS nvarchar(20)) AS [Caption]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Message') AS nvarchar(50)) AS [Message]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Action') AS nvarchar(50)) AS [Action]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.ParentMenuId') AS int) AS [ParentMenuId]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Menus'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Menus] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[SystemId] = ISNULL(@W_SystemId, [C].[SystemId])
                  AND [C].[Caption] = ISNULL(@W_Caption, [C].[Caption])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [SystemId] = ISNULL(@W_SystemId, [SystemId])
                      AND [Caption] = ISNULL(@W_Caption, [Caption])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[SystemId]
                          ,[C].[Sequence]
                          ,[C].[Caption]
                          ,[C].[Message]
                          ,[C].[Action]
                          ,[C].[ParentMenuId]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[SystemId]
                              ,[C].[Sequence]
                              ,[C].[Caption]
                              ,[C].[Message]
                              ,[C].[Action]
                              ,[C].[ParentMenuId]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[UserValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[UserValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[UserValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[UserValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [UserValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Password'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Password'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.FullName'), [cruda].[JSON_EXTRACT](@LastRecord, '$.FullName'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.RetryLogins'), [cruda].[JSON_EXTRACT](@LastRecord, '$.RetryLogins'), 'tinyint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsActive'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsActive'), 'bit') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Users]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [Password] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Password')
                                  AND [FullName] = [cruda].[JSON_EXTRACT](@LastRecord, '$.FullName')
                                  AND [RetryLogins] = [cruda].[JSON_EXTRACT](@LastRecord, '$.RetryLogins')
                                  AND [IsActive] = [cruda].[JSON_EXTRACT](@LastRecord, '$.IsActive')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Users alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Users] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Users';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Users';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [UserId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em SystemsUsers';
                THROW 51000, @ErrorMessage, 1
            END
            IF EXISTS(SELECT 1 FROM [dbo].[Logins] WHERE [UserId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Logins';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Password nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Password') AS nvarchar(256))
                   ,@W_FullName nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.FullName') AS nvarchar(50))
                   ,@W_RetryLogins tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.RetryLogins') AS tinyint)
                   ,@W_IsActive bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsActive') AS bit)

            IF @W_RetryLogins IS NOT NULL AND @W_RetryLogins < CAST('0' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de RetryLogins em @ActualRecord deve ser maior que ou igual à 0';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_RetryLogins IS NOT NULL AND @W_RetryLogins > CAST('255' AS tinyint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de RetryLogins em @ActualRecord deve ser menor que ou igual à 255';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Users] WHERE [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Users_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Users] WHERE [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Users_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[UserPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[UserPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[UserPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[UserPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [UserPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[UserValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Users'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[UserCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[UserCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[UserCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[UserCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Users' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[UserValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Users] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Password nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Password') AS nvarchar(256))
                   ,@W_FullName nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.FullName') AS nvarchar(50))
                   ,@W_RetryLogins tinyint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.RetryLogins') AS tinyint)
                   ,@W_IsActive bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsActive') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Users] ([Id]
                                                ,[Name]
                                                ,[Password]
                                                ,[FullName]
                                                ,[RetryLogins]
                                                ,[IsActive]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_Password
                                                 ,@W_FullName
                                                 ,@W_RetryLogins
                                                 ,@W_IsActive
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Users] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[Password] = @W_Password
                                              ,[FullName] = @W_FullName
                                              ,[RetryLogins] = @W_RetryLogins
                                              ,[IsActive] = @W_IsActive
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[UsersRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[UsersRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[UsersRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[UsersRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Users') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                ,@W_FullName nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.FullName') AS nvarchar(50))
                ,@W_IsActive bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsActive') AS bit)

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Password') AS nvarchar(256)) AS [Password]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.FullName') AS nvarchar(50)) AS [FullName]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.RetryLogins') AS tinyint) AS [RetryLogins]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsActive') AS bit) AS [IsActive]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Users'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Users] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
                  AND [C].[FullName] = ISNULL(@W_FullName, [C].[FullName])
                  AND [C].[IsActive] = ISNULL(@W_IsActive, [C].[IsActive])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [Name] = ISNULL(@W_Name, [Name])
                      AND [FullName] = ISNULL(@W_FullName, [FullName])
                      AND [IsActive] = ISNULL(@W_IsActive, [IsActive])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[Name]
                          ,[C].[Password]
                          ,[C].[FullName]
                          ,[C].[RetryLogins]
                          ,[C].[IsActive]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[Name]
                              ,[C].[Password]
                              ,[C].[FullName]
                              ,[C].[RetryLogins]
                              ,[C].[IsActive]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemUserValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemUserValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemUserValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemUserValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [SystemUserValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.SystemId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.UserId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.UserId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Description'), 'nvarchar') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[SystemsUsers]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [SystemId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.SystemId')
                                  AND [UserId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.UserId')
                                  AND [Description] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Description')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de SystemsUsers alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em SystemsUsers';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em SystemsUsers';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'delete' BEGIN

            DECLARE @W_SystemId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS int)
                   ,@W_UserId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.UserId') AS int)
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))

            IF @W_SystemId IS NOT NULL AND @W_SystemId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de SystemId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_SystemId IS NOT NULL AND @W_SystemId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de SystemId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Id] = @W_SystemId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Systems';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_UserId IS NOT NULL AND @W_UserId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de UserId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_UserId IS NOT NULL AND @W_UserId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de UserId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Users] WHERE [Id] = @W_UserId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Users';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [SystemId] = @W_SystemId AND [UserId] = @W_UserId) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_SystemsUsers_SystemId_UserId já existe';
                    THROW 51000, @ErrorMessage, 1
                END
                IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [Description] = @W_Description) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_SystemsUsers_Description já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [SystemId] = @W_SystemId AND [UserId] = @W_UserId AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_SystemsUsers_SystemId_UserId inexiste';
                THROW 51000, @ErrorMessage, 1
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [Description] = @W_Description AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_SystemsUsers_Description inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemUserPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemUserPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemUserPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemUserPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [SystemUserPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[SystemUserValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'SystemsUsers'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemUserCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemUserCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemUserCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemUserCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'SystemsUsers' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[SystemUserValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[SystemsUsers] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_SystemId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS int)
                   ,@W_UserId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.UserId') AS int)
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))

            IF @Action = 'create'
                INSERT INTO [dbo].[SystemsUsers] ([Id]
                                                ,[SystemId]
                                                ,[UserId]
                                                ,[Description]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_SystemId
                                                 ,@W_UserId
                                                 ,@W_Description
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[SystemsUsers] SET [Id] = @W_Id
                                              ,[SystemId] = @W_SystemId
                                              ,[UserId] = @W_UserId
                                              ,[Description] = @W_Description
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemsUsersRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemsUsersRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemsUsersRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemsUsersRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'SystemsUsers') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_SystemId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.SystemId') AS int)
                ,@W_UserId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.UserId') AS int)
                ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Description') AS nvarchar(50))

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        IF @W_SystemId IS NOT NULL AND @W_SystemId < CAST('1' AS int)
            THROW 51000, 'Valor de SystemId deve ser maior que ou igual à ''1''', 1
        IF @W_SystemId IS NOT NULL AND @W_SystemId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de SystemId deve ser menor que ou igual à ''2147483647''', 1
        IF @W_UserId IS NOT NULL AND @W_UserId < CAST('1' AS int)
            THROW 51000, 'Valor de UserId deve ser maior que ou igual à ''1''', 1
        IF @W_UserId IS NOT NULL AND @W_UserId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de UserId deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.SystemId') AS int) AS [SystemId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.UserId') AS int) AS [UserId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'SystemsUsers'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[SystemsUsers] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[SystemId] = ISNULL(@W_SystemId, [C].[SystemId])
                  AND [C].[UserId] = ISNULL(@W_UserId, [C].[UserId])
                  AND [C].[Description] = ISNULL(@W_Description, [C].[Description])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [SystemId] = ISNULL(@W_SystemId, [SystemId])
                      AND [UserId] = ISNULL(@W_UserId, [UserId])
                      AND [Description] = ISNULL(@W_Description, [Description])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[SystemId]
                          ,[C].[UserId]
                          ,[C].[Description]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[SystemId]
                              ,[C].[UserId]
                              ,[C].[Description]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DatabaseValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DatabaseValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [DatabaseValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Description'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Alias'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Alias'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.ServerName'), [cruda].[JSON_EXTRACT](@LastRecord, '$.ServerName'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.HostName'), [cruda].[JSON_EXTRACT](@LastRecord, '$.HostName'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Port'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Port'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Logon'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Logon'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Password'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Password'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Folder'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Folder'), 'nvarchar') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Databases]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [Description] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Description')
                                  AND [Alias] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Alias')
                                  AND [cruda].[IS_EQUAL]([ServerName], [cruda].[JSON_EXTRACT](@LastRecord, '$.ServerName'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([HostName], [cruda].[JSON_EXTRACT](@LastRecord, '$.HostName'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Port], [cruda].[JSON_EXTRACT](@LastRecord, '$.Port'), 'int') = 1
                                  AND [cruda].[IS_EQUAL]([Logon], [cruda].[JSON_EXTRACT](@LastRecord, '$.Logon'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Password], [cruda].[JSON_EXTRACT](@LastRecord, '$.Password'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Folder], [cruda].[JSON_EXTRACT](@LastRecord, '$.Folder'), 'nvarchar') = 1) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Databases alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Databases';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Databases';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [DatabaseId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em SystemsDatabases';
                THROW 51000, @ErrorMessage, 1
            END
            IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [DatabaseId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em DatabasesTables';
                THROW 51000, @ErrorMessage, 1
            END
            IF EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [DatabaseId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Indexes';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_Alias nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_ServerName nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ServerName') AS nvarchar(50))
                   ,@W_HostName nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.HostName') AS nvarchar(25))
                   ,@W_Port int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Port') AS int)
                   ,@W_Logon nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Logon') AS nvarchar(256))
                   ,@W_Password nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Password') AS nvarchar(256))
                   ,@W_Folder nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Folder') AS nvarchar(256))

            IF @W_Port IS NOT NULL AND @W_Port < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Port em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Port IS NOT NULL AND @W_Port > CAST('65535' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Port em @ActualRecord deve ser menor que ou igual à 65535';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Databases_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
                IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Alias] = @W_Alias) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Databases_Alias já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Databases_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Alias] = @W_Alias AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Databases_Alias inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DatabasePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabasePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabasePersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DatabasePersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [DatabasePersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[DatabaseValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Databases'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DatabaseCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DatabaseCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Databases' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[DatabaseValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Databases] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_Alias nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_ServerName nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ServerName') AS nvarchar(50))
                   ,@W_HostName nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.HostName') AS nvarchar(25))
                   ,@W_Port int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Port') AS int)
                   ,@W_Logon nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Logon') AS nvarchar(256))
                   ,@W_Password nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Password') AS nvarchar(256))
                   ,@W_Folder nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Folder') AS nvarchar(256))

            IF @Action = 'create'
                INSERT INTO [dbo].[Databases] ([Id]
                                                ,[Name]
                                                ,[Description]
                                                ,[Alias]
                                                ,[ServerName]
                                                ,[HostName]
                                                ,[Port]
                                                ,[Logon]
                                                ,[Password]
                                                ,[Folder]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_Description
                                                 ,@W_Alias
                                                 ,@W_ServerName
                                                 ,@W_HostName
                                                 ,@W_Port
                                                 ,@W_Logon
                                                 ,@W_Password
                                                 ,@W_Folder
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Databases] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[Description] = @W_Description
                                              ,[Alias] = @W_Alias
                                              ,[ServerName] = @W_ServerName
                                              ,[HostName] = @W_HostName
                                              ,[Port] = @W_Port
                                              ,[Logon] = @W_Logon
                                              ,[Password] = @W_Password
                                              ,[Folder] = @W_Folder
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DatabasesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabasesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabasesRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DatabasesRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Databases') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                ,@W_Alias nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Alias') AS nvarchar(25))

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Alias') AS nvarchar(25)) AS [Alias]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.ServerName') AS nvarchar(50)) AS [ServerName]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.HostName') AS nvarchar(25)) AS [HostName]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Port') AS int) AS [Port]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Logon') AS nvarchar(256)) AS [Logon]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Password') AS nvarchar(256)) AS [Password]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Folder') AS nvarchar(256)) AS [Folder]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Databases'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Databases] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
                  AND [C].[Alias] = ISNULL(@W_Alias, [C].[Alias])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [Name] = ISNULL(@W_Name, [Name])
                      AND [Alias] = ISNULL(@W_Alias, [Alias])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[Name]
                          ,[C].[Description]
                          ,[C].[Alias]
                          ,[C].[ServerName]
                          ,[C].[HostName]
                          ,[C].[Port]
                          ,[C].[Logon]
                          ,[C].[Password]
                          ,[C].[Folder]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[Name]
                              ,[C].[Description]
                              ,[C].[Alias]
                              ,[C].[ServerName]
                              ,[C].[HostName]
                              ,[C].[Port]
                              ,[C].[Logon]
                              ,[C].[Password]
                              ,[C].[Folder]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemDatabaseValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemDatabaseValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemDatabaseValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemDatabaseValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [SystemDatabaseValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.SystemId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.DatabaseId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Description'), 'nvarchar') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[SystemsDatabases]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [SystemId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.SystemId')
                                  AND [DatabaseId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.DatabaseId')
                                  AND [Description] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Description')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de SystemsDatabases alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em SystemsDatabases';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em SystemsDatabases';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'delete' BEGIN

            DECLARE @W_SystemId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS int)
                   ,@W_DatabaseId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS int)
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))

            IF @W_SystemId IS NOT NULL AND @W_SystemId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de SystemId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_SystemId IS NOT NULL AND @W_SystemId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de SystemId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Id] = @W_SystemId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Systems';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de DatabaseId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de DatabaseId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Id] = @W_DatabaseId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Databases';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [SystemId] = @W_SystemId AND [DatabaseId] = @W_DatabaseId) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_SystemsDatabases_SystemId_DatabaseId já existe';
                    THROW 51000, @ErrorMessage, 1
                END
                IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [Description] = @W_Description) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_SystemsDatabases_Description já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [SystemId] = @W_SystemId AND [DatabaseId] = @W_DatabaseId AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_SystemsDatabases_SystemId_DatabaseId inexiste';
                THROW 51000, @ErrorMessage, 1
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [Description] = @W_Description AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_SystemsDatabases_Description inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemDatabasePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemDatabasePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemDatabasePersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemDatabasePersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [SystemDatabasePersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[SystemDatabaseValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'SystemsDatabases'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemDatabaseCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemDatabaseCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemDatabaseCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemDatabaseCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'SystemsDatabases' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[SystemDatabaseValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[SystemsDatabases] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_SystemId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS int)
                   ,@W_DatabaseId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS int)
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))

            IF @Action = 'create'
                INSERT INTO [dbo].[SystemsDatabases] ([Id]
                                                ,[SystemId]
                                                ,[DatabaseId]
                                                ,[Description]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_SystemId
                                                 ,@W_DatabaseId
                                                 ,@W_Description
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[SystemsDatabases] SET [Id] = @W_Id
                                              ,[SystemId] = @W_SystemId
                                              ,[DatabaseId] = @W_DatabaseId
                                              ,[Description] = @W_Description
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[SystemsDatabasesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemsDatabasesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemsDatabasesRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[SystemsDatabasesRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'SystemsDatabases') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_SystemId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.SystemId') AS int)
                ,@W_DatabaseId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.DatabaseId') AS int)
                ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Description') AS nvarchar(50))

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        IF @W_SystemId IS NOT NULL AND @W_SystemId < CAST('1' AS int)
            THROW 51000, 'Valor de SystemId deve ser maior que ou igual à ''1''', 1
        IF @W_SystemId IS NOT NULL AND @W_SystemId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de SystemId deve ser menor que ou igual à ''2147483647''', 1
        IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId < CAST('1' AS int)
            THROW 51000, 'Valor de DatabaseId deve ser maior que ou igual à ''1''', 1
        IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de DatabaseId deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.SystemId') AS int) AS [SystemId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.DatabaseId') AS int) AS [DatabaseId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'SystemsDatabases'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[SystemsDatabases] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[SystemId] = ISNULL(@W_SystemId, [C].[SystemId])
                  AND [C].[DatabaseId] = ISNULL(@W_DatabaseId, [C].[DatabaseId])
                  AND [C].[Description] = ISNULL(@W_Description, [C].[Description])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [SystemId] = ISNULL(@W_SystemId, [SystemId])
                      AND [DatabaseId] = ISNULL(@W_DatabaseId, [DatabaseId])
                      AND [Description] = ISNULL(@W_Description, [Description])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[SystemId]
                          ,[C].[DatabaseId]
                          ,[C].[Description]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[SystemId]
                              ,[C].[DatabaseId]
                              ,[C].[Description]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[TableValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TableValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TableValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[TableValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [TableValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Alias'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Alias'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Description'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.ParentTableId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.ParentTableId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsPaged'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsPaged'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.CurrentId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.CurrentId'), 'int') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Tables]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [Alias] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Alias')
                                  AND [Description] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Description')
                                  AND [cruda].[IS_EQUAL]([ParentTableId], [cruda].[JSON_EXTRACT](@LastRecord, '$.ParentTableId'), 'int') = 1
                                  AND [IsPaged] = [cruda].[JSON_EXTRACT](@LastRecord, '$.IsPaged')
                                  AND [CurrentId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.CurrentId')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Tables alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Tables';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Tables';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [TableId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em DatabasesTables';
                THROW 51000, @ErrorMessage, 1
            END
            IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Columns';
                THROW 51000, @ErrorMessage, 1
            END
            IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [ReferenceTableId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Columns';
                THROW 51000, @ErrorMessage, 1
            END
            IF EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [TableId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Indexes';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_ParentTableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ParentTableId') AS int)
                   ,@W_IsPaged bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsPaged') AS bit)
                   ,@W_CurrentId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.CurrentId') AS int)

            IF @W_ParentTableId IS NOT NULL AND @W_ParentTableId < CAST('0' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de ParentTableId em @ActualRecord deve ser maior que ou igual à 0';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_ParentTableId IS NOT NULL AND @W_ParentTableId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de ParentTableId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_CurrentId IS NOT NULL AND @W_CurrentId < CAST('0' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de CurrentId em @ActualRecord deve ser maior que ou igual à 0';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_CurrentId IS NOT NULL AND @W_CurrentId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de CurrentId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Tables_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
                IF EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Alias] = @W_Alias) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Tables_Alias já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Tables_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Alias] = @W_Alias AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Tables_Alias inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[TablePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TablePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TablePersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[TablePersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [TablePersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[TableValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Tables'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[TableCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TableCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TableCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[TableCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Tables' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[TableValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Tables] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_ParentTableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ParentTableId') AS int)
                   ,@W_IsPaged bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsPaged') AS bit)
                   ,@W_CurrentId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.CurrentId') AS int)

            IF @Action = 'create'
                INSERT INTO [dbo].[Tables] ([Id]
                                                ,[Name]
                                                ,[Alias]
                                                ,[Description]
                                                ,[ParentTableId]
                                                ,[IsPaged]
                                                ,[CurrentId]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_Alias
                                                 ,@W_Description
                                                 ,@W_ParentTableId
                                                 ,@W_IsPaged
                                                 ,@W_CurrentId
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Tables] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[Alias] = @W_Alias
                                              ,[Description] = @W_Description
                                              ,[ParentTableId] = @W_ParentTableId
                                              ,[IsPaged] = @W_IsPaged
                                              ,[CurrentId] = @W_CurrentId
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[TablesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TablesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TablesRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[TablesRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Tables') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                ,@W_Alias nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Alias') AS nvarchar(25))
                ,@W_IsPaged bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsPaged') AS bit)

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Alias') AS nvarchar(25)) AS [Alias]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.ParentTableId') AS int) AS [ParentTableId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsPaged') AS bit) AS [IsPaged]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.CurrentId') AS int) AS [CurrentId]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Tables'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Tables] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
                  AND [C].[Alias] = ISNULL(@W_Alias, [C].[Alias])
                  AND [C].[IsPaged] = ISNULL(@W_IsPaged, [C].[IsPaged])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [Name] = ISNULL(@W_Name, [Name])
                      AND [Alias] = ISNULL(@W_Alias, [Alias])
                      AND [IsPaged] = ISNULL(@W_IsPaged, [IsPaged])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[Name]
                          ,[C].[Alias]
                          ,[C].[Description]
                          ,[C].[ParentTableId]
                          ,[C].[IsPaged]
                          ,[C].[CurrentId]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[Name]
                              ,[C].[Alias]
                              ,[C].[Description]
                              ,[C].[ParentTableId]
                              ,[C].[IsPaged]
                              ,[C].[CurrentId]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DatabaseTableValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseTableValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseTableValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DatabaseTableValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [DatabaseTableValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.DatabaseId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.TableId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.TableId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Description'), 'nvarchar') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[DatabasesTables]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [DatabaseId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.DatabaseId')
                                  AND [TableId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.TableId')
                                  AND [Description] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Description')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de DatabasesTables alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em DatabasesTables';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em DatabasesTables';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'delete' BEGIN

            DECLARE @W_DatabaseId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS int)
                   ,@W_TableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS int)
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))

            IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de DatabaseId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de DatabaseId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Id] = @W_DatabaseId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Databases';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_TableId IS NOT NULL AND @W_TableId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de TableId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_TableId IS NOT NULL AND @W_TableId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de TableId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Id] = @W_TableId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Tables';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [Id] = @W_Id AND [TableId] = @W_TableId) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_DatabasesTables_DatabaseId_TableId já existe';
                    THROW 51000, @ErrorMessage, 1
                END
                IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [Description] = @W_Description) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_DatabasesTables_Description já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [Id] = @W_Id AND [TableId] = @W_TableId AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_DatabasesTables_DatabaseId_TableId inexiste';
                THROW 51000, @ErrorMessage, 1
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [Description] = @W_Description AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_DatabasesTables_Description inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DatabaseTablePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseTablePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseTablePersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DatabaseTablePersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [DatabaseTablePersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[DatabaseTableValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'DatabasesTables'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DatabaseTableCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseTableCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseTableCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DatabaseTableCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'DatabasesTables' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[DatabaseTableValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[DatabasesTables] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_DatabaseId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS int)
                   ,@W_TableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS int)
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))

            IF @Action = 'create'
                INSERT INTO [dbo].[DatabasesTables] ([Id]
                                                ,[DatabaseId]
                                                ,[TableId]
                                                ,[Description]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_DatabaseId
                                                 ,@W_TableId
                                                 ,@W_Description
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[DatabasesTables] SET [Id] = @W_Id
                                              ,[DatabaseId] = @W_DatabaseId
                                              ,[TableId] = @W_TableId
                                              ,[Description] = @W_Description
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[DatabasesTablesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabasesTablesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabasesTablesRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[DatabasesTablesRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'DatabasesTables') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_DatabaseId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.DatabaseId') AS int)
                ,@W_TableId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.TableId') AS int)
                ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Description') AS nvarchar(50))

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId < CAST('1' AS int)
            THROW 51000, 'Valor de DatabaseId deve ser maior que ou igual à ''1''', 1
        IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de DatabaseId deve ser menor que ou igual à ''2147483647''', 1
        IF @W_TableId IS NOT NULL AND @W_TableId < CAST('1' AS int)
            THROW 51000, 'Valor de TableId deve ser maior que ou igual à ''1''', 1
        IF @W_TableId IS NOT NULL AND @W_TableId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de TableId deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.DatabaseId') AS int) AS [DatabaseId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.TableId') AS int) AS [TableId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'DatabasesTables'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[DatabasesTables] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[DatabaseId] = ISNULL(@W_DatabaseId, [C].[DatabaseId])
                  AND [C].[TableId] = ISNULL(@W_TableId, [C].[TableId])
                  AND [C].[Description] = ISNULL(@W_Description, [C].[Description])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [DatabaseId] = ISNULL(@W_DatabaseId, [DatabaseId])
                      AND [TableId] = ISNULL(@W_TableId, [TableId])
                      AND [Description] = ISNULL(@W_Description, [Description])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[DatabaseId]
                          ,[C].[TableId]
                          ,[C].[Description]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[DatabaseId]
                              ,[C].[TableId]
                              ,[C].[Description]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[ColumnValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ColumnValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ColumnValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[ColumnValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [ColumnValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.TableId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.TableId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Sequence'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Sequence'), 'smallint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.DomainId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.DomainId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.ReferenceTableId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.ReferenceTableId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Description'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Title'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Title'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Caption'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Caption'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.ValidValues'), [cruda].[JSON_EXTRACT](@LastRecord, '$.ValidValues'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Default'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Default'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Minimum'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Minimum'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Maximum'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Maximum'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsPrimarykey'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsPrimarykey'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsAutoIncrement'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsAutoIncrement'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsRequired'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsRequired'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsListable'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsListable'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsFilterable'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsFilterable'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsEditable'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsEditable'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsGridable'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsGridable'), 'bit') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsEncrypted'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsEncrypted'), 'bit') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Columns]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [TableId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.TableId')
                                  AND [Sequence] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Sequence')
                                  AND [DomainId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.DomainId')
                                  AND [cruda].[IS_EQUAL]([ReferenceTableId], [cruda].[JSON_EXTRACT](@LastRecord, '$.ReferenceTableId'), 'int') = 1
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [Description] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Description')
                                  AND [Title] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Title')
                                  AND [Caption] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Caption')
                                  AND [cruda].[IS_EQUAL]([ValidValues], [cruda].[JSON_EXTRACT](@LastRecord, '$.ValidValues'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Default], [cruda].[JSON_EXTRACT](@LastRecord, '$.Default'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Minimum], [cruda].[JSON_EXTRACT](@LastRecord, '$.Minimum'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([Maximum], [cruda].[JSON_EXTRACT](@LastRecord, '$.Maximum'), 'nvarchar') = 1
                                  AND [cruda].[IS_EQUAL]([IsPrimarykey], [cruda].[JSON_EXTRACT](@LastRecord, '$.IsPrimarykey'), 'bit') = 1
                                  AND [cruda].[IS_EQUAL]([IsAutoIncrement], [cruda].[JSON_EXTRACT](@LastRecord, '$.IsAutoIncrement'), 'bit') = 1
                                  AND [IsRequired] = [cruda].[JSON_EXTRACT](@LastRecord, '$.IsRequired')
                                  AND [cruda].[IS_EQUAL]([IsListable], [cruda].[JSON_EXTRACT](@LastRecord, '$.IsListable'), 'bit') = 1
                                  AND [cruda].[IS_EQUAL]([IsFilterable], [cruda].[JSON_EXTRACT](@LastRecord, '$.IsFilterable'), 'bit') = 1
                                  AND [cruda].[IS_EQUAL]([IsEditable], [cruda].[JSON_EXTRACT](@LastRecord, '$.IsEditable'), 'bit') = 1
                                  AND [cruda].[IS_EQUAL]([IsGridable], [cruda].[JSON_EXTRACT](@LastRecord, '$.IsGridable'), 'bit') = 1
                                  AND [cruda].[IS_EQUAL]([IsEncrypted], [cruda].[JSON_EXTRACT](@LastRecord, '$.IsEncrypted'), 'bit') = 1) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Columns alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Columns';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Columns';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [ColumnId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Indexkeys';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_TableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS int)
                   ,@W_Sequence smallint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_DomainId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.DomainId') AS int)
                   ,@W_ReferenceTableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ReferenceTableId') AS int)
                   ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_Title nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Title') AS nvarchar(25))
                   ,@W_Caption nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Caption') AS nvarchar(25))
                   ,@W_ValidValues nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ValidValues') AS nvarchar(MAX))
                   ,@W_Default nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Default') AS nvarchar(MAX))
                   ,@W_Minimum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(MAX))
                   ,@W_Maximum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(MAX))
                   ,@W_IsPrimarykey bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsPrimarykey') AS bit)
                   ,@W_IsAutoIncrement bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsAutoIncrement') AS bit)
                   ,@W_IsRequired bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsRequired') AS bit)
                   ,@W_IsListable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsListable') AS bit)
                   ,@W_IsFilterable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsFilterable') AS bit)
                   ,@W_IsEditable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsEditable') AS bit)
                   ,@W_IsGridable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsGridable') AS bit)
                   ,@W_IsEncrypted bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsEncrypted') AS bit)

            IF @W_TableId IS NOT NULL AND @W_TableId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de TableId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_TableId IS NOT NULL AND @W_TableId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de TableId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Id] = @W_TableId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Tables';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Sequence IS NOT NULL AND @W_Sequence < CAST('1' AS smallint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Sequence em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Sequence IS NOT NULL AND @W_Sequence > CAST('32767' AS smallint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Sequence em @ActualRecord deve ser menor que ou igual à 32767';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_DomainId IS NOT NULL AND @W_DomainId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de DomainId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_DomainId IS NOT NULL AND @W_DomainId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de DomainId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [Id] = @W_DomainId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Domains';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_ReferenceTableId IS NOT NULL AND @W_ReferenceTableId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de ReferenceTableId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_ReferenceTableId IS NOT NULL AND @W_ReferenceTableId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de ReferenceTableId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Id] = @W_ReferenceTableId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Tables';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_TableId AND [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Columns_TableId_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
                IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_TableId AND [Sequence] = @W_Sequence) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Columns_TableId_Sequence já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_TableId AND [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Columns_TableId_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_TableId AND [Sequence] = @W_Sequence AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Columns_TableId_Sequence inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[ColumnPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ColumnPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ColumnPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[ColumnPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [ColumnPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[ColumnValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Columns'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[ColumnCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ColumnCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ColumnCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[ColumnCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Columns' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[ColumnValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Columns] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_TableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS int)
                   ,@W_Sequence smallint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_DomainId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.DomainId') AS int)
                   ,@W_ReferenceTableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ReferenceTableId') AS int)
                   ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_Title nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Title') AS nvarchar(25))
                   ,@W_Caption nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Caption') AS nvarchar(25))
                   ,@W_ValidValues nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ValidValues') AS nvarchar(MAX))
                   ,@W_Default nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Default') AS nvarchar(MAX))
                   ,@W_Minimum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(MAX))
                   ,@W_Maximum nvarchar(MAX) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(MAX))
                   ,@W_IsPrimarykey bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsPrimarykey') AS bit)
                   ,@W_IsAutoIncrement bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsAutoIncrement') AS bit)
                   ,@W_IsRequired bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsRequired') AS bit)
                   ,@W_IsListable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsListable') AS bit)
                   ,@W_IsFilterable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsFilterable') AS bit)
                   ,@W_IsEditable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsEditable') AS bit)
                   ,@W_IsGridable bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsGridable') AS bit)
                   ,@W_IsEncrypted bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsEncrypted') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Columns] ([Id]
                                                ,[TableId]
                                                ,[Sequence]
                                                ,[DomainId]
                                                ,[ReferenceTableId]
                                                ,[Name]
                                                ,[Description]
                                                ,[Title]
                                                ,[Caption]
                                                ,[ValidValues]
                                                ,[Default]
                                                ,[Minimum]
                                                ,[Maximum]
                                                ,[IsPrimarykey]
                                                ,[IsAutoIncrement]
                                                ,[IsRequired]
                                                ,[IsListable]
                                                ,[IsFilterable]
                                                ,[IsEditable]
                                                ,[IsGridable]
                                                ,[IsEncrypted]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_TableId
                                                 ,@W_Sequence
                                                 ,@W_DomainId
                                                 ,@W_ReferenceTableId
                                                 ,@W_Name
                                                 ,@W_Description
                                                 ,@W_Title
                                                 ,@W_Caption
                                                 ,@W_ValidValues
                                                 ,@W_Default
                                                 ,@W_Minimum
                                                 ,@W_Maximum
                                                 ,@W_IsPrimarykey
                                                 ,@W_IsAutoIncrement
                                                 ,@W_IsRequired
                                                 ,@W_IsListable
                                                 ,@W_IsFilterable
                                                 ,@W_IsEditable
                                                 ,@W_IsGridable
                                                 ,@W_IsEncrypted
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Columns] SET [Id] = @W_Id
                                              ,[TableId] = @W_TableId
                                              ,[Sequence] = @W_Sequence
                                              ,[DomainId] = @W_DomainId
                                              ,[ReferenceTableId] = @W_ReferenceTableId
                                              ,[Name] = @W_Name
                                              ,[Description] = @W_Description
                                              ,[Title] = @W_Title
                                              ,[Caption] = @W_Caption
                                              ,[ValidValues] = @W_ValidValues
                                              ,[Default] = @W_Default
                                              ,[Minimum] = @W_Minimum
                                              ,[Maximum] = @W_Maximum
                                              ,[IsPrimarykey] = @W_IsPrimarykey
                                              ,[IsAutoIncrement] = @W_IsAutoIncrement
                                              ,[IsRequired] = @W_IsRequired
                                              ,[IsListable] = @W_IsListable
                                              ,[IsFilterable] = @W_IsFilterable
                                              ,[IsEditable] = @W_IsEditable
                                              ,[IsGridable] = @W_IsGridable
                                              ,[IsEncrypted] = @W_IsEncrypted
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[ColumnsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ColumnsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ColumnsRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[ColumnsRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Columns') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_TableId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.TableId') AS int)
                ,@W_DomainId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.DomainId') AS int)
                ,@W_ReferenceTableId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.ReferenceTableId') AS int)
                ,@W_Name nvarchar(25) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                ,@W_IsAutoIncrement bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsAutoIncrement') AS bit)
                ,@W_IsRequired bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsRequired') AS bit)
                ,@W_IsListable bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsListable') AS bit)
                ,@W_IsFilterable bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsFilterable') AS bit)
                ,@W_IsEditable bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsEditable') AS bit)
                ,@W_IsGridable bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsGridable') AS bit)
                ,@W_IsEncrypted bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsEncrypted') AS bit)

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        IF @W_TableId IS NOT NULL AND @W_TableId < CAST('1' AS int)
            THROW 51000, 'Valor de TableId deve ser maior que ou igual à ''1''', 1
        IF @W_TableId IS NOT NULL AND @W_TableId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de TableId deve ser menor que ou igual à ''2147483647''', 1
        IF @W_DomainId IS NOT NULL AND @W_DomainId < CAST('1' AS int)
            THROW 51000, 'Valor de DomainId deve ser maior que ou igual à ''1''', 1
        IF @W_DomainId IS NOT NULL AND @W_DomainId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de DomainId deve ser menor que ou igual à ''2147483647''', 1
        IF @W_ReferenceTableId IS NOT NULL AND @W_ReferenceTableId < CAST('1' AS int)
            THROW 51000, 'Valor de ReferenceTableId deve ser maior que ou igual à ''1''', 1
        IF @W_ReferenceTableId IS NOT NULL AND @W_ReferenceTableId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de ReferenceTableId deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.TableId') AS int) AS [TableId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Sequence') AS smallint) AS [Sequence]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.DomainId') AS int) AS [DomainId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.ReferenceTableId') AS int) AS [ReferenceTableId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Title') AS nvarchar(25)) AS [Title]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Caption') AS nvarchar(25)) AS [Caption]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.ValidValues') AS nvarchar(MAX)) AS [ValidValues]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Default') AS nvarchar(MAX)) AS [Default]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Minimum') AS nvarchar(MAX)) AS [Minimum]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Maximum') AS nvarchar(MAX)) AS [Maximum]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsPrimarykey') AS bit) AS [IsPrimarykey]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsAutoIncrement') AS bit) AS [IsAutoIncrement]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsRequired') AS bit) AS [IsRequired]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsListable') AS bit) AS [IsListable]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsFilterable') AS bit) AS [IsFilterable]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsEditable') AS bit) AS [IsEditable]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsGridable') AS bit) AS [IsGridable]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsEncrypted') AS bit) AS [IsEncrypted]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Columns] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[TableId] = ISNULL(@W_TableId, [C].[TableId])
                  AND [C].[DomainId] = ISNULL(@W_DomainId, [C].[DomainId])
                  AND (@W_ReferenceTableId IS NULL OR [C].[ReferenceTableId] = @W_ReferenceTableId)
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
                  AND (@W_IsAutoIncrement IS NULL OR [C].[IsAutoIncrement] = @W_IsAutoIncrement)
                  AND [C].[IsRequired] = ISNULL(@W_IsRequired, [C].[IsRequired])
                  AND (@W_IsListable IS NULL OR [C].[IsListable] = @W_IsListable)
                  AND (@W_IsFilterable IS NULL OR [C].[IsFilterable] = @W_IsFilterable)
                  AND (@W_IsEditable IS NULL OR [C].[IsEditable] = @W_IsEditable)
                  AND (@W_IsGridable IS NULL OR [C].[IsGridable] = @W_IsGridable)
                  AND (@W_IsEncrypted IS NULL OR [C].[IsEncrypted] = @W_IsEncrypted)
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [TableId] = ISNULL(@W_TableId, [TableId])
                      AND [DomainId] = ISNULL(@W_DomainId, [DomainId])
                      AND (@W_ReferenceTableId IS NULL OR [ReferenceTableId] = @W_ReferenceTableId)
                      AND [Name] = ISNULL(@W_Name, [Name])
                      AND (@W_IsAutoIncrement IS NULL OR [IsAutoIncrement] = @W_IsAutoIncrement)
                      AND [IsRequired] = ISNULL(@W_IsRequired, [IsRequired])
                      AND (@W_IsListable IS NULL OR [IsListable] = @W_IsListable)
                      AND (@W_IsFilterable IS NULL OR [IsFilterable] = @W_IsFilterable)
                      AND (@W_IsEditable IS NULL OR [IsEditable] = @W_IsEditable)
                      AND (@W_IsGridable IS NULL OR [IsGridable] = @W_IsGridable)
                      AND (@W_IsEncrypted IS NULL OR [IsEncrypted] = @W_IsEncrypted)

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[TableId]
                          ,[C].[Sequence]
                          ,[C].[DomainId]
                          ,[C].[ReferenceTableId]
                          ,[C].[Name]
                          ,[C].[Description]
                          ,[C].[Title]
                          ,[C].[Caption]
                          ,[C].[ValidValues]
                          ,[C].[Default]
                          ,[C].[Minimum]
                          ,[C].[Maximum]
                          ,[C].[IsPrimarykey]
                          ,[C].[IsAutoIncrement]
                          ,[C].[IsRequired]
                          ,[C].[IsListable]
                          ,[C].[IsFilterable]
                          ,[C].[IsEditable]
                          ,[C].[IsGridable]
                          ,[C].[IsEncrypted]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[TableId]
                              ,[C].[Sequence]
                              ,[C].[DomainId]
                              ,[C].[ReferenceTableId]
                              ,[C].[Name]
                              ,[C].[Description]
                              ,[C].[Title]
                              ,[C].[Caption]
                              ,[C].[ValidValues]
                              ,[C].[Default]
                              ,[C].[Minimum]
                              ,[C].[Maximum]
                              ,[C].[IsPrimarykey]
                              ,[C].[IsAutoIncrement]
                              ,[C].[IsRequired]
                              ,[C].[IsListable]
                              ,[C].[IsFilterable]
                              ,[C].[IsEditable]
                              ,[C].[IsGridable]
                              ,[C].[IsEncrypted]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[IndexValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[IndexValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [IndexValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.DatabaseId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.TableId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.TableId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Name'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsUnique'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsUnique'), 'bit') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Indexes]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [DatabaseId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.DatabaseId')
                                  AND [TableId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.TableId')
                                  AND [Name] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Name')
                                  AND [IsUnique] = [cruda].[JSON_EXTRACT](@LastRecord, '$.IsUnique')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Indexes alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Indexes';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Indexes';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave-primária referenciada em Indexkeys';
                THROW 51000, @ErrorMessage, 1
            END
        END ELSE BEGIN

            DECLARE @W_DatabaseId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS int)
                   ,@W_TableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS int)
                   ,@W_Name nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))
                   ,@W_IsUnique bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsUnique') AS bit)

            IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de DatabaseId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_DatabaseId IS NOT NULL AND @W_DatabaseId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de DatabaseId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Id] = @W_DatabaseId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Databases';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_TableId IS NOT NULL AND @W_TableId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de TableId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_TableId IS NOT NULL AND @W_TableId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de TableId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Id] = @W_TableId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Tables';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [DatabaseId] = @W_DatabaseId AND [Name] = @W_Name) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Indexes_DatabaseId_Name já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [DatabaseId] = @W_DatabaseId AND [Name] = @W_Name AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Indexes_DatabaseId_Name inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[IndexPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[IndexPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [IndexPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[IndexValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Indexes'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[IndexCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[IndexCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Indexes' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[IndexValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Indexes] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_DatabaseId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS int)
                   ,@W_TableId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS int)
                   ,@W_Name nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))
                   ,@W_IsUnique bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsUnique') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Indexes] ([Id]
                                                ,[DatabaseId]
                                                ,[TableId]
                                                ,[Name]
                                                ,[IsUnique]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_DatabaseId
                                                 ,@W_TableId
                                                 ,@W_Name
                                                 ,@W_IsUnique
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Indexes] SET [Id] = @W_Id
                                              ,[DatabaseId] = @W_DatabaseId
                                              ,[TableId] = @W_TableId
                                              ,[Name] = @W_Name
                                              ,[IsUnique] = @W_IsUnique
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[IndexesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexesRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[IndexesRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Indexes') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_TableId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.TableId') AS int)
                ,@W_Name nvarchar(50) = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(50))
                ,@W_IsUnique bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsUnique') AS bit)

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        IF @W_TableId IS NOT NULL AND @W_TableId < CAST('1' AS int)
            THROW 51000, 'Valor de TableId deve ser maior que ou igual à ''1''', 1
        IF @W_TableId IS NOT NULL AND @W_TableId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de TableId deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.DatabaseId') AS int) AS [DatabaseId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.TableId') AS int) AS [TableId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(50)) AS [Name]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsUnique') AS bit) AS [IsUnique]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Indexes'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Indexes] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[TableId] = ISNULL(@W_TableId, [C].[TableId])
                  AND [C].[Name] = ISNULL(@W_Name, [C].[Name])
                  AND [C].[IsUnique] = ISNULL(@W_IsUnique, [C].[IsUnique])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [TableId] = ISNULL(@W_TableId, [TableId])
                      AND [Name] = ISNULL(@W_Name, [Name])
                      AND [IsUnique] = ISNULL(@W_IsUnique, [IsUnique])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[DatabaseId]
                          ,[C].[TableId]
                          ,[C].[Name]
                          ,[C].[IsUnique]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[DatabaseId]
                              ,[C].[TableId]
                              ,[C].[Name]
                              ,[C].[IsUnique]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[IndexkeyValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexkeyValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexkeyValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[IndexkeyValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [IndexkeyValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IndexId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IndexId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Sequence'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Sequence'), 'smallint') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.ColumnId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.ColumnId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsDescending'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsDescending'), 'bit') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Indexkeys]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [IndexId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.IndexId')
                                  AND [Sequence] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Sequence')
                                  AND [ColumnId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.ColumnId')
                                  AND [IsDescending] = [cruda].[JSON_EXTRACT](@LastRecord, '$.IsDescending')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Indexkeys alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Indexkeys';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Indexkeys';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'delete' BEGIN

            DECLARE @W_IndexId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IndexId') AS int)
                   ,@W_Sequence smallint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_ColumnId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ColumnId') AS int)
                   ,@W_IsDescending bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsDescending') AS bit)

            IF @W_IndexId IS NOT NULL AND @W_IndexId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de IndexId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_IndexId IS NOT NULL AND @W_IndexId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de IndexId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [Id] = @W_IndexId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Indexes';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Sequence IS NOT NULL AND @W_Sequence < CAST('1' AS smallint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Sequence em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_Sequence IS NOT NULL AND @W_Sequence > CAST('32767' AS smallint) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Sequence em @ActualRecord deve ser menor que ou igual à 32767';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_ColumnId IS NOT NULL AND @W_ColumnId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de ColumnId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_ColumnId IS NOT NULL AND @W_ColumnId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de ColumnId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [Id] = @W_ColumnId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Columns';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_IndexId AND [Sequence] = @W_Sequence) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Indexkeys_IndexId_Sequence já existe';
                    THROW 51000, @ErrorMessage, 1
                END
                IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_IndexId AND [ColumnId] = @W_ColumnId) BEGIN
                    SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Indexkeys_IndexId_ColumnId já existe';
                    THROW 51000, @ErrorMessage, 1
                END
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_IndexId AND [Sequence] = @W_Sequence AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Indexkeys_IndexId_Sequence inexiste';
                THROW 51000, @ErrorMessage, 1
            END ELSE IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_IndexId AND [ColumnId] = @W_ColumnId AND [Id] <> @W_Id) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Chave única de UNQ_Indexkeys_IndexId_ColumnId inexiste';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[IndexkeyPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexkeyPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexkeyPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[IndexkeyPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [IndexkeyPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[IndexkeyValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Indexkeys'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[IndexkeyCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexkeyCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexkeyCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[IndexkeyCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Indexkeys' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[IndexkeyValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Indexkeys] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_IndexId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IndexId') AS int)
                   ,@W_Sequence smallint = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_ColumnId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.ColumnId') AS int)
                   ,@W_IsDescending bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsDescending') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Indexkeys] ([Id]
                                                ,[IndexId]
                                                ,[Sequence]
                                                ,[ColumnId]
                                                ,[IsDescending]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_IndexId
                                                 ,@W_Sequence
                                                 ,@W_ColumnId
                                                 ,@W_IsDescending
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Indexkeys] SET [Id] = @W_Id
                                              ,[IndexId] = @W_IndexId
                                              ,[Sequence] = @W_Sequence
                                              ,[ColumnId] = @W_ColumnId
                                              ,[IsDescending] = @W_IsDescending
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[IndexkeysRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexkeysRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexkeysRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[IndexkeysRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Indexkeys') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_IndexId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IndexId') AS int)
                ,@W_ColumnId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.ColumnId') AS int)
                ,@W_IsDescending bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsDescending') AS bit)

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        IF @W_IndexId IS NOT NULL AND @W_IndexId < CAST('1' AS int)
            THROW 51000, 'Valor de IndexId deve ser maior que ou igual à ''1''', 1
        IF @W_IndexId IS NOT NULL AND @W_IndexId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de IndexId deve ser menor que ou igual à ''2147483647''', 1
        IF @W_ColumnId IS NOT NULL AND @W_ColumnId < CAST('1' AS int)
            THROW 51000, 'Valor de ColumnId deve ser maior que ou igual à ''1''', 1
        IF @W_ColumnId IS NOT NULL AND @W_ColumnId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de ColumnId deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IndexId') AS int) AS [IndexId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Sequence') AS smallint) AS [Sequence]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.ColumnId') AS int) AS [ColumnId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsDescending') AS bit) AS [IsDescending]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Indexkeys'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Indexkeys] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[IndexId] = ISNULL(@W_IndexId, [C].[IndexId])
                  AND [C].[ColumnId] = ISNULL(@W_ColumnId, [C].[ColumnId])
                  AND [C].[IsDescending] = ISNULL(@W_IsDescending, [C].[IsDescending])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [IndexId] = ISNULL(@W_IndexId, [IndexId])
                      AND [ColumnId] = ISNULL(@W_ColumnId, [ColumnId])
                      AND [IsDescending] = ISNULL(@W_IsDescending, [IsDescending])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[IndexId]
                          ,[C].[Sequence]
                          ,[C].[ColumnId]
                          ,[C].[IsDescending]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[IndexId]
                              ,[C].[Sequence]
                              ,[C].[ColumnId]
                              ,[C].[IsDescending]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[LoginValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[LoginValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[LoginValidate] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[LoginValidate](@LoginId INT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@LastRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [LoginValidate]: '

        IF @LoginId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @LoginId é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action NOT IN ('create', 'update', 'delete') BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @Action é inválido';
            THROW 51000, @ErrorMessage, 1
        END
        IF @ActualRecord IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord é requerido';
            THROW 51000, @ErrorMessage, 1
        END
        IF ISJSON(@ActualRecord) = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @ActualRecord não está no formato JSON';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'create' BEGIN
            IF @LastRecord IS NULL BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord é requerido';
                THROW 51000, @ErrorMessage, 1
            END
            IF ISJSON(@LastRecord) = 0 BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de @LastRecord não está no formato JSON';
                THROW 51000, @ErrorMessage, 1
            END
            IF @Action = 'update'
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id'), [cruda].[JSON_EXTRACT](@LastRecord, '$.Id'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.SystemId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.UserId'), [cruda].[JSON_EXTRACT](@LastRecord, '$.UserId'), 'int') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.PublicKey'), [cruda].[JSON_EXTRACT](@LastRecord, '$.PublicKey'), 'nvarchar') = 1
                AND [cruda].[IS_EQUAL]([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsLogged'), [cruda].[JSON_EXTRACT](@LastRecord, '$.IsLogged'), 'bit') = 1
                RETURN 0
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Logins]
                            WHERE [Id] = [cruda].[JSON_EXTRACT](@LastRecord, '$.Id')
                                  AND [SystemId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.SystemId')
                                  AND [UserId] = [cruda].[JSON_EXTRACT](@LastRecord, '$.UserId')
                                  AND [PublicKey] = [cruda].[JSON_EXTRACT](@LastRecord, '$.PublicKey')
                                  AND [IsLogged] = [cruda].[JSON_EXTRACT](@LastRecord, '$.IsLogged')) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Registro de Logins alterado por outro usuário';
                THROW 51000, @ErrorMessage, 1
            END
        END

        DECLARE @TransactionId INT
                ,@IsConfirmed BIT
                ,@CreatedBy NVARCHAR(25)

        SELECT @TransactionId = [Id]
               ,@IsConfirmed = [IsConfirmed]
               ,@CreatedBy = [CreatedBy]
            FROM [cruda].[Transactions]
            WHERE [Id] = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Não existe transação para valor de @LoginId';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser maior que ou igual à 1';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('2147483647' AS int) BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord deve ser menor que ou igual à 2147483647';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Logins] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create' BEGIN
               SET @ErrorMessage = @ErrorMessage + 'Chave-primária já existe em Logins';
               THROW 51000, @ErrorMessage, 1
            END
        END ELSE IF @Action <> 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Chave-primária não existe em Logins';
            THROW 51000, @ErrorMessage, 1
        END
        IF @Action <> 'delete' BEGIN

            DECLARE @W_SystemId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS int)
                   ,@W_UserId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.UserId') AS int)
                   ,@W_PublicKey nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.PublicKey') AS nvarchar(256))
                   ,@W_IsLogged bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsLogged') AS bit)

            IF @W_SystemId IS NOT NULL AND @W_SystemId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de SystemId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_SystemId IS NOT NULL AND @W_SystemId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de SystemId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Id] = @W_SystemId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Systems';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_UserId IS NOT NULL AND @W_UserId < CAST('1' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de UserId em @ActualRecord deve ser maior que ou igual à 1';
                THROW 51000, @ErrorMessage, 1
            END
            IF @W_UserId IS NOT NULL AND @W_UserId > CAST('2147483647' AS int) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de UserId em @ActualRecord deve ser menor que ou igual à 2147483647';
                THROW 51000, @ErrorMessage, 1
            END
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Users] WHERE [Id] = @W_UserId) BEGIN
                SET @ErrorMessage = @ErrorMessage + 'Valor de Id em @ActualRecord inexiste em Users';
                THROW 51000, @ErrorMessage, 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[LoginPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[LoginPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[LoginPersist] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[LoginPersist](@LoginId INT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@LastRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @ErrorMessage NVARCHAR(255) = 'Stored Procedure [LoginPersist]: '
               ,@TransactionId INT
               ,@OperationId INT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[LoginValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE

        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [cruda].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[LastRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Logins'
                                             ,@Action
                                             ,@LastRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @ActionAux = 'delete' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro excluído nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'create' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Registro já existe nesta transação';
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @Action = 'update' BEGIN
            UPDATE [cruda].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [cruda].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [cruda].[Operations]
                SET [Action] = 'delete'
                   ,[LastRecord] = @LastRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END

        EXIT_PROCEDURE:

        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS INT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[LoginCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[LoginCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[LoginCommit] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[LoginCommit](@LoginId INT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId INT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId INT
               ,@TransactionIdAux INT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@LastRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @OperationId IS NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Valor de @OperationId requerido';
            THROW 51000, @ErrorMessage, 1
        END
        SELECT @TransactionIdAux = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@LastRecord = [LastRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [cruda].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        IF @TableName <> 'Logins' BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Tabela da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Erro grave de segurança';
            THROW 51000, @ErrorMessage, 1
        END
        IF @@ROWCOUNT = 0 BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Operação inexistente';
            THROW 51000, @ErrorMessage, 1
        END
        EXEC @TransactionId = [dbo].[LoginValidate] @LoginId, @UserName, @Action, @LastRecord, @ActualRecord
        IF @TransactionId = 0
            GOTO EXIT_PROCEDURE
        IF @TransactionIdAux <> @TransactionId BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação da operação é inválida';
            THROW 51000, @ErrorMessage, 1
        END
        DECLARE @W_Id int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.Id') AS int)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Logins] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_SystemId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS int)
                   ,@W_UserId int = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.UserId') AS int)
                   ,@W_PublicKey nvarchar(256) = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.PublicKey') AS nvarchar(256))
                   ,@W_IsLogged bit = CAST([cruda].[JSON_EXTRACT](@ActualRecord, '$.IsLogged') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Logins] ([Id]
                                                ,[SystemId]
                                                ,[UserId]
                                                ,[PublicKey]
                                                ,[IsLogged]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_SystemId
                                                 ,@W_UserId
                                                 ,@W_PublicKey
                                                 ,@W_IsLogged
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Logins] SET [Id] = @W_Id
                                              ,[SystemId] = @W_SystemId
                                              ,[UserId] = @W_UserId
                                              ,[PublicKey] = @W_PublicKey
                                              ,[IsLogged] = @W_IsLogged
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END

        EXIT_PROCEDURE:

        UPDATE [cruda].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN 1
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        THROW
    END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[LoginsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[LoginsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[LoginsRead] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[LoginsRead](@LoginId INT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            THROW 51000, 'Valor de @RecordFilter é requerido', 1
        IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [COLUMN_NAME] AS [ColumnName]
                                                    FROM [INFORMATION_SCHEMA].[COLUMNS]
                                                    WHERE [TABLE_NAME] = 'Logins') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN LTRIM(RTRIM(RIGHT([value], 4))) = 'DESC' THEN 'DESC'
                                                         WHEN LTRIM(RTRIM(RIGHT([value], 3))) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId INT = (SELECT MAX([Id]) FROM [cruda].[Transactions] WHERE [LoginId] = @LoginId)
                ,@W_Id int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.Id') AS int)
                ,@W_SystemId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.SystemId') AS int)
                ,@W_UserId int = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.UserId') AS int)
                ,@W_IsLogged bit = CAST([cruda].[JSON_EXTRACT](@RecordFilter, '$.IsLogged') AS bit)

        IF @W_Id IS NOT NULL AND @W_Id < CAST('1' AS int)
            THROW 51000, 'Valor de Id deve ser maior que ou igual à ''1''', 1
        IF @W_Id IS NOT NULL AND @W_Id > CAST('2147483647' AS int)
            THROW 51000, 'Valor de Id deve ser menor que ou igual à ''2147483647''', 1
        IF @W_SystemId IS NOT NULL AND @W_SystemId < CAST('1' AS int)
            THROW 51000, 'Valor de SystemId deve ser maior que ou igual à ''1''', 1
        IF @W_SystemId IS NOT NULL AND @W_SystemId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de SystemId deve ser menor que ou igual à ''2147483647''', 1
        IF @W_UserId IS NOT NULL AND @W_UserId < CAST('1' AS int)
            THROW 51000, 'Valor de UserId deve ser maior que ou igual à ''1''', 1
        IF @W_UserId IS NOT NULL AND @W_UserId > CAST('2147483647' AS int)
            THROW 51000, 'Valor de UserId deve ser menor que ou igual à ''2147483647''', 1
        SELECT [Action] AS [_]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.Id') AS int) AS [Id]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.SystemId') AS int) AS [SystemId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.UserId') AS int) AS [UserId]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.PublicKey') AS nvarchar(256)) AS [PublicKey]
              ,CAST([cruda].[JSON_EXTRACT]([ActualRecord], '$.IsLogged') AS bit) AS [IsLogged]
            INTO [dbo].[#tmpOperations]
            FROM [cruda].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Logins'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#tmpOperations]([Id])
        SELECT CAST('C' AS CHAR(1)) AS [_] 
              ,[C].[Id]
            INTO [dbo].[#tmp]
            FROM [dbo].[Logins] [C]
                LEFT JOIN [dbo].[#tmpOperations] [D] ON [D].[Id] = [C].[Id] AND [D].[_] <> 'create'
            WHERE [D].[Id] IS NULL
                  AND [C].[Id] = ISNULL(@W_Id, [C].[Id])
                  AND [C].[SystemId] = ISNULL(@W_SystemId, [C].[SystemId])
                  AND [C].[UserId] = ISNULL(@W_UserId, [C].[UserId])
                  AND [C].[IsLogged] = ISNULL(@W_IsLogged, [C].[IsLogged])
        UNION ALL
            SELECT CAST('O' AS CHAR(1)) AS [_]
                  ,[Id]
                FROM [dbo].[#tmpOperations]
                WHERE [_] IN ('create', 'update')
                      AND [Id] = ISNULL(@W_Id, [Id])
                      AND [SystemId] = ISNULL(@W_SystemId, [SystemId])
                      AND [UserId] = ISNULL(@W_UserId, [UserId])
                      AND [IsLogged] = ISNULL(@W_IsLogged, [IsLogged])

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTmp] ON [dbo].[#tmp]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @offset = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @offset = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @offset + @LimitRows > @RowCount
                SET @offset = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END

        DECLARE @sql NVARCHAR(MAX)
               ,@className NVARCHAR(50) = 'RecordColumn'

        SELECT TOP 0 @className AS [ClassName], * INTO [dbo].[#view] FROM [dbo].[#tmp]
        SET @sql = 'SELECT @className AS [ClassName]
                          ,[C].[Id]
                          ,[C].[SystemId]
                          ,[C].[UserId]
                          ,[C].[PublicKey]
                          ,[C].[IsLogged]
                        FROM [dbo].[#tmp] [T]
                            INNER JOIN [dbo].[Columns] [C] ON [C].[Id] = [T].[Id]
                        WHERE [T].[_] = ''C''
                    UNION ALL
                        SELECT @className AS [ClassName]
                              ,[C].[Id]
                              ,[C].[SystemId]
                              ,[C].[UserId]
                              ,[C].[PublicKey]
                              ,[C].[IsLogged]
                            FROM [dbo].[#tmp] [T]
                                INNER JOIN [dbo].[#tmpOperations] [C] ON [C].[Id] = [T].[Id]
                            WHERE [T].[_] = ''O''
                    ORDER BY ' + @OrderBy + '
                    OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                    FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql,
                           N'@className NVARCHAR(50), @Offset INT, @LimitRows INT',
                           @className = @className, @Offset = @offset, @LimitRows = @LimitRows

        RETURN @RowCount
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = 'Stored Procedure [' + ERROR_PROCEDURE() + '] Error: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO
