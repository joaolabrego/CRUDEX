/**********************************************************************************
Criar banco-de-dados crudex
**********************************************************************************/
USE [master]
SET NOCOUNT ON
IF EXISTS(SELECT 1 FROM sys.databases where name = 'crudex')
    DROP DATABASE crudex
GO
CREATE DATABASE [crudex]
    CONTAINMENT = NONE
    ON PRIMARY
    (NAME = N'$crudex', FILENAME = N'D:\CRUDEX-C#\CRUDEX\CRUDEX\db\crudex.mdf', SIZE = 8192KB, MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB)
    LOG ON
    (NAME = N'$crudex_log', FILENAME = N'D:\CRUDEX-C#\CRUDEX\CRUDEX\db\crudex.ldf', SIZE = 8192KB, MAXSIZE = 2048GB, FILEGROWTH = 65536KB)
    WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF
GO
ALTER DATABASE[crudex] SET COMPATIBILITY_LEVEL = 160
GO
IF(1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
    EXEC[crudex].[dbo].[sp_fulltext_database] @action = 'enable'
GO
ALTER DATABASE[crudex] SET ANSI_NULL_DEFAULT OFF
GO
ALTER DATABASE[crudex] SET ANSI_NULLS OFF
GO
ALTER DATABASE[crudex] SET ANSI_PADDING OFF
GO
ALTER DATABASE[crudex] SET ANSI_WARNINGS OFF
GO
ALTER DATABASE[crudex] SET ARITHABORT OFF
GO
ALTER DATABASE[crudex] SET AUTO_CLOSE OFF
GO
ALTER DATABASE[crudex] SET AUTO_SHRINK OFF
GO
ALTER DATABASE[crudex] SET AUTO_UPDATE_STATISTICS ON
GO
ALTER DATABASE[crudex] SET CURSOR_CLOSE_ON_COMMIT OFF
GO
ALTER DATABASE[crudex] SET CURSOR_DEFAULT  GLOBAL
GO
ALTER DATABASE[crudex] SET CONCAT_NULL_YIELDS_NULL OFF
GO
ALTER DATABASE[crudex] SET NUMERIC_ROUNDABORT OFF
GO
ALTER DATABASE[crudex] SET QUOTED_IDENTIFIER OFF
GO
ALTER DATABASE[crudex] SET RECURSIVE_TRIGGERS OFF
GO
ALTER DATABASE[crudex] SET  DISABLE_BROKER
GO
ALTER DATABASE[crudex] SET AUTO_UPDATE_STATISTICS_ASYNC OFF
GO
ALTER DATABASE[crudex] SET DATE_CORRELATION_OPTIMIZATION OFF
GO
ALTER DATABASE[crudex] SET TRUSTWORTHY OFF
GO
ALTER DATABASE[crudex] SET ALLOW_SNAPSHOT_ISOLATION ON
GO
ALTER DATABASE[crudex] SET PARAMETERIZATION SIMPLE
GO
ALTER DATABASE[crudex] SET READ_COMMITTED_SNAPSHOT OFF
GO
ALTER DATABASE[crudex] SET HONOR_BROKER_PRIORITY OFF
GO
ALTER DATABASE[crudex] SET RECOVERY SIMPLE
GO
ALTER DATABASE[crudex] SET  MULTI_USER
GO
ALTER DATABASE[crudex] SET PAGE_VERIFY CHECKSUM
GO
ALTER DATABASE[crudex] SET DB_CHAINING OFF
GO
ALTER DATABASE[crudex] SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF)
GO
ALTER DATABASE[crudex] SET TARGET_RECOVERY_TIME = 60 SECONDS
GO
ALTER DATABASE[crudex] SET DELAYED_DURABILITY = DISABLED
GO
ALTER DATABASE[crudex] SET ACCELERATED_DATABASE_RECOVERY = OFF
GO
ALTER DATABASE[crudex] SET QUERY_STORE = ON
GO
ALTER DATABASE[crudex] SET QUERY_STORE(OPERATION_MODE = READ_WRITE, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_STORAGE_SIZE_MB = 1000, QUERY_CAPTURE_MODE = AUTO, SIZE_BASED_CLEANUP_MODE = AUTO, MAX_PLANS_PER_QUERY = 200, WAIT_STATS_CAPTURE_MODE = ON)
GO
/**********************************************************************************
Início da criação dos scripts
**********************************************************************************/
USE [crudex]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE SCHEMA crudex AUTHORIZATION [dbo]
GO

/**********************************************************************************
Criar tabela [dbo].[Categories]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Categories]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Categories]
CREATE TABLE [dbo].[Categories]([Id] tinyint NOT NULL CHECK ([Id] >= CAST('1' AS tinyint))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[HtmlInputType] nvarchar(10) NULL
                                    ,[HtmlInputAlign] nvarchar(6) NULL
                                    ,[AskEncrypted] bit NOT NULL
                                    ,[AskMask] bit NOT NULL
                                    ,[AskListable] bit NOT NULL
                                    ,[AskDefault] bit NOT NULL
                                    ,[AskMinimum] bit NOT NULL
                                    ,[AskMaximum] bit NOT NULL
                                    ,[AskInWords] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Categories] ADD CONSTRAINT PK_Categories PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Categories_Name] ON [dbo].[Categories]([Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Types]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Types]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Types]
CREATE TABLE [dbo].[Types]([Id] tinyint NOT NULL CHECK ([Id] >= CAST('1' AS tinyint))
                                    ,[CategoryId] tinyint NOT NULL
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[MaxLength] int NULL CHECK ([MaxLength] >= CAST('1' AS int))
                                    ,[Minimum] nvarchar(max) NULL
                                    ,[Maximum] nvarchar(max) NULL
                                    ,[AskLength] bit NOT NULL
                                    ,[AskDecimals] bit NOT NULL
                                    ,[AskPrimarykey] bit NOT NULL
                                    ,[AskAutoincrement] bit NOT NULL
                                    ,[AskFilterable] bit NOT NULL
                                    ,[AskGridable] bit NOT NULL
                                    ,[AskCodification] bit NOT NULL
                                    ,[IsActive] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Types] ADD CONSTRAINT PK_Types PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Types_Name] ON [dbo].[Types]([Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Masks]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Masks]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Masks]
CREATE TABLE [dbo].[Masks]([Id] bigint NOT NULL
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Mask] nvarchar(max) NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Masks] ADD CONSTRAINT PK_Masks PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Masks_Name] ON [dbo].[Masks]([Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Domains]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Domains]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Domains]
CREATE TABLE [dbo].[Domains]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[TypeId] tinyint NOT NULL CHECK ([TypeId] >= CAST('1' AS tinyint))
                                    ,[MaskId] bigint NULL
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Length] smallint NULL CHECK ([Length] >= CAST('0' AS smallint))
                                    ,[Decimals] tinyint NULL CHECK ([Decimals] >= CAST('0' AS tinyint))
                                    ,[ValidValues] nvarchar(max) NULL
                                    ,[Default] nvarchar(max) NULL
                                    ,[Minimum] nvarchar(max) NULL
                                    ,[Maximum] nvarchar(max) NULL
                                    ,[Codification] nvarchar(5) NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Domains] ADD CONSTRAINT PK_Domains PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Domains_Name] ON [dbo].[Domains]([Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Systems]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Systems]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Systems]
CREATE TABLE [dbo].[Systems]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[ClientName] nvarchar(15) NOT NULL
                                    ,[MaxRetryLogins] tinyint NOT NULL DEFAULT CAST('5' AS tinyint) CHECK ([MaxRetryLogins] >= CAST('1' AS tinyint))
                                    ,[IsOffAir] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Systems] ADD CONSTRAINT PK_Systems PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Systems_Name] ON [dbo].[Systems]([Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Menus]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Menus]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Menus]
CREATE TABLE [dbo].[Menus]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[SystemId] bigint NOT NULL CHECK ([SystemId] >= CAST('1' AS bigint))
                                    ,[Sequence] smallint NOT NULL CHECK ([Sequence] >= CAST('1' AS smallint))
                                    ,[Caption] nvarchar(20) NOT NULL
                                    ,[Message] nvarchar(50) NOT NULL
                                    ,[Action] nvarchar(50) NULL
                                    ,[ParentMenuId] bigint NULL CHECK ([ParentMenuId] >= CAST('1' AS bigint))
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Menus] ADD CONSTRAINT PK_Menus PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Menus_SystemId_Sequence] ON [dbo].[Menus]([SystemId] ASC, [Sequence] ASC)
CREATE UNIQUE INDEX [UNQ_Menus_SystemId_Caption] ON [dbo].[Menus]([SystemId] ASC, [Caption] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Users]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Users]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Users]
CREATE TABLE [dbo].[Users]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Password] nvarchar(256) NOT NULL
                                    ,[FullName] nvarchar(50) NOT NULL
                                    ,[RetryLogins] tinyint NOT NULL DEFAULT CAST('0' AS tinyint) CHECK ([RetryLogins] >= CAST('0' AS tinyint))
                                    ,[IsActive] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Users] ADD CONSTRAINT PK_Users PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Users_Name] ON [dbo].[Users]([Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[SystemsUsers]
**********************************************************************************/
IF (SELECT object_id('[dbo].[SystemsUsers]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[SystemsUsers]
CREATE TABLE [dbo].[SystemsUsers]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[SystemId] bigint NOT NULL CHECK ([SystemId] >= CAST('1' AS bigint))
                                    ,[UserId] bigint NOT NULL CHECK ([UserId] >= CAST('1' AS bigint))
                                    ,[Name] nvarchar(50) NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[SystemsUsers] ADD CONSTRAINT PK_SystemsUsers PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_SystemsUsers_SystemId_UserId] ON [dbo].[SystemsUsers]([SystemId] ASC, [UserId] ASC)
CREATE UNIQUE INDEX [UNQ_SystemsUsers_Name] ON [dbo].[SystemsUsers]([Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Connections]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Connections]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Connections]
CREATE TABLE [dbo].[Connections]([Id] bigint NOT NULL
                                    ,[Provider] nvarchar(50) NOT NULL
                                    ,[HostName] nvarchar(25) NOT NULL
                                    ,[Port] int NOT NULL CHECK ([Port] >= CAST('1' AS int))
                                    ,[IntegratedSecurity] bit NOT NULL
                                    ,[ConnectionTimeout] smallint NOT NULL CHECK ([ConnectionTimeout] >= CAST('0' AS smallint))
                                    ,[ExtendedProperties] nvarchar(max) NULL
                                    ,[UserID] nvarchar(25) NULL
                                    ,[Password] nvarchar(256) NULL
                                    ,[PersistSecurityInfo] bit NULL
                                    ,[AdditionalParameters] nvarchar(max) NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Connections] ADD CONSTRAINT PK_Connections PRIMARY KEY CLUSTERED ([Id])

/**********************************************************************************
Criar tabela [dbo].[Databases]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Databases]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Databases]
CREATE TABLE [dbo].[Databases]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[ConnectionId] bigint NOT NULL CHECK ([ConnectionId] >= CAST('1' AS bigint))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Alias] nvarchar(25) NOT NULL
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[Folder] nvarchar(256) NULL
                                    ,[IsLegacy] bit NOT NULL
                                    ,[CurrentOperationId] bigint NOT NULL DEFAULT CAST('0' AS bigint) CHECK ([CurrentOperationId] >= CAST('0' AS bigint))
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Databases] ADD CONSTRAINT PK_Databases PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Databases_Name] ON [dbo].[Databases]([Name] ASC)
CREATE UNIQUE INDEX [UNQ_Databases_Alias] ON [dbo].[Databases]([Alias] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[SystemsDatabases]
**********************************************************************************/
IF (SELECT object_id('[dbo].[SystemsDatabases]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[SystemsDatabases]
CREATE TABLE [dbo].[SystemsDatabases]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[SystemId] bigint NOT NULL CHECK ([SystemId] >= CAST('1' AS bigint))
                                    ,[DatabaseId] bigint NOT NULL CHECK ([DatabaseId] >= CAST('1' AS bigint))
                                    ,[Name] nvarchar(50) NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[SystemsDatabases] ADD CONSTRAINT PK_SystemsDatabases PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_SystemsDatabases_SystemId_DatabaseId] ON [dbo].[SystemsDatabases]([SystemId] ASC, [DatabaseId] ASC)
CREATE UNIQUE INDEX [UNQ_SystemsDatabases_Name] ON [dbo].[SystemsDatabases]([Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Tables]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Tables]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Tables]
CREATE TABLE [dbo].[Tables]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Alias] nvarchar(25) NOT NULL
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[ParentTableId] bigint NULL CHECK ([ParentTableId] >= CAST('0' AS bigint))
                                    ,[IsLegacy] bit NOT NULL
                                    ,[CurrentId] bigint NOT NULL DEFAULT CAST('0' AS bigint) CHECK ([CurrentId] >= CAST('0' AS bigint))
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Tables] ADD CONSTRAINT PK_Tables PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Tables_Name] ON [dbo].[Tables]([Name] ASC)
CREATE UNIQUE INDEX [UNQ_Tables_Alias] ON [dbo].[Tables]([Alias] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[DatabasesTables]
**********************************************************************************/
IF (SELECT object_id('[dbo].[DatabasesTables]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[DatabasesTables]
CREATE TABLE [dbo].[DatabasesTables]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[DatabaseId] bigint NOT NULL CHECK ([DatabaseId] >= CAST('1' AS bigint))
                                    ,[TableId] bigint NOT NULL CHECK ([TableId] >= CAST('1' AS bigint))
                                    ,[Name] nvarchar(50) NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[DatabasesTables] ADD CONSTRAINT PK_DatabasesTables PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_DatabasesTables_DatabaseId_TableId] ON [dbo].[DatabasesTables]([DatabaseId] ASC, [TableId] ASC)
CREATE UNIQUE INDEX [UNQ_DatabasesTables_Name] ON [dbo].[DatabasesTables]([Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Columns]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Columns]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Columns]
CREATE TABLE [dbo].[Columns]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[TableId] bigint NOT NULL CHECK ([TableId] >= CAST('1' AS bigint))
                                    ,[Sequence] smallint NOT NULL CHECK ([Sequence] >= CAST('1' AS smallint))
                                    ,[DomainId] bigint NOT NULL CHECK ([DomainId] >= CAST('1' AS bigint))
                                    ,[ReferenceTableId] bigint NULL CHECK ([ReferenceTableId] >= CAST('1' AS bigint))
                                    ,[Name] nvarchar(25) NOT NULL
                                    ,[Alias] nvarchar(25) NULL
                                    ,[Description] nvarchar(50) NOT NULL
                                    ,[Title] nvarchar(25) NOT NULL
                                    ,[Caption] nvarchar(25) NOT NULL
                                    ,[Default] nvarchar(max) NULL
                                    ,[Minimum] nvarchar(max) NULL
                                    ,[Maximum] nvarchar(max) NULL
                                    ,[IsPrimarykey] bit NULL
                                    ,[IsAutoIncrement] bit NULL
                                    ,[IsRequired] bit NOT NULL
                                    ,[IsListable] bit NULL
                                    ,[IsFilterable] bit NULL
                                    ,[IsEditable] bit NULL
                                    ,[IsGridable] bit NULL
                                    ,[IsEncrypted] bit NULL
                                    ,[IsInWords] bit NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Columns] ADD CONSTRAINT PK_Columns PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Columns_TableId_Name] ON [dbo].[Columns]([TableId] ASC, [Name] ASC)
CREATE UNIQUE INDEX [UNQ_Columns_TableId_Sequence] ON [dbo].[Columns]([TableId] ASC, [Sequence] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Indexes]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Indexes]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Indexes]
CREATE TABLE [dbo].[Indexes]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[DatabaseId] bigint NOT NULL CHECK ([DatabaseId] >= CAST('1' AS bigint))
                                    ,[TableId] bigint NOT NULL CHECK ([TableId] >= CAST('1' AS bigint))
                                    ,[Name] nvarchar(50) NOT NULL
                                    ,[IsUnique] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Indexes] ADD CONSTRAINT PK_Indexes PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Indexes_DatabaseId_Name] ON [dbo].[Indexes]([DatabaseId] ASC, [Name] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Indexkeys]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Indexkeys]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Indexkeys]
CREATE TABLE [dbo].[Indexkeys]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[IndexId] bigint NOT NULL CHECK ([IndexId] >= CAST('1' AS bigint))
                                    ,[Sequence] smallint NOT NULL CHECK ([Sequence] >= CAST('1' AS smallint))
                                    ,[ColumnId] bigint NOT NULL CHECK ([ColumnId] >= CAST('1' AS bigint))
                                    ,[IsDescending] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Indexkeys] ADD CONSTRAINT PK_Indexkeys PRIMARY KEY CLUSTERED ([Id])
CREATE UNIQUE INDEX [UNQ_Indexkeys_IndexId_Sequence] ON [dbo].[Indexkeys]([IndexId] ASC, [Sequence] ASC)
CREATE UNIQUE INDEX [UNQ_Indexkeys_IndexId_ColumnId] ON [dbo].[Indexkeys]([IndexId] ASC, [ColumnId] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Logins]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Logins]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Logins]
CREATE TABLE [dbo].[Logins]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[SystemId] bigint NOT NULL CHECK ([SystemId] >= CAST('1' AS bigint))
                                    ,[UserId] bigint NOT NULL CHECK ([UserId] >= CAST('1' AS bigint))
                                    ,[PublicKey] nvarchar(256) NOT NULL
                                    ,[IsLogged] bit NOT NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Logins] ADD CONSTRAINT PK_Logins PRIMARY KEY CLUSTERED ([Id])
CREATE  INDEX [UNQ_Logins_SystemId_UserId_IsLogged] ON [dbo].[Logins]([SystemId] ASC, [UserId] ASC, [IsLogged] ASC)
GO

/**********************************************************************************
Criar tabela [dbo].[Transactions]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Transactions]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Transactions]
CREATE TABLE [dbo].[Transactions]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[LoginId] bigint NOT NULL CHECK ([LoginId] >= CAST('1' AS bigint))
                                    ,[IsConfirmed] bit NOT NULL CHECK ([IsConfirmed] >= CAST('1' AS bit))
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Transactions] ADD CONSTRAINT PK_Transactions PRIMARY KEY CLUSTERED ([Id])

/**********************************************************************************
Criar tabela [dbo].[Operations]
**********************************************************************************/
IF (SELECT object_id('[dbo].[Operations]', 'U')) IS NOT NULL
    DROP TABLE [dbo].[Operations]
CREATE TABLE [dbo].[Operations]([Id] bigint NOT NULL CHECK ([Id] >= CAST('1' AS bigint))
                                    ,[TransactionId] bigint NOT NULL CHECK ([TransactionId] >= CAST('1' AS bigint))
                                    ,[TableName] nvarchar(25) NOT NULL
                                    ,[ParentOperationId] bigint NULL CHECK ([ParentOperationId] >= CAST('1' AS bigint))
                                    ,[Action] nvarchar(15) NOT NULL
                                    ,[OriginalRecord] nvarchar(max) NULL
                                    ,[ActualRecord] nvarchar(max) NOT NULL
                                    ,[IsConfirmed] bit NULL
                                    ,[CreatedAt] datetime NOT NULL
                                    ,[CreatedBy] nvarchar(25) NOT NULL
                                    ,[UpdatedAt] datetime NULL
                                    ,[UpdatedBy] nvarchar(25) NULL)
ALTER TABLE [dbo].[Operations] ADD CONSTRAINT PK_Operations PRIMARY KEY CLUSTERED ([Id])

/**********************************************************************************
Criar stored procedure [dbo].[Config]
**********************************************************************************/
IF(SELECT object_id('[dbo].[Config]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[Config] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[Config](@SystemName VARCHAR(25)
							  ,@DatabaseName VARCHAR(25) = NULL
							  ,@TableName VARCHAR(25) = NULL
							  ,@ReturnValue BIGINT OUT) AS
BEGIN
	DECLARE @ErrorMessage VARCHAR(250)

	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ COMMITTED
	BEGIN TRY
		IF @SystemName IS NULL BEGIN
			SET @ErrorMessage = 'Nome de sistema é requerido.';
			THROW 51000, @ErrorMessage, 1
		END
		-- 0 [Systems]
		SELECT 	'System' AS [ClassName]
				,[Id]
				,[Name]
				,[Description]
				,[ClientName]
				,[MaxRetryLogins]
				,[IsOffAir]
			INTO [dbo].[#Systems]
			FROM [dbo].[Systems]
			WHERE [Name] = @SystemName
		IF @@ROWCOUNT = 0 BEGIN
			SET @ErrorMessage = 'Sistema "' + @SystemName + '" não cadastrado.';
			THROW 51000, @ErrorMessage, 1
		END
		IF (SELECT IsOffAir FROM [dbo].[#Systems]) = 1 BEGIN
			SET @ErrorMessage = 'Sistema "' + @SystemName + '" fora do ar.';
			THROW 51000, @ErrorMessage, 1
		END
		ALTER TABLE [dbo].[#Systems] DROP COLUMN [IsOffAir]
		IF @DatabaseName IS NULL
			RETURN 1
		ALTER TABLE [dbo].[#Systems] ADD PRIMARY KEY CLUSTERED([Id])
		IF @DatabaseName = 'all' BEGIN
			SET @DatabaseName = NULL
			SET @TableName = NULL
		END

		-- 1 [Databases]
		SELECT 	'Database' AS [ClassName]
				,[D].[Id]
				,[D].[ConnectionId]
				,[D].[Name]
				,[D].[Alias]
				,[D].[Description]
				,[D].[Folder]
			INTO [dbo].[#Databases]
			FROM [dbo].[Databases] [D]
				INNER JOIN [dbo].[SystemsDatabases] [SD] ON [SD].[DatabaseId] = [D].[id]
				INNER JOIN [dbo].[#Systems] [S] ON [S].[Id] = [SD].[SystemId]
			WHERE [D].[Name] = ISNULL(@DatabaseName, [D].[Name])
		IF @@ROWCOUNT = 0 BEGIN
			SET @ErrorMessage = 'Banco(s)-de-dados não cadastrado(s).';
			THROW 51000, @ErrorMessage, 1
		END
		ALTER TABLE [dbo].[#Databases] ADD PRIMARY KEY CLUSTERED([Id])
		IF @DatabaseName IS NULL BEGIN
			ALTER TABLE [dbo].[#Databases] DROP COLUMN [Folder]
		END

		-- 2 [Connections]
		SELECT 	'Connection' AS [ClassName]
				,[C].[Id]
				,[C].[Provider]
				,[C].[HostName]
				,[C].[Port]
				,[C].[IntegratedSecurity]
				,[C].[ConnectionTimeout]
				,[C].[ExtendedProperties]
				,[C].[UserID]
				,[C].[Password]
				,[C].[PersistSecurityInfo]
				,[C].[AdditionalParameters]
			INTO [dbo].[#Connections]
			FROM [dbo].[Connections] [C]
			WHERE [C].[Id] IN (SELECT [ConnectionId] FROM [dbo].[#Databases])
		IF @@ROWCOUNT = 0 BEGIN
			SET @ErrorMessage = 'Banco(s)-de-dados não cadastrado(s).';
			THROW 51000, @ErrorMessage, 1
		END
		ALTER TABLE [dbo].[#Connections] ADD PRIMARY KEY CLUSTERED([Id])

		-- 3 [Tables]
		SELECT	'Table' AS [ClassName]
				,[T].[Id]
				,[DT].[DatabaseId]
				,[T].[Name]
				,[T].[Alias]
				,[T].[Description]
				,[T].[ParentTableId]
				,[T].[IsLegacy]
			INTO [dbo].[#Tables]
			FROM [dbo].[Tables] [T]
				INNER JOIN [dbo].[DatabasesTables] [DT] ON [DT].[TableId] = [T].[Id]
				INNER JOIN [dbo].[#Databases] [D] ON [D].[Id] = [DT].[DatabaseId]
			WHERE [T].[Name] = ISNULL(@TableName, [T].[Name])
		IF @@ROWCOUNT = 0 BEGIN
			SET @ErrorMessage = 'Tabela(s) não cadastrada(s).';
			THROW 51000, @ErrorMessage, 1
		END
		ALTER TABLE [dbo].[#Tables] ADD PRIMARY KEY CLUSTERED([Id])

		IF @DatabaseName IS NULL BEGIN
			-- 4 [Columns]
			SELECT	'Column' AS [ClassName]
					,[C].[Id]
					,[C].[TableId]
					,[C].[Sequence]
					,[C].[DomainId]
					,[C].[ReferenceTableId]
					,[C].[Name]
					,[C].[Alias]
					,[C].[Description]
					,[C].[Title]
					,[C].[Caption]
				    ,[C].[Default]
				    ,[C].[Minimum]
				    ,[C].[Maximum]
					,[C].[IsPrimarykey]
					,[C].[IsAutoIncrement]
					,[C].[IsRequired]
					,[C].[IsListable]
					,[C].[IsFilterable]
					,[C].[IsEditable]
					,[C].[IsGridable]			
					,[C].[IsEncrypted]
					,[C].[IsInWords]
				INTO [dbo].[#Columns]
				FROM [dbo].[Columns] [C]
					INNER JOIN [dbo].[#Tables] [T] ON [T].[Id]= [C].[TableId] 
			IF @@ROWCOUNT = 0 BEGIN
				SET @ErrorMessage = 'Colunas de tabelas não cadastradas.';
				THROW 51000, @ErrorMessage, 1
			END
			ALTER TABLE [dbo].[#Columns] ADD PRIMARY KEY CLUSTERED([Id])
			CREATE INDEX [#ColumnsDomainId] ON [dbo].[#Columns]([DomainId])

			-- 5 [Domains]
			SELECT	'Domain' AS [ClassName]
					,[D].[Id]
					,[D].[TypeId]
					,[D].[MaskId]
					,[D].[Name]
					,[D].[Length]
					,[D].[Decimals]
					,[D].[ValidValues]
					,[D].[Default]
					,[D].[Minimum]
					,[D].[Maximum]
					,[D].[Codification]
				INTO [dbo].[#Domains]
				FROM [dbo].[Domains] [D]
				WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[#Columns] WHERE [DomainId] = [D].[Id])
			IF @@ROWCOUNT = 0 BEGIN
				SET @ErrorMessage = 'Domínios de colunas não cadastrados.';
				THROW 51000, @ErrorMessage, 1
			END
			ALTER TABLE [dbo].[#Domains] ADD PRIMARY KEY NONCLUSTERED([Id])
			CREATE INDEX [#DomainsTypeId] ON [dbo].[#Domains]([TypeId])

			-- 6 [Types]
			SELECT 	'Type' AS [ClassName]
					,[T].[Id]
					,[T].[CategoryId]
					,[T].[Name]
					,[T].[MaxLength]
				    ,[T].[Minimum]
					,[T].[Maximum]
					,[T].[AskLength]
					,[T].[AskDecimals]
					,[T].[AskPrimarykey]
					,[T].[AskAutoincrement]
					,[T].[AskFilterable]
					,[T].[AskGridable]
					,[T].[AskCodification]
					,[T].[IsActive]
				INTO [dbo].[#Types]
				FROM [dbo].[Types] [T]
				WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[#Domains] WHERE [TypeId] = [T].[Id])
			IF @@ROWCOUNT = 0 BEGIN
				SET @ErrorMessage = 'Tipos de domínios não cadastrados.';
				THROW 51000, @ErrorMessage, 1
			END
			CREATE INDEX [#TypesCategoryId] ON [dbo].[#Types]([CategoryId])

			-- 7 [Categories]
			SELECT 	'Category' AS [ClassName]
					,[C].[Id]
					,[C].[Name]
					,[C].[HtmlInputType]
					,[C].[HtmlInputAlign]
					,[C].[AskEncrypted]
					,[C].[AskMask]
					,[C].[AskListable]
					,[C].[AskDefault]
					,[C].[AskMinimum]
					,[C].[AskMaximum]
					,[C].[AskInWords]
				INTO [dbo].[#Categories]
				FROM [dbo].[Categories] [C]
				WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[#Types] WHERE [CategoryId] = [C].[Id])
			IF @@ROWCOUNT = 0 BEGIN
			   SET @ErrorMessage = 'Categoria(s) de tipos não cadastrada(s).';
			   THROW 51000, @ErrorMessage, 1
			END

			-- 8 [Menus]
			SELECT 	'Menu' AS [ClassName]
					,[M].[Id]
					,[M].[SystemId]
					,[M].[Sequence]
					,[M].[Caption]
					,[M].[Message]
					,[M].[Action]
					,[M].[ParentMenuId]
				INTO [dbo].[#Menus]
				FROM [dbo].[Menus] [M]
					INNER JOIN [dbo].[#Systems] [S] ON [S].[Id] = [M].[SystemId]
			IF @@ROWCOUNT = 0 BEGIN
			   SET @ErrorMessage = 'Menu(s) de sistema não cadastrado(s).';
			   THROW 51000, @ErrorMessage, 1
			END

			-- 9 [Indexes]
			SELECT 	'Index' AS [ClassName]
					,[I].[Id]
					,[I].[DatabaseId]
					,[I].[TableId]
					,[I].[Name]
					,[I].[IsUnique]
				INTO [dbo].[#Indexes]
				FROM [dbo].[Indexes] [I]
					INNER JOIN [dbo].[#Tables] [T] ON [T].[Id] = [I].[TableId]
			ALTER TABLE [dbo].[#Indexes] ADD PRIMARY KEY NONCLUSTERED([Id])

			-- 10 [Indexkeys]
			SELECT 	'Indexkey' AS [ClassName]
					,[IK].[Id]
					,[IK].[IndexId]
					,[IK].[Sequence]
					,[IK].[ColumnId]
					,[IK].[IsDescending]
				INTO [dbo].[#Indexkeys]
				FROM [dbo].[Indexkeys] [IK]
					INNER JOIN [dbo].[#Indexes] [I] ON [I].[Id] = [IK].IndexId
			-- 11 [Masks]
			SELECT 	'Mask' AS [ClassName]
					,[M].[Id]
					,[M].[Name]
					,[M].[Mask]
				INTO [dbo].[#Masks]
				FROM [dbo].[Masks] [M]
				WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[#Domains] WHERE [MaskId] = [M].[Id])
		END

		-- Results
		SELECT * FROM [dbo].[#Systems] ORDER BY [Name] -- 0 [#Systems]
		IF @DatabaseName IS NULL BEGIN
			
			SELECT * FROM [dbo].[#Databases] ORDER BY [Name] -- 1 [#Databases]
			SELECT * FROM [dbo].[#Tables] ORDER BY [DatabaseId], [Name] -- 2 [#Tables]
			SELECT * FROM [dbo].[#Columns] ORDER BY [TableId], [Sequence] -- 3 [#Columns]
			SELECT * FROM [dbo].[#Domains] ORDER BY [Name] -- 4 [#Domains]
			SELECT * FROM [dbo].[#Types] ORDER BY [Name] -- 5 [#Types]
			SELECT * FROM [dbo].[#Categories] ORDER BY [Name] -- 6 [#Categories]
			SELECT * FROM [dbo].[#Menus] ORDER BY [SystemId], [Sequence] -- 7 [#Menus]
			SELECT * FROM [dbo].[#Indexes] ORDER BY [Name] -- 8 [#Indexes]
			SELECT * FROM [dbo].[#Indexkeys] ORDER BY [IndexId], [Sequence] -- 9 [#Indexkeys]
			SELECT * FROM [dbo].[#Masks] ORDER BY [Id] -- 10 [#Masks]
		END ELSE BEGIN
			SELECT * FROM [dbo].[#Connections] ORDER BY [Id] -- 1 [#Connections]]
			SELECT * FROM [dbo].[#Databases] ORDER BY [Name] -- 2 [#Databases]
			SELECT * FROM [dbo].[#Tables] ORDER BY [DatabaseId], [Name] -- 3 [#Tables]
		END
		
		RETURN 0
	END TRY
	BEGIN CATCH
		THROW
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[NewId]
**********************************************************************************/
IF(SELECT object_id('[dbo].[NewId]','P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[NewId] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[NewId](@SystemName VARCHAR(25)
							 ,@DatabaseName VARCHAR(25)
							 ,@TableName VARCHAR(25)
							 ,@ReturnValue BIGINT OUT) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		DECLARE @SystemId BIGINT
				,@DatabaseId BIGINT
				,@TableId BIGINT
				,@NextId BIGINT

		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]
		SELECT @SystemId = [Id]
			FROM [dbo].[Systems]
			WHERE [Name] = @SystemName
		IF @SystemId IS NULL
			THROW 51000, 'Sistema não encontrado', 1
		SELECT @DatabaseId = [Id]
			FROM [dbo].[Databases]
			WHERE [Name] = @DatabaseName
		IF @DatabaseId IS NULL
			THROW 51000, 'Banco-de-dados não encontrado', 1
		IF NOT EXISTS(SELECT 1
						FROM [dbo].[SystemsDatabases]
						WHERE [SystemId] = @SystemId
							  AND [DatabaseId] = @DatabaseId)
			THROW 51000, 'Banco-de-dados não pertence ao sistema especificado', 1
		SELECT @TableId = [Id]
			   ,@NextId = ISNULL([CurrentId], 0) + 1
			FROM [dbo].[Tables]
			WHERE [Name] = @TableName
		IF @TableId IS NULL
			THROW 51000, 'Tabela não encontrada', 1
		IF NOT EXISTS(SELECT 1
						FROM [dbo].[DatabasesTables]
						WHERE [DatabaseId] = @DatabaseId
							  AND [TableId] = @TableId)
			THROW 51000, 'Tabela não pertence ao banco-de-dados especificado', 1
		UPDATE [dbo].[Tables] 
			SET [CurrentId] = @NextId
			WHERE [Id] = @TableId
		SET @ReturnValue = @NextId
		COMMIT TRANSACTION

		RETURN 0
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[NewOperationId]
**********************************************************************************/
IF(SELECT object_id('[dbo].[NewOperationId]','P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[NewOperationId] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[NewOperationId](@SystemName VARCHAR(25)
									  ,@DatabaseName VARCHAR(25)
									  ,@ReturnValue BIGINT OUT) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		DECLARE @SystemId BIGINT
				,@DatabaseId BIGINT
				,@NexOperationtId BIGINT

		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]
		SELECT @SystemId = [Id]
			FROM [dbo].[Systems]
			WHERE [Name] = @SystemName
		IF @SystemId IS NULL
			THROW 51000, 'Sistema não encontrado', 1
		SELECT @DatabaseId = [Id]
				,@NexOperationtId = ISNULL([CurrentOperationId], 0) + 1
			FROM [dbo].[Databases]
			WHERE [Name] = @DatabaseName
		IF @DatabaseId IS NULL
			THROW 51000, 'Banco-de-dados não encontrado', 1
		IF NOT EXISTS(SELECT 1
						FROM [dbo].[SystemsDatabases]
						WHERE [SystemId] = @SystemId
							  AND [DatabaseId] = @DatabaseId)
			THROW 51000, 'Banco-de-dados não pertence ao sistema especificado', 1
		UPDATE [dbo].[Databases] 
			SET [CurrentOperationId] = @NexOperationtId
			WHERE [Id] = @DatabaseId
		SET @ReturnValue = @NexOperationtId
		COMMIT TRANSACTION

		RETURN 0
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[Login]
**********************************************************************************/
IF(SELECT object_id('[dbo].[Login]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[Login] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[Login](@Parameters VARCHAR(MAX)
							 ,@ReturnValue BIGINT OUT) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED
		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]

		IF ISJSON(@Parameters) = 0
			THROW 51000, 'Parâmetro login não está no formato JSON', 1

		DECLARE @Action VARCHAR(15) = CAST([crudex].[JSON_EXTRACT](@Parameters, '$.Action') AS VARCHAR(15))
				,@LoginId BIGINT = CAST([crudex].[JSON_EXTRACT](@Parameters, '$.LoginId') AS BIGINT)
				,@SystemName VARCHAR(25) = CAST([crudex].[JSON_EXTRACT](@Parameters, '$.SystemName') AS VARCHAR(25))
				,@UserName VARCHAR(25) = CAST([crudex].[JSON_EXTRACT](@Parameters, '$.UserName') AS VARCHAR(25))
				,@Password VARCHAR(256) = CAST([crudex].[JSON_EXTRACT](@Parameters, '$.Password') AS VARCHAR(256))
				,@PublicKey VARCHAR(256) = CAST([crudex].[JSON_EXTRACT](@Parameters, '$.PublicKey') AS VARCHAR(256))
				,@PasswordAux VARCHAR(256)
				,@SystemId BIGINT
				,@SystemIdAux BIGINT
				,@UserId BIGINT
				,@UserIdAux BIGINT
				,@MaxRetryLogins TINYINT
				,@RetryLogins TINYINT
				,@IsLogged BIT
				,@IsActive BIT
				,@IsOffAir BIT
	
		IF @Action IS NULL
			THROW 51000, 'Ação de login é requerida', 1
		IF @Action NOT IN ('login','logout','authenticate')
			THROW 51000, 'Ação de login é inválida', 1
		IF @SystemName IS NULL
			THROW 51000, 'Sistema é requerido', 1
		SELECT @SystemId = [Id]
			   ,@MaxRetryLogins = [MaxRetryLogins]
			   ,@IsOffAir = [IsOffAir]
			FROM [dbo].[Systems]
			WHERE [Name] = @SystemName
		IF @SystemId IS NULL
			THROW 51000, 'Sistema não cadastrado', 1
		IF @IsOffAir = 1
			THROW 51000, 'Sistema fora do ar', 1
		IF @UserName IS NULL
			THROW 51000, 'Usuário é requerido', 1
		SELECT	@UserId = [Id]
				,@RetryLogins = [RetryLogins]
				,@IsActive = [IsActive]
				,@PasswordAux = [Password]
			FROM [dbo].[Users]
			WHERE [Name] = @UserName
		IF @UserId IS NULL
			THROW 51000, 'Usuário não cadastrado', 1
		IF @IsActive = 0
			THROW 51000, 'Usuário está inativo', 1
		IF @RetryLogins >= @MaxRetryLogins
			THROW 51000, 'Usuário está bloqueado', 1
		IF NOT EXISTS(SELECT TOP 1 1
						FROM [dbo].[SystemsUsers]
						WHERE [SystemId] = @SystemId
							  AND [UserId] =  @UserId)
			THROW 51000, 'Usuário não autorizado', 1
		IF @Password IS NULL
			THROW 51000, 'Senha é requerida', 1
		IF CAST(@PasswordAux AS VARCHAR(MAX)) <> CAST(@Password AS VARCHAR(MAX)) BEGIN
			SET @RetryLogins = @RetryLogins + 1
			UPDATE [dbo].[Users] 
				SET [RetryLogins] = @RetryLogins
				WHERE [Id] = @UserId
			COMMIT TRANSACTION 
			IF @RetryLogins = @MaxRetryLogins
				THROW 51000, 'Usuário está bloqueado', 1
			ELSE BEGIN
				SET @ErrorMessage = 'Senha é inválida (' + CAST(@MaxRetryLogins -  @RetryLogins AS VARCHAR(3)) + ' tentativas restantes)';
				THROW 51000, @ErrorMessage, 1
			END
		
		END
		IF @action = 'login' BEGIN
			IF @PublicKey IS NULL
				THROW 51000, 'Chave pública é requerida', 1
			EXEC [dbo].[NewId] 'crudex', 'crudex', 'Logins', @LoginId OUT
			INSERT [dbo].[Logins]([Id],
								  [SystemId],
								  [UserId],
								  [PublicKey],
								  [IsLogged],
								  [CreatedAt],
								  [CreatedBy])
						  VALUES (ISNULL(@LoginId, 1),
								  @SystemId,
								  @UserId,
								  @PublicKey,
								  1,
								  GETDATE(),
								  @UserName)
		END ELSE IF @LoginId IS NULL
			THROW 51000, 'Id de login é requerido', 1
		ELSE BEGIN
			SELECT @SystemIdAux = [SystemId],
				   @UserIdAux = [UserId],
				   @IsLogged = [IsLogged]
				FROM [dbo].[Logins]
				WHERE [Id] = @LoginId
			IF @SystemIdAux IS NULL
				THROW 51000, 'Login não cadastrado', 1
			IF @SystemId <> @SystemIdAux
				THROW 51000, 'Sistema é inválido para este login', 1
			IF @UserId <> @UserIdAux
				THROW 51000, 'Usuário é inválido para este login', 1
			IF @IsLogged = 0
				THROW 51000, 'Login já encerrado', 1
			IF @action = 'logout'
				UPDATE [dbo].[Logins]
					SET [IsLogged] = 0,
						[UpdatedAt] = GETDATE(),
						[UpdatedBy] = @UserName
					WHERE [Id] = @LoginId
		END
		UPDATE [dbo].[Users]
			SET [RetryLogins] = 0
			WHERE [Id] = @UserId
		SET @ReturnValue = @LoginId
		COMMIT TRANSACTION

		RETURN 0
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = ERROR_MESSAGE();
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[GetPublicKey]
**********************************************************************************/
IF(SELECT object_id('[dbo].[GetPublicKey]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[GetPublicKey] AS PRINT 1')
GO
ALTER PROCEDURE[dbo].[GetPublicKey](@LoginId BIGINT
								   ,@ReturnValue BIGINT OUT) AS BEGIN
	DECLARE @ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		IF @LoginId IS NULL
			THROW 51000, 'Parâmetro @LoginId é requerido', 1
		SELECT [PublicKey]
			FROM [dbo].[Logins]
			WHERE [Id] = @LoginId
		IF @@ROWCOUNT = 0
			THROW 51000, 'Valor @LoginId é inexistente', 1
		SET @ReturnValue = @LoginId

		RETURN @ReturnValue
	END TRY
	BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [dbo].[ScriptSystem]
**********************************************************************************/
IF (SELECT object_id('[dbo].[ScriptSystem]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [dbo].[ScriptSystem] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[ScriptSystem](@SystemName VARCHAR(25),
									 @ReturnValue BIGINT OUT) AS
BEGIN
	DECLARE @ErrorMessage VARCHAR(250)

	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL READ COMMITTED
	BEGIN TRY
		IF @SystemName IS NULL
			THROW 51000, 'Nome de sistema requerido', 1
		-- 1 [Systems]
		SELECT 	'System' AS [ClassName]
				,[Id]
				,[Name]
				,[Description]
				,[ClientName]
				,[MaxRetryLogins]
				,[IsOffAir]
			INTO [dbo].[#Systems]
			FROM [dbo].[Systems]
			WHERE [Name] = @SystemName
		IF @@ROWCOUNT = 0
			THROW 51000, 'Sistema não cadastrado', 1
		ALTER TABLE [dbo].[#Systems] ADD PRIMARY KEY CLUSTERED([Id])
		-- 2 [[SystemsDatabases]]
		SELECT 	'SystemDatabase' AS [ClassName]
				,[SD].[Id]
				,[SD].[SystemId]
				,[S].[Name] AS [#SystemName]
				,[SD].[DatabaseId]
				,[D].[Name] AS [#DatabaseName]
				,[SD].[Name]
			INTO [dbo].[#SystemsDatabases]
			FROM [dbo].[SystemsDatabases] [SD]
				INNER JOIN [dbo].[#Systems] [S] ON [S].[Id] = [SD].[SystemId]
				INNER JOIN [dbo].[Databases] [D] ON [D].[Id] = [SD].[DatabaseId]
		IF @@ROWCOUNT = 0
			THROW 51000, 'Sistemas x Bancos-de-dados não cadastrado(s)', 1
		ALTER TABLE [dbo].[#SystemsDatabases] ADD PRIMARY KEY CLUSTERED([Id])
		-- 3 [Connections]
		SELECT [Id]
			  ,[Provider]
			  ,[HostName]
			  ,[Port]
			  ,[IntegratedSecurity]
			  ,[ConnectionTimeout]
			  ,[ExtendedProperties]
			  ,[UserID]
			  ,[Password]
			  ,[PersistSecurityInfo]
			  ,[AdditionalParameters]
		  INTO [dbo].[#Connections]
		  FROM [dbo].[Connections]
		-- 4 [Databases]
		SELECT 	'Database' AS [ClassName]
				,[D].[Id]
				,[D].[ConnectionId]
				,[D].[Name]
				,[D].[Alias]
				,[D].[Description]
				,[D].[Folder]
				,[D].[CurrentOperationId]
			INTO [dbo].[#Databases]
			FROM [dbo].[Databases] [D]
				INNER JOIN [dbo].[#SystemsDatabases] [SD] ON [SD].[DatabaseId] = [D].[Id]
		IF @@ROWCOUNT = 0
			THROW 51000, 'Banco(s)-de-dados não cadastrado(s)', 1
		ALTER TABLE [dbo].[#Databases] ADD PRIMARY KEY CLUSTERED([Id])
		-- 5 [DatabasesTables]
		SELECT 'DatabaseTable' AS [ClassName]
			  ,[DT].[Id]
			  ,[DT].[DatabaseId]
			  ,[D].[Name] AS [#DatabaseName]
			  ,[DT].[TableId]
			  ,[T].[Name] AS [#TableName]
			  ,[DT].[Name]
			INTO [dbo].[#DatabasesTables]
			FROM [dbo].[DatabasesTables] [DT]
				INNER JOIN [dbo].[#Databases] [D] ON [D].[Id] = [DT].[DatabaseId]
				INNER JOIN [dbo].[Tables] [T] ON [T].[Id] = [DT].[TableId]
		ALTER TABLE [dbo].[#DatabasesTables] ADD PRIMARY KEY CLUSTERED([Id])
		-- 6 [Tables]
		SELECT	'Table' AS [ClassName]
				,[T].[Id]
				,[T].[Name]
				,[T].[Alias]
				,[T].[Description]
				,[T].[ParentTableId]
				,[PT].[Name] AS [#ParentTableName]
				,[T].[IsLegacy]
				,[T].[CurrentId]
			INTO [dbo].[#Tables]
			FROM [dbo].[Tables] [T]
				INNER JOIN [dbo].[#DatabasesTables] [DT] ON [DT].[TableId] = [T].[Id]
				LEFT JOIN [dbo].[Tables] [PT] ON [PT].[Id] = [T].[ParentTableId]
		IF @@ROWCOUNT = 0
			THROW 51000, 'Tabela(s) não cadastrada(s)', 1
		ALTER TABLE [dbo].[#Tables] ADD PRIMARY KEY CLUSTERED([Id])
		-- 7 [Categories]
		SELECT 	'Category' AS [ClassName]
				,[C].[Id]
				,[C].[Name]
				,[C].[HtmlInputType]
				,[C].[HtmlInputAlign]
				,[C].[AskEncrypted]
				,[C].[AskMask]
				,[C].[AskListable]
				,[C].[AskDefault]
				,[C].[AskMinimum]
				,[C].[AskMaximum]
				,[C].[AskInWords]
			INTO [dbo].[#Categories]
			FROM [dbo].[Categories] [C]
		IF @@ROWCOUNT = 0
			THROW 51000, 'Categoria(s) de tipos não cadastrada(s)', 1
		ALTER TABLE [dbo].[#Categories] ADD PRIMARY KEY CLUSTERED([Id])
		-- 8 [Types]
		SELECT 	'Type' AS [ClassName]
				,[T].[Id]
				,[T].[CategoryId]
				,[C].[Name] AS [#CategoryName]
				,[T].[Name]
				,[T].[Name] AS [#DataType]
				,[T].[MaxLength]
				,[T].[Minimum]
				,[T].[Maximum]
				,[T].[AskLength]
				,[T].[AskDecimals]
				,[T].[AskPrimarykey]
				,[T].[AskAutoincrement]
				,[T].[AskFilterable]
				,[T].[AskGridable]
				,[T].[AskCodification]
				,[T].[IsActive]
			INTO [dbo].[#Types]
			FROM [dbo].[Types] [T]
				INNER JOIN [dbo].[#Categories] [C] ON [C].[Id] = [T].[CategoryId]
		IF @@ROWCOUNT = 0
			THROW 51000, 'Tipos de domínios não cadastrados', 1
		ALTER TABLE [dbo].[#Types] ADD PRIMARY KEY CLUSTERED([Id])
		-- 9 [Masks]
		SELECT 	'Mask' AS [ClassName]
				,[M].[Id]
				,[M].[Name]
				,[M].[Mask]
			INTO [dbo].[#Masks]
			FROM [dbo].[Masks] [M]
		-- 10 [Domains]
		SELECT	'Domain' AS [ClassName]
				,[D].[Id]
				,[D].[TypeId]
				,[T].[Name] AS [#TypeName]
				,[C].[Name] AS [#CategoryName]
				,[T].[Name] + CASE WHEN ISNULL([D].[Length], 0) > 0 
								   THEN '(' + CAST([D].[Length] AS VARCHAR(10)) + 
										CASE WHEN ISNULL([D].[Decimals], 0) > 0 
											 THEN CAST([D].[Decimals] AS VARCHAR(10)) 
											 ELSE '' 
										END + ')'
								   ELSE ''
							  END AS [#DataType]
				,[D].[MaskId]
				,[M].[Name] AS [#MaskName]
				,[D].[Name]
				,[D].[Length]
				,[D].[Decimals]
				,[D].[ValidValues]
				,[D].[Default]
				,[D].[Minimum]
				,[D].[Maximum]
				,[D].[Codification]
			INTO [dbo].[#Domains]
			FROM [dbo].[Domains] [D]
				INNER JOIN [dbo].[#Types] [T] ON [T].[Id] = [D].[TypeId]
				INNER JOIN [dbo].[#Categories] [C] ON [C].[Id] = [T].[CategoryId]
				LEFT JOIN [dbo].[Masks] [M] ON [M].[Id] = [D].[MaskId]
		IF @@ROWCOUNT = 0
			THROW 51000, 'Domínios de colunas não cadastrados', 1
		ALTER TABLE [dbo].[#Domains] ADD PRIMARY KEY CLUSTERED([Id])
		-- 11 [Menus]
		SELECT 	'Menu' AS [ClassName]
				,[M].[Id]
				,[M].[SystemId]
				,[S].[Name] AS [#SystemName]
				,[M].[Sequence]
				,[M].[Caption]
				,[M].[Message]
				,[M].[Action]
				,[M].[ParentMenuId]
				,[PM].[Caption] AS [#ParentMenuCaption]
			INTO [dbo].[#Menus]
			FROM [dbo].[Menus] [M]
				LEFT JOIN [dbo].[Menus] [PM] ON [PM].[Id] = [M].[ParentMenuId]
				INNER JOIN [dbo].[#Systems] [S] ON [S].[Id] = [M].[SystemId]
		IF @@ROWCOUNT = 0
			THROW 51000, 'Menu(s) de sistema não cadastrado(s)', 1
		ALTER TABLE [dbo].[#Menus] ADD PRIMARY KEY CLUSTERED([Id])
		-- 12 [SystemsUsers]
		SELECT 'SystemUser' AS [ClassName] 
			  ,[SU].[Id]
			  ,[SU].[SystemId]
			  ,[S].[Name] AS [#SystemName]
			  ,[SU].[UserId]
			  ,[U].[Name] AS [#UserName]
			  ,[SU].[Name]
			INTO [dbo].[#SystemsUsers] 
			FROM [dbo].[SystemsUsers] [SU]
				INNER JOIN [dbo].[#Systems] [S] ON [S].[Id] = [SU].[SystemId]
				INNER JOIN [dbo].[Users] [U] ON [U].[Id] = [SU].[UserId]
		IF @@ROWCOUNT = 0
			THROW 51000, 'Menu(s) de sistema não cadastrado(s)', 1
		ALTER TABLE [dbo].[#SystemsUsers] ADD PRIMARY KEY NONCLUSTERED([Id])
		-- 13 [Users]
		SELECT 'User' AS [ClassName] 
			  ,[U].[Id]
			  ,[U].[Name]
			  ,[U].[Password]
			  ,[U].[FullName]
			  ,[U].[RetryLogins]
			  ,[U].[IsActive]
			INTO [dbo].[#Users]
			FROM [dbo].[Users] [U]
				INNER JOIN [dbo].[#SystemsUsers] [SU] ON [SU].[UserId] = [U].[Id]
		ALTER TABLE [dbo].[#Users] ADD PRIMARY KEY CLUSTERED([Id])
		-- 14 [Columns]
		SELECT 'Column' AS [ClassName]
			  ,[C].[Id]
			  ,[C].[TableId]
			  ,[T].[Name] AS [#TableName]
			  ,[T].[Alias] AS [#TableAlias]
			  ,[C].[Sequence]
			  ,[C].[DomainId]
			  ,[D].[Name] AS [#DomainName]
			  ,[D].[#CategoryName]
			  ,[D].[#TypeName]
			  ,[D].[#DataType]
			  ,[C].[ReferenceTableId]
			  ,[RT].[Name] AS [#ReferenceTableName]
			  ,[C].[Name]
			  ,[C].[Alias]
			  ,[C].[Description]
			  ,[C].[Title]
			  ,[C].[Caption]
			  ,[C].[Default]
			  ,[C].[Minimum]
			  ,[C].[Maximum]
			  ,[C].[IsPrimarykey]
			  ,[C].[IsAutoIncrement]
			  ,[C].[IsRequired]
			  ,[C].[IsListable]
			  ,[C].[IsFilterable]
			  ,[C].[IsEditable]
			  ,[C].[IsGridable]
			  ,[C].[IsEncrypted]
			  ,[C].[IsInWords]
			INTO [dbo].[#Columns]
			FROM [dbo].[Columns] [C]
				INNER JOIN [dbo].[#Tables] [T] ON [T].[Id] = [C].[TableId]
				INNER JOIN [dbo].[#Domains] [D] ON [D].[Id] = [C].[DomainId]
				LEFT JOIN [dbo].[#Tables] [RT] ON [RT].[Id] = [C].[ReferenceTableId]
		IF @@ROWCOUNT = 0
			THROW 51000, 'Coluna(s) de tabela(s) não cadastrada(s)', 1
		ALTER TABLE [dbo].[#Columns] ADD PRIMARY KEY CLUSTERED([Id])
		-- 15 [Indexes]
		SELECT 'Index' AS [ClassName]
			  ,[I].[Id]
			  ,[I].[DatabaseId]
			  ,[D].[Name] AS [#DatabaseName]
			  ,[I].[TableId]
			  ,[T].[Name] AS [#TableName]
			  ,[I].[Name]
			  ,[I].[IsUnique]
		  INTO [dbo].[#Indexes]
		  FROM [dbo].[Indexes] [I]
			INNER JOIN [dbo].[#Databases] [D] ON [D].[Id] = [I].[DatabaseId]
			INNER JOIN [dbo].[#Tables] [T] ON [T].[Id] = [I].[TableId]
		ALTER TABLE [dbo].[#Indexes] ADD PRIMARY KEY CLUSTERED([Id])
		-- 16 [Indexkeys]
		SELECT 'Indexkey' AS [ClassName]
			  ,[IK].[Id]
			  ,[IK].[IndexId]
			  ,[I].[Name] AS [#IndexName]
			  ,[IK].[Sequence]
			  ,[IK].[ColumnId]
			  ,[C].[Name] AS [#ColumnName]
			  ,[IK].[IsDescending]
		  INTO [dbo].[#Indexkeys]
		  FROM [dbo].[Indexkeys] [IK]
			INNER JOIN [dbo].[#Indexes] [I] ON [I].[Id] = [IK].[IndexId]
			INNER JOIN [dbo].[#Columns] [C] ON [C].[Id] = [IK].[ColumnId]
		ALTER TABLE [dbo].[#Indexkeys] ADD PRIMARY KEY CLUSTERED([Id])
		-- 17 [Logins]
		SELECT TOP 0 'Login' AS [ClassName]
					,[Id]
				    ,[SystemId]
					,[UserId]
					,[PublicKey]
					,[IsLogged]
			INTO [dbo].[#Logins]
			FROM [dbo].[Logins]
		-- 18 [Transactions]
		SELECT TOP 0 'Transaction' AS [ClassName]
					,[Id]
				    ,[LoginId]
					,[IsConfirmed]
			INTO [dbo].[#Transactions]
			FROM [dbo].[Transactions]
		-- 19 [Operations]
		SELECT TOP 0 'Operation' AS [ClassName]
					,[Id]
				    ,[TransactionId]
					,[TableName]
					,[ParentOperationId]
					,[Action]
					,[OriginalRecord]
					,[ActualRecord]
					,[IsConfirmed]
			INTO [dbo].[#Operations]
			FROM [dbo].[Operations]

		SELECT * FROM [dbo].[#Categories]
		SELECT * FROM [dbo].[#Types]
		SELECT * FROM [dbo].[#Masks]
		SELECT * FROM [dbo].[#Domains]
		SELECT * FROM [dbo].[#Systems]
		SELECT * FROM [dbo].[#Menus] ORDER BY [SystemId], [Sequence]
		SELECT * FROM [dbo].[#Users]
		SELECT * FROM [dbo].[#SystemsUsers]
		SELECT * FROM [dbo].[#Connections]
		SELECT * FROM [dbo].[#Databases]
		SELECT * FROM [dbo].[#SystemsDatabases]
		SELECT * FROM [dbo].[#Tables]
		SELECT * FROM [dbo].[#DatabasesTables]
		SELECT * FROM [dbo].[#Columns] ORDER BY [TableId], [Sequence]
		SELECT * FROM [dbo].[#Indexes]
		SELECT * FROM [dbo].[#Indexkeys] ORDER BY [IndexId], [Sequence]
		SELECT * FROM [dbo].[#Logins]
		SELECT * FROM [dbo].[#Transactions]
		SELECT * FROM [dbo].[#Operations]
	END TRY
	BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar function [crudex].[HUNDREDS_IN_WORDS]
**********************************************************************************/
IF(SELECT object_id('[crudex].[HUNDREDS_IN_WORDS]', 'FN')) IS NULL
	EXEC('CREATE FUNCTION [crudex].[HUNDREDS_IN_WORDS]() RETURNS VARCHAR(MAX) AS BEGIN RETURN '''' END')
GO
ALTER FUNCTION [crudex].[HUNDREDS_IN_WORDS](@Value AS SMALLINT
										  ,@EnglishOrPortuguese BIT)
RETURNS VARCHAR(MAX) AS  
BEGIN 
	DECLARE @ThirdDigit INT = @Value / 100,
			@SecondDigit INT = CAST(@Value / 10 AS INT) % 10,
			@FirstDigit INT = @Value % 10,
			@And VARCHAR(10),
			@Result VARCHAR(MAX) = '',
			@Separator VARCHAR(5)
	DECLARE @Units TABLE (Id INT, Nome VARCHAR(50))
	DECLARE @Dozens TABLE (Id INT, Nome VARCHAR(50))
	DECLARE @Hundreds TABLE (Id INT, Nome VARCHAR(50))

	IF @EnglishOrPortuguese = 1 BEGIN
		SET @And = ' e '
		INSERT @Units
			VALUES(0, ''),
				  (1, 'Um'),
				  (2, 'Dois'),
				  (3, 'Três'),
				  (4, 'Quatro'),
				  (5, 'Cinco'),
				  (6, 'Seis'),
				  (7, 'Sete'),
				  (8, 'Oito'),
				  (9, 'Nove'),
				  (10, 'Dez'),
				  (11, 'Onze'),
				  (12, 'Doze'),
				  (13, 'Treze'),
				  (14, 'Quatorze'),
				  (15, 'Quinze'),
				  (16, 'Dezesseis'),
				  (17, 'Dezessete'),
				  (18, 'Dezoito'),
				  (19, 'Dezenove')
			
		INSERT @Dozens
			VALUES(0, ''),
				  (1, 'Dez'),
				  (2, 'Vinte'),
				  (3, 'Trinta'),
				  (4, 'Quarenta'),
				  (5, 'Cinquenta'),
				  (6, 'Sessenta'),
				  (7, 'Setenta'),
				  (8, 'Oitenta'),
				  (9, 'Noventa')
			
		INSERT @Hundreds
			VALUES(0, ''),
				  (1, 'Cento'),
				  (2, 'Duzentos'),
				  (3, 'Trezentos'),
				  (4, 'Quatrocentos'),
				  (5, 'Quinhentos'),
				  (6, 'Seiscentos'),
				  (7, 'Setecentos'),
				  (8, 'Oitocentos'),
				  (9, 'Novecentos')
	END ELSE BEGIN
		SET @And = ' and '
		INSERT @Units
			VALUES(0, ''),
				  (1, 'One'),
				  (2, 'Two'),
				  (3, 'Three'),
				  (4, 'Four'),
				  (5, 'Five'),
				  (6, 'Six'),
				  (7, 'Seven'),
				  (8, 'Eight'),
				  (9, 'Nine'),
				  (10, 'Ten'),
				  (11, 'Eleven'),
				  (12, 'Twelve'),
				  (13, 'Thirteen'),
				  (14, 'Fourteen'),
				  (15, 'Fifteen'),
				  (16, 'Sixteen'),
				  (17, 'Seventeen'),
				  (18, 'Eighteen'),
				  (19, 'Nineteen')
			
		INSERT @Dozens
			VALUES(0, ''),
				  (1, 'Ten'),
				  (2, 'Twenty'),
				  (3, 'Thirty'),
				  (4, 'Forty'),
				  (5, 'Fifty'),
				  (6, 'Sixty'),
				  (7, 'Seventy'),
				  (8, 'Eighty'),
				  (9, 'Ninety')
			
		INSERT @Hundreds
			VALUES(0, ''),
				  (1, 'One Hundred'),
				  (2, 'Two Hundred'),
				  (3, 'Three Hundred'),
				  (4, 'Four Hundred'),
				  (5, 'Five Hundred'),
				  (6, 'Six Hundred'),
				  (7, 'Seven Hundred'),
				  (8, 'Eight Hundred'),
				  (9, 'Nine Hundred')
	END
	SET  @Separator = CASE WHEN @EnglishOrPortuguese = 1 THEN @And ELSE ' ' END
	IF @Value < 20 BEGIN
		SET @Result = (SELECT Nome FROM @Units WHERE Id = @Value)
	END ELSE IF @Value < 100 BEGIN
		SET @Result = (SELECT Nome FROM @Dozens WHERE Id = @SecondDigit) +
						 CASE WHEN @FirstDigit = 0 THEN '' ELSE CASE WHEN @EnglishOrPortuguese = 1 THEN @And ELSE '-' END + (SELECT Nome FROM @Units WHERE Id = @FirstDigit) END
	END ELSE IF @Value = 100 BEGIN
		SET @Result = CASE WHEN @EnglishOrPortuguese = 1 THEN 'Cem' ELSE 'One Hundred' END
	END ELSE IF @Value % 100 = 0 BEGIN
		SET @Result = (SELECT Nome FROM @Hundreds WHERE Id = @ThirdDigit)
	END ELSE BEGIN
		SET @Result = (SELECT Nome FROM @Hundreds WHERE Id = @ThirdDigit) +
						 CASE WHEN @Value < 20
							  THEN @Separator + (SELECT Nome FROM @Units WHERE Id = @SecondDigit * 10 + @FirstDigit)
						      ELSE @Separator + (SELECT Nome FROM @Dozens WHERE Id = @SecondDigit) + CASE WHEN @FirstDigit = 0 
																										  THEN '' 
																										  ELSE CASE WHEN @EnglishOrPortuguese = 1 THEN @And ELSE '-' END + (SELECT Nome FROM @Units WHERE Id = @FirstDigit)
																									 END
						 END
	END

	RETURN @Result
END
GO
/**********************************************************************************
Criar function [crudex].[NUMBER_IN_WORDS]
**********************************************************************************/
IF(SELECT object_id('[crudex].[NUMBER_IN_WORDS]', 'FN')) IS NULL
	EXEC('CREATE FUNCTION [crudex].[NUMBER_IN_WORDS]() RETURNS VARCHAR(MAX) AS BEGIN RETURN '''' END')
GO
ALTER FUNCTION [crudex].[NUMBER_IN_WORDS](@Value AS DECIMAL(18,2)
										,@EnglishOrPortuguese BIT = 1
										,@CurrencyInSingular VARCHAR(50) = NULL
										,@CurrencyInPlural VARCHAR(50) = NULL
										,@CentsInSingular VARCHAR(50) = NULL
										,@CentsInPlural VARCHAR(50) = NULL)
RETURNS VARCHAR(MAX) AS  
BEGIN 
	DECLARE @Power INT = 0,
		    @Separator VARCHAR(5) = '',
		    @PartialValue INT,
		    @Digito INT = 0,
		    @LastDigit INT,
			@Result VARCHAR(MAX) = '',
			@Minus VARCHAR(10) = '',
			@Of VARCHAR(10),
			@And VARCHAR(10),
			@ValueOfHundreds INT = 0,
			@ValueOfThousands INT = 0
	DECLARE @Powers TABLE (Id INT, NomeSingular VARCHAR(50), NomePlural VARCHAR(50))

	IF @EnglishOrPortuguese = 1 BEGIN
		IF @CurrencyInSingular IS NULL
			SET @CurrencyInSingular = 'Real'
		IF @CurrencyInPlural IS NULL
			SET @CurrencyInPlural = 'Reais'
		IF @CentsInSingular IS NULL
			SET @CentsInSingular = 'Centavo'
		IF @CentsInPlural IS NULL
			SET @CentsInPlural = 'Centavos'
		SET @Of = ' de '
		SET @And = ' e '
		IF @Value < 0 BEGIN
			SET @Value = -@Value
			SET @Minus = 'Menos'
		END	
		INSERT @Powers
			VALUES(0,'', ''),
				  (1,'Mil', 'Mil'),
				  (2,'Milhão', 'Milhões'),
				  (3,'Bilhão', 'Bilhões'),
				  (4,'Trilhão', 'Trilhões'),
				  (5,'Quatrilhão', 'Quatrilhões'),
				  (6,'Quintilhão', 'Quintilhões'),
				  (7,'Sextilhão', 'Sextilhões'),
				  (8,'Septilhão', 'Septilhões'),
				  (9,'Octilhão', 'Octilhões'),
				  (10,'Nonilhão', 'Nonilhões'),
				  (11,'Decilhão', 'Decilhões'),
			      (12,'Undecilhão', 'Undecilhões'),
				  (13,'Duodecilhão', 'Duodecilhões'),
				  (14,'Tredecilhão', 'Tredecilhões')
	END ELSE BEGIN
		IF @CurrencyInSingular IS NULL
			SET @CurrencyInSingular = 'Dollar'
		IF @CurrencyInPlural IS NULL
			SET @CurrencyInPlural = 'Dollars'
		IF @CentsInSingular IS NULL
			SET @CentsInSingular = 'Cent'
		IF @CentsInPlural IS NULL
			SET @CentsInPlural = 'Cents'
		SET @Of = ' of '
		SET @And = ' and '
		IF @Value < 0 BEGIN
			SET @Value = -@Value
			SET @Minus = 'Minus'
		END	
		INSERT @Powers
			VALUES(0,'', ''),
				  (1,'Thousand', 'Thousand'),
				  (2,'Million', 'Million'),
				  (3,'Billion', 'Billion'),
				  (4,'Trillion', 'Trillion'),
				  (5,'Quadrillion', 'Quadrillion'),
				  (6,'Quintillion', 'Quintillion'),
				  (7,'Sextillion', 'Sextillion'),
				  (8,'Septillion', 'Septillion'),
				  (9,'Octillion', 'Octillion'),
				  (10,'Nonillion', 'Nonillion'),
				  (11,'Decillion', 'Decillion'),
				  (12,'Undecillion', 'Undecillion'),
				  (13,'Duodecillion', 'Duodecillion'),
				  (14,'Tredecillion', 'Tredecillion')
	END
	SET @PartialValue = FLOOR(@Value)
	WHILE @PartialValue > 0 BEGIN
		SET @LastDigit = @Digito
		SET @Digito = @PartialValue % 1000
		IF @Power = 0 BEGIN
			SET @ValueOfHundreds = @Digito
		END ELSE IF @Power = 1 BEGIN
			SET @ValueOfThousands = @Digito
		END
		IF @Digito = 1 BEGIN
			 SET @Result = [crudex].[HUNDREDS_IN_WORDS](@Digito, @EnglishOrPortuguese) + ' ' + 
							  (SELECT NomeSingular FROM @Powers WHERE Id = @Power) + 
							  @Separator + @Result
		END ELSE IF @Digito > 0 BEGIN
			 SET @Result = [crudex].[HUNDREDS_IN_WORDS](@Digito, @EnglishOrPortuguese) + ' ' + 
							  (SELECT NomePlural FROM @Powers WHERE Id = @Power) + 
							  @Separator + @Result
		END
		SET @PartialValue = @PartialValue / 1000
		IF @Digito > 0 BEGIN
			IF (@Power = 0) BEGIN
				SET @Separator = CASE WHEN @EnglishOrPortuguese = 1 THEN @And ELSE ', ' END
			END ELSE BEGIN
				SET @Separator = ', '
			END
		END
		SET @Power = @Power + 1
	END
	SET @Result = RTRIM(@Result)
	IF @Result = '' BEGIN
		IF @Value = 0 BEGIN
			SET @Result = 'Zero ' + @CurrencyInPlural
		END
	END ELSE IF @Digito = 1 BEGIN
		IF @Power < 2 BEGIN
			SET @Result = @Result + ' ' + @CurrencyInSingular
		END ELSE IF @Power = 2 BEGIN
			SET @Result = @Result + ' ' + @CurrencyInPlural
		END ELSE BEGIN
			SET @Result = @Result + CASE WHEN @ValueOfHundreds > 0 OR @ValueOfThousands > 0 THEN ' ' ELSE @Of END + @CurrencyInPlural
		END
	END ELSE IF @Power <= 2 BEGIN
		SET @Result = @Result + ' ' + @CurrencyInPlural
	END ELSE BEGIN
		SET @Result = @Result + CASE WHEN @ValueOfHundreds > 0 OR @ValueOfThousands > 0 THEN ' ' ELSE @Of END + @CurrencyInPlural
	END
	SET @PartialValue = FLOOR(@Value * 100) % 100
	IF @PartialValue > 0 BEGIN
		IF @PartialValue = 1 BEGIN
			IF @Result = '' BEGIN
				SET @Result = [crudex].[HUNDREDS_IN_WORDS](@PartialValue, @EnglishOrPortuguese) + ' ' + @CentsInSingular + @Of + @CurrencyInSingular
			END ELSE BEGIN
				SET @Result = @Result + @And + [crudex].[HUNDREDS_IN_WORDS](@PartialValue, @EnglishOrPortuguese) + ' ' + @CentsInSingular 
			END
		END ELSE BEGIN
			IF @Result = '' BEGIN
				SET @Result = [crudex].[HUNDREDS_IN_WORDS](@PartialValue, @EnglishOrPortuguese) + ' ' + @CentsInPlural + @Of + @CurrencyInPlural
			END ELSE BEGIN
				SET @Result = @Result + @And + [crudex].[HUNDREDS_IN_WORDS](@PartialValue, @EnglishOrPortuguese) + ' ' + @CentsInPlural
			END
		END
	END		

	RETURN @Minus + ' ' + @Result
END
GO

/**********************************************************************************
Criar stored procedure [crudex].[IS_EQUAL]
**********************************************************************************/
IF (SELECT object_id('[crudex].[IS_EQUAL]', 'FN')) IS NULL
    EXEC('CREATE FUNCTION [crudex].[IS_EQUAL]() RETURNS BIT AS BEGIN RETURN 1 END')
GO

ALTER FUNCTION [crudex].[IS_EQUAL](
    @LeftValue NVARCHAR(MAX),
    @RightValue NVARCHAR(4000),
    @TypeValue VARCHAR(25)
)
RETURNS BIT AS 
BEGIN
    IF @LeftValue IS NULL AND @RightValue IS NULL
        RETURN 1;
    IF @LeftValue IS NULL OR @RightValue IS NULL
        RETURN 0;
	
    -- Comparações numéricas
	IF @TypeValue = 'int'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS int) = TRY_CAST(@RightValue AS int) THEN 1 ELSE 0 END;
	IF @TypeValue = 'smallint'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS smallint) = TRY_CAST(@RightValue AS smallint) THEN 1 ELSE 0 END;
	IF @TypeValue = 'tinyint'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS tinyint) = TRY_CAST(@RightValue AS tinyint) THEN 1 ELSE 0 END;
	IF @TypeValue = 'int'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS int) = TRY_CAST(@RightValue AS int) THEN 1 ELSE 0 END;

	-- Comparações decimais e monetárias
	IF @TypeValue = 'decimal'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS decimal(38, 18)) = TRY_CAST(@RightValue AS decimal(38, 18)) THEN 1 ELSE 0 END;
	IF @TypeValue = 'numeric'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS numeric(38, 18)) = TRY_CAST(@RightValue AS numeric(38, 18)) THEN 1 ELSE 0 END;
	IF @TypeValue = 'float'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS float) = TRY_CAST(@RightValue AS float) THEN 1 ELSE 0 END;
	IF @TypeValue = 'real'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS real) = TRY_CAST(@RightValue AS real) THEN 1 ELSE 0 END;
	IF @TypeValue = 'money'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS money) = TRY_CAST(@RightValue AS money) THEN 1 ELSE 0 END;
	IF @TypeValue = 'smallmoney'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS smallmoney) = TRY_CAST(@RightValue AS smallmoney) THEN 1 ELSE 0 END;
    
    -- Comparação de strings
	IF @TypeValue IN ('varchar', 'char', 'text', 'nvarchar', 'nchar', 'ntext')
        RETURN CASE WHEN @LeftValue = @RightValue THEN 1 ELSE 0 END;

    -- Comparações de datas
	IF @TypeValue = 'date'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS date) = TRY_CAST(@RightValue AS date) THEN 1 ELSE 0 END;
	IF @TypeValue = 'datetime'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS datetime) = TRY_CAST(@RightValue AS datetime) THEN 1 ELSE 0 END;
	IF @TypeValue = 'datetime2'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS datetime2) = TRY_CAST(@RightValue AS datetime2) THEN 1 ELSE 0 END;
	IF @TypeValue = 'smalldatetime'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS smalldatetime) = TRY_CAST(@RightValue AS smalldatetime) THEN 1 ELSE 0 END;
	IF @TypeValue = 'datetimeoffset'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS datetimeoffset) = TRY_CAST(@RightValue AS datetimeoffset) THEN 1 ELSE 0 END;
	IF @TypeValue = 'time'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS time) = TRY_CAST(@RightValue AS time) THEN 1 ELSE 0 END;

    -- Comparações de tipos especiais
    IF @TypeValue = 'bit'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS BIT) = TRY_CAST(@RightValue AS BIT) THEN 1 ELSE 0 END;
    IF @TypeValue = 'sysname'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS SYSNAME) = TRY_CAST(@RightValue AS SYSNAME) THEN 1 ELSE 0 END;
    IF @TypeValue = 'uniqueidentifier'
        RETURN CASE WHEN TRY_CAST(@LeftValue AS UNIQUEIDENTIFIER) = TRY_CAST(@RightValue AS UNIQUEIDENTIFIER) THEN 1 ELSE 0 END;

    -- Comparação final como VARBINARY(MAX) (fallback)
    RETURN CASE WHEN TRY_CAST(@LeftValue AS VARBINARY(MAX)) = TRY_CAST(@RightValue AS VARBINARY(MAX)) THEN 1 ELSE 0 END;
END
GO
/**********************************************************************************
Criar stored procedure [crudex].[JSON_EXTRACT]
**********************************************************************************/
IF (SELECT object_id('[crudex].[JSON_EXTRACT]', 'FN')) IS NULL
    EXEC('CREATE FUNCTION [crudex].[JSON_EXTRACT]() RETURNS NVARCHAR(MAX) AS BEGIN RETURN '''' END')
GO
ALTER FUNCTION [crudex].[JSON_EXTRACT](@json NVARCHAR(MAX),
                                              @propertyPath NVARCHAR(MAX))
RETURNS NVARCHAR(MAX) AS
BEGIN
    DECLARE @result NVARCHAR(MAX);

    SET @result = JSON_QUERY(@json, @propertyPath);

    IF @result IS NULL
        SET @result = JSON_VALUE(@json, @propertyPath);

    RETURN @result;
END
GO
/**********************************************************************************
Criar stored procedure [crudex].TransactionBegin]
**********************************************************************************/
IF(SELECT object_id('[crudex].[TransactionBegin]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [crudex].[TransactionBegin] AS PRINT 1')
GO
ALTER PROCEDURE[crudex].[TransactionBegin](@LoginId BIGINT
										 ,@UserName VARCHAR(25)
										 ,@ReturnValue BIGINT OUT) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED
		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]
		IF @LoginId IS NULL
			THROW 51000, 'Valor de @LoginId é requerido', 1
		IF @UserName IS NULL
			THROW 51000, 'Valor de @UserName é requerido', 1
		IF EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId AND [IsConfirmed] IS NULL)
			THROW 51000, 'Há transação pendente neste @LoginId', 1
		
		DECLARE @TransactionId BIGINT

		EXEC @TransactionId = [dbo].[NewId] 'crudex', 'crudex', 'Transactions'
		INSERT [dbo].[Transactions] ([Id]
									,[LoginId]
									,[IsConfirmed]
									,[CreatedAt]
									,[CreatedBy])
								VALUES (@TransactionId
									   ,@LoginId
									   ,NULL
									   ,GETDATE()
									   ,@UserName)
		SET @ReturnValue = @TransactionId
		COMMIT TRANSACTION

		RETURN 0
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint]
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [crudex].[TransactionCommit]
**********************************************************************************/
IF(SELECT object_id('[crudex].[TransactionCommit]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [crudex].[TransactionCommit] AS PRINT 1')
GO
ALTER PROCEDURE[crudex].[TransactionCommit](@TransactionId BIGINT
										   ,@UserName VARCHAR(25)
										   ,@ReturnValue BIGINT OUT) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		DECLARE @LoginId BIGINT
				,@OperationId BIGINT
				,@TableName VARCHAR(25)
				,@IsConfirmed BIT
				,@CreatedBy VARCHAR(25)
				,@sql VARCHAR(MAX)

		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]
		IF @TransactionId IS NULL
			THROW 51000, 'Valor de @TransactionId é requerido', 1
		IF @UserName IS NULL
			THROW 51000, 'Valor de @UserName é requerido', 1
		SELECT @LoginId = [LoginId]
			  ,@IsConfirmed = [IsConfirmed]
			  ,@CreatedBy = [CreatedBy]
			FROM [dbo].[Transactions]
			WHERE [Id] = @TransactionId
		IF @@ROWCOUNT = 0
			THROW 51000, 'Transação inexistente', 1
		IF @IsConfirmed IS NOT NULL BEGIN
			SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
			THROW 51000, @ErrorMessage, 1
		END
		IF @UserName <> @CreatedBy
			THROW 51000, 'Erro grave de segurança', 1
		SET @sql = (SELECT STRING_AGG('[dbo].[' + [O].[TableName] + 'Commit] @LoginId = ' +
									  CAST(@LoginId AS VARCHAR) + ', @OperationId = ' +
									  CAST([O].[Id] AS VARCHAR), '; ')
						FROM [dbo].[Operations] [O]
						WHERE [O].[TransactionId] = @TransactionId
							  AND [O].[IsConfirmed] IS NULL)
		EXEC sp_executesql @sql
		UPDATE [dbo].[Transactions]
			SET [IsConfirmed] = 1
				,[UpdatedBy] = @UserName
				,[UpdatedAt] = GETDATE()
			WHERE [Id] = @TransactionId
		COMMIT TRANSACTION

		RETURN 0
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint]
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO
/**********************************************************************************
Criar stored procedure [crudex].[TransactionRollback]
**********************************************************************************/
IF(SELECT object_id('[crudex].[TransactionRollback]', 'P')) IS NULL
	EXEC('CREATE PROCEDURE [crudex].[TransactionRollback] AS PRINT 1')
GO
ALTER PROCEDURE[crudex].[TransactionRollback](@TransactionId INT
											,@UserName VARCHAR(25)) AS BEGIN
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
			,@ErrorMessage NVARCHAR(MAX)

	BEGIN TRY
		SET NOCOUNT ON
		SET TRANSACTION ISOLATION LEVEL READ COMMITTED

		DECLARE @OperationId INT
				,@CreatedBy VARCHAR(25)
				,@IsConfirmed BIT

		BEGIN TRANSACTION
		SAVE TRANSACTION [SavePoint]
		IF @TransactionId IS NULL
			THROW 51000, 'Valor de @TransactionId é requerido', 1
		SELECT @IsConfirmed = [IsConfirmed]
			  ,@CreatedBy = [CreatedBy]
			FROM [dbo].[Transactions]
			WHERE [Id] = @TransactionId
		IF @@ROWCOUNT = 0
			THROW 51000, 'Transação inexistente', 1
		IF @IsConfirmed IS NOT NULL BEGIN
			SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
			THROW 51000, @ErrorMessage, 1
		END

		IF @UserName <> @CreatedBy
			THROW 51000, 'Erro grave de segurança', 1
		WHILE 1 = 1 BEGIN
			SELECT TOP 1 @OperationId = [Id]
						,@CreatedBy = [CreatedBy]
				FROM [dbo].[Operations]
				WHERE [TransactionId] = @TransactionId
						AND [IsConfirmed] IS NULL
				ORDER BY [Id]
			IF @@ROWCOUNT = 0
				BREAK
			IF @UserName <> @CreatedBy
				THROW 51000, 'Erro grave de segurança', 1
			UPDATE [dbo].[Operations]
				SET [IsConfirmed] = 0
					,[UpdatedBy] = @UserName
					,[UpdatedAt] = GETDATE()
				WHERE [Id] = @OperationId
		END
		UPDATE [dbo].[Transactions]
			SET [IsConfirmed] = 0
				,[UpdatedBy] = @UserName
				,[UpdatedAt] = GETDATE()
			WHERE [Id] = @TransactionId
		COMMIT TRANSACTION

		RETURN 1
	END TRY
	BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
	END CATCH
END
GO

/**********************************************************************************
Criar referências de [dbo].[Types]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Types_Categories')
    ALTER TABLE [dbo].[Types] DROP CONSTRAINT FK_Types_Categories
GO
ALTER TABLE [dbo].[Types] WITH CHECK 
    ADD CONSTRAINT [FK_Types_Categories] 
    FOREIGN KEY([CategoryId]) 
    REFERENCES [dbo].[Categories] ([Id])
GO
ALTER TABLE [dbo].[Types] CHECK CONSTRAINT [FK_Types_Categories]
GO
/**********************************************************************************
Criar referências de [dbo].[Domains]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Domains_Types')
    ALTER TABLE [dbo].[Domains] DROP CONSTRAINT FK_Domains_Types
GO
ALTER TABLE [dbo].[Domains] WITH CHECK 
    ADD CONSTRAINT [FK_Domains_Types] 
    FOREIGN KEY([TypeId]) 
    REFERENCES [dbo].[Types] ([Id])
GO
ALTER TABLE [dbo].[Domains] CHECK CONSTRAINT [FK_Domains_Types]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Domains_Masks')
    ALTER TABLE [dbo].[Domains] DROP CONSTRAINT FK_Domains_Masks
GO
ALTER TABLE [dbo].[Domains] WITH CHECK 
    ADD CONSTRAINT [FK_Domains_Masks] 
    FOREIGN KEY([MaskId]) 
    REFERENCES [dbo].[Masks] ([Id])
GO
ALTER TABLE [dbo].[Domains] CHECK CONSTRAINT [FK_Domains_Masks]
GO
/**********************************************************************************
Criar referências de [dbo].[Menus]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Menus_Systems')
    ALTER TABLE [dbo].[Menus] DROP CONSTRAINT FK_Menus_Systems
GO
ALTER TABLE [dbo].[Menus] WITH CHECK 
    ADD CONSTRAINT [FK_Menus_Systems] 
    FOREIGN KEY([SystemId]) 
    REFERENCES [dbo].[Systems] ([Id])
GO
ALTER TABLE [dbo].[Menus] CHECK CONSTRAINT [FK_Menus_Systems]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Menus_Menus')
    ALTER TABLE [dbo].[Menus] DROP CONSTRAINT FK_Menus_Menus
GO
ALTER TABLE [dbo].[Menus] WITH CHECK 
    ADD CONSTRAINT [FK_Menus_Menus] 
    FOREIGN KEY([ParentMenuId]) 
    REFERENCES [dbo].[Menus] ([Id])
GO
ALTER TABLE [dbo].[Menus] CHECK CONSTRAINT [FK_Menus_Menus]
GO
/**********************************************************************************
Criar referências de [dbo].[SystemsUsers]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_SystemsUsers_Systems')
    ALTER TABLE [dbo].[SystemsUsers] DROP CONSTRAINT FK_SystemsUsers_Systems
GO
ALTER TABLE [dbo].[SystemsUsers] WITH CHECK 
    ADD CONSTRAINT [FK_SystemsUsers_Systems] 
    FOREIGN KEY([SystemId]) 
    REFERENCES [dbo].[Systems] ([Id])
GO
ALTER TABLE [dbo].[SystemsUsers] CHECK CONSTRAINT [FK_SystemsUsers_Systems]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_SystemsUsers_Users')
    ALTER TABLE [dbo].[SystemsUsers] DROP CONSTRAINT FK_SystemsUsers_Users
GO
ALTER TABLE [dbo].[SystemsUsers] WITH CHECK 
    ADD CONSTRAINT [FK_SystemsUsers_Users] 
    FOREIGN KEY([UserId]) 
    REFERENCES [dbo].[Users] ([Id])
GO
ALTER TABLE [dbo].[SystemsUsers] CHECK CONSTRAINT [FK_SystemsUsers_Users]
GO
/**********************************************************************************
Criar referências de [dbo].[Databases]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Databases_Connections')
    ALTER TABLE [dbo].[Databases] DROP CONSTRAINT FK_Databases_Connections
GO
ALTER TABLE [dbo].[Databases] WITH CHECK 
    ADD CONSTRAINT [FK_Databases_Connections] 
    FOREIGN KEY([ConnectionId]) 
    REFERENCES [dbo].[Connections] ([Id])
GO
ALTER TABLE [dbo].[Databases] CHECK CONSTRAINT [FK_Databases_Connections]
GO
/**********************************************************************************
Criar referências de [dbo].[SystemsDatabases]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_SystemsDatabases_Systems')
    ALTER TABLE [dbo].[SystemsDatabases] DROP CONSTRAINT FK_SystemsDatabases_Systems
GO
ALTER TABLE [dbo].[SystemsDatabases] WITH CHECK 
    ADD CONSTRAINT [FK_SystemsDatabases_Systems] 
    FOREIGN KEY([SystemId]) 
    REFERENCES [dbo].[Systems] ([Id])
GO
ALTER TABLE [dbo].[SystemsDatabases] CHECK CONSTRAINT [FK_SystemsDatabases_Systems]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_SystemsDatabases_Databases')
    ALTER TABLE [dbo].[SystemsDatabases] DROP CONSTRAINT FK_SystemsDatabases_Databases
GO
ALTER TABLE [dbo].[SystemsDatabases] WITH CHECK 
    ADD CONSTRAINT [FK_SystemsDatabases_Databases] 
    FOREIGN KEY([DatabaseId]) 
    REFERENCES [dbo].[Databases] ([Id])
GO
ALTER TABLE [dbo].[SystemsDatabases] CHECK CONSTRAINT [FK_SystemsDatabases_Databases]
GO
/**********************************************************************************
Criar referências de [dbo].[DatabasesTables]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_DatabasesTables_Databases')
    ALTER TABLE [dbo].[DatabasesTables] DROP CONSTRAINT FK_DatabasesTables_Databases
GO
ALTER TABLE [dbo].[DatabasesTables] WITH CHECK 
    ADD CONSTRAINT [FK_DatabasesTables_Databases] 
    FOREIGN KEY([DatabaseId]) 
    REFERENCES [dbo].[Databases] ([Id])
GO
ALTER TABLE [dbo].[DatabasesTables] CHECK CONSTRAINT [FK_DatabasesTables_Databases]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_DatabasesTables_Tables')
    ALTER TABLE [dbo].[DatabasesTables] DROP CONSTRAINT FK_DatabasesTables_Tables
GO
ALTER TABLE [dbo].[DatabasesTables] WITH CHECK 
    ADD CONSTRAINT [FK_DatabasesTables_Tables] 
    FOREIGN KEY([TableId]) 
    REFERENCES [dbo].[Tables] ([Id])
GO
ALTER TABLE [dbo].[DatabasesTables] CHECK CONSTRAINT [FK_DatabasesTables_Tables]
GO
/**********************************************************************************
Criar referências de [dbo].[Columns]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Columns_Tables')
    ALTER TABLE [dbo].[Columns] DROP CONSTRAINT FK_Columns_Tables
GO
ALTER TABLE [dbo].[Columns] WITH CHECK 
    ADD CONSTRAINT [FK_Columns_Tables] 
    FOREIGN KEY([TableId]) 
    REFERENCES [dbo].[Tables] ([Id])
GO
ALTER TABLE [dbo].[Columns] CHECK CONSTRAINT [FK_Columns_Tables]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Columns_Domains')
    ALTER TABLE [dbo].[Columns] DROP CONSTRAINT FK_Columns_Domains
GO
ALTER TABLE [dbo].[Columns] WITH CHECK 
    ADD CONSTRAINT [FK_Columns_Domains] 
    FOREIGN KEY([DomainId]) 
    REFERENCES [dbo].[Domains] ([Id])
GO
ALTER TABLE [dbo].[Columns] CHECK CONSTRAINT [FK_Columns_Domains]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Columns_Tables')
    ALTER TABLE [dbo].[Columns] DROP CONSTRAINT FK_Columns_Tables
GO
ALTER TABLE [dbo].[Columns] WITH CHECK 
    ADD CONSTRAINT [FK_Columns_Tables] 
    FOREIGN KEY([ReferenceTableId]) 
    REFERENCES [dbo].[Tables] ([Id])
GO
ALTER TABLE [dbo].[Columns] CHECK CONSTRAINT [FK_Columns_Tables]
GO
/**********************************************************************************
Criar referências de [dbo].[Indexes]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Indexes_Databases')
    ALTER TABLE [dbo].[Indexes] DROP CONSTRAINT FK_Indexes_Databases
GO
ALTER TABLE [dbo].[Indexes] WITH CHECK 
    ADD CONSTRAINT [FK_Indexes_Databases] 
    FOREIGN KEY([DatabaseId]) 
    REFERENCES [dbo].[Databases] ([Id])
GO
ALTER TABLE [dbo].[Indexes] CHECK CONSTRAINT [FK_Indexes_Databases]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Indexes_Tables')
    ALTER TABLE [dbo].[Indexes] DROP CONSTRAINT FK_Indexes_Tables
GO
ALTER TABLE [dbo].[Indexes] WITH CHECK 
    ADD CONSTRAINT [FK_Indexes_Tables] 
    FOREIGN KEY([TableId]) 
    REFERENCES [dbo].[Tables] ([Id])
GO
ALTER TABLE [dbo].[Indexes] CHECK CONSTRAINT [FK_Indexes_Tables]
GO
/**********************************************************************************
Criar referências de [dbo].[Indexkeys]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Indexkeys_Indexes')
    ALTER TABLE [dbo].[Indexkeys] DROP CONSTRAINT FK_Indexkeys_Indexes
GO
ALTER TABLE [dbo].[Indexkeys] WITH CHECK 
    ADD CONSTRAINT [FK_Indexkeys_Indexes] 
    FOREIGN KEY([IndexId]) 
    REFERENCES [dbo].[Indexes] ([Id])
GO
ALTER TABLE [dbo].[Indexkeys] CHECK CONSTRAINT [FK_Indexkeys_Indexes]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Indexkeys_Columns')
    ALTER TABLE [dbo].[Indexkeys] DROP CONSTRAINT FK_Indexkeys_Columns
GO
ALTER TABLE [dbo].[Indexkeys] WITH CHECK 
    ADD CONSTRAINT [FK_Indexkeys_Columns] 
    FOREIGN KEY([ColumnId]) 
    REFERENCES [dbo].[Columns] ([Id])
GO
ALTER TABLE [dbo].[Indexkeys] CHECK CONSTRAINT [FK_Indexkeys_Columns]
GO
/**********************************************************************************
Criar referências de [dbo].[Logins]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Logins_Systems')
    ALTER TABLE [dbo].[Logins] DROP CONSTRAINT FK_Logins_Systems
GO
ALTER TABLE [dbo].[Logins] WITH CHECK 
    ADD CONSTRAINT [FK_Logins_Systems] 
    FOREIGN KEY([SystemId]) 
    REFERENCES [dbo].[Systems] ([Id])
GO
ALTER TABLE [dbo].[Logins] CHECK CONSTRAINT [FK_Logins_Systems]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Logins_Users')
    ALTER TABLE [dbo].[Logins] DROP CONSTRAINT FK_Logins_Users
GO
ALTER TABLE [dbo].[Logins] WITH CHECK 
    ADD CONSTRAINT [FK_Logins_Users] 
    FOREIGN KEY([UserId]) 
    REFERENCES [dbo].[Users] ([Id])
GO
ALTER TABLE [dbo].[Logins] CHECK CONSTRAINT [FK_Logins_Users]
GO
/**********************************************************************************
Criar referências de [dbo].[Transactions]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Transactions_Logins')
    ALTER TABLE [dbo].[Transactions] DROP CONSTRAINT FK_Transactions_Logins
GO
ALTER TABLE [dbo].[Transactions] WITH CHECK 
    ADD CONSTRAINT [FK_Transactions_Logins] 
    FOREIGN KEY([LoginId]) 
    REFERENCES [dbo].[Logins] ([Id])
GO
ALTER TABLE [dbo].[Transactions] CHECK CONSTRAINT [FK_Transactions_Logins]
GO
/**********************************************************************************
Criar referências de [dbo].[Operations]
**********************************************************************************/
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Operations_Transactions')
    ALTER TABLE [dbo].[Operations] DROP CONSTRAINT FK_Operations_Transactions
GO
ALTER TABLE [dbo].[Operations] WITH CHECK 
    ADD CONSTRAINT [FK_Operations_Transactions] 
    FOREIGN KEY([TransactionId]) 
    REFERENCES [dbo].[Transactions] ([Id])
GO
ALTER TABLE [dbo].[Operations] CHECK CONSTRAINT [FK_Operations_Transactions]
GO
IF EXISTS(SELECT 1 FROM [sys].[foreign_keys] WHERE [name] = 'FK_Operations_Operations')
    ALTER TABLE [dbo].[Operations] DROP CONSTRAINT FK_Operations_Operations
GO
ALTER TABLE [dbo].[Operations] WITH CHECK 
    ADD CONSTRAINT [FK_Operations_Operations] 
    FOREIGN KEY([ParentOperationId]) 
    REFERENCES [dbo].[Operations] ([Id])
GO
ALTER TABLE [dbo].[Operations] CHECK CONSTRAINT [FK_Operations_Operations]
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Categories]
**********************************************************************************/
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS tinyint)
                                ,CAST('string' AS nvarchar(25))
                                ,CAST('text' AS nvarchar(10))
                                ,CAST('left' AS nvarchar(6))
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS tinyint)
                                ,CAST('numeric' AS nvarchar(25))
                                ,CAST('text' AS nvarchar(10))
                                ,CAST('right' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS tinyint)
                                ,CAST('date' AS nvarchar(25))
                                ,CAST('date' AS nvarchar(10))
                                ,CAST('right' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS tinyint)
                                ,CAST('datetime' AS nvarchar(25))
                                ,CAST('datetime-local' AS nvarchar(10))
                                ,CAST('right' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS tinyint)
                                ,CAST('boolean' AS nvarchar(25))
                                ,CAST('checkbox' AS nvarchar(10))
                                ,CAST('center' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS tinyint)
                                ,CAST('time' AS nvarchar(25))
                                ,CAST('time' AS nvarchar(10))
                                ,CAST('right' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS tinyint)
                                ,CAST('text' AS nvarchar(25))
                                ,CAST('textarea' AS nvarchar(10))
                                ,CAST('left' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS tinyint)
                                ,CAST('image' AS nvarchar(25))
                                ,CAST('image' AS nvarchar(10))
                                ,CAST('left' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS tinyint)
                                ,CAST('binary' AS nvarchar(25))
                                ,CAST('file' AS nvarchar(10))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Categories] ([Id]
                                ,[Name]
                                ,[HtmlInputType]
                                ,[HtmlInputAlign]
                                ,[AskEncrypted]
                                ,[AskMask]
                                ,[AskListable]
                                ,[AskDefault]
                                ,[AskMinimum]
                                ,[AskMaximum]
                                ,[AskInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS tinyint)
                                ,CAST('undefined' AS nvarchar(25))
                                ,CAST('textarea' AS nvarchar(10))
                                ,CAST('left' AS nvarchar(6))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Types]
**********************************************************************************/
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('bigint' AS nvarchar(25))
                                ,CAST('15' AS int)
                                ,CAST('-9007199254740990' AS nvarchar(max))
                                ,CAST('9007199254740990' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS tinyint)
                                ,CAST('9' AS tinyint)
                                ,CAST('binary' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS tinyint)
                                ,CAST('5' AS tinyint)
                                ,CAST('bit' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('char' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS tinyint)
                                ,CAST('3' AS tinyint)
                                ,CAST('date' AS nvarchar(25))
                                ,CAST('10' AS int)
                                ,CAST('01/01/0001' AS nvarchar(max))
                                ,CAST('31/12/9999' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('datetime' AS nvarchar(25))
                                ,CAST('20' AS int)
                                ,CAST('01/01/1753 00:00:00.000' AS nvarchar(max))
                                ,CAST('31/12/9999 23:59:59.997' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('datetime2' AS nvarchar(25))
                                ,CAST('25' AS int)
                                ,CAST('01/01/0001 00:00:00.0000000' AS nvarchar(max))
                                ,CAST('31/12/9999 23:59:59.9999999' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('datetimeoffset' AS nvarchar(25))
                                ,CAST('25' AS int)
                                ,CAST('01/01/0001 00:00:00.0000000' AS nvarchar(max))
                                ,CAST('31/12/9999 23:59:59.9999999' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('decimal' AS nvarchar(25))
                                ,CAST('15' AS int)
                                ,CAST('-9007199254740990' AS nvarchar(max))
                                ,CAST('9007199254740990' AS nvarchar(max))
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('float' AS nvarchar(25))
                                ,CAST('15' AS int)
                                ,CAST('-9007199254740990' AS nvarchar(max))
                                ,CAST('9007199254740990' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('geography' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('geometry' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('hierarchyid' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS tinyint)
                                ,CAST('8' AS tinyint)
                                ,CAST('image' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('int' AS nvarchar(25))
                                ,CAST('10' AS int)
                                ,CAST('-2147483648' AS nvarchar(max))
                                ,CAST('2147483647' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('money' AS nvarchar(25))
                                ,CAST('15' AS int)
                                ,CAST('-922337203685477' AS nvarchar(max))
                                ,CAST('922337203685477' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('nchar' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('ntext' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('numeric' AS nvarchar(25))
                                ,CAST('15' AS int)
                                ,CAST('-9007199254740990' AS nvarchar(max))
                                ,CAST('9007199254740990' AS nvarchar(max))
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('nvarchar' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('nvarchar(max)' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('22' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('real' AS nvarchar(25))
                                ,CAST('15' AS int)
                                ,CAST('-9007199254740990' AS nvarchar(max))
                                ,CAST('9007199254740990' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('23' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('smalldatetime' AS nvarchar(25))
                                ,CAST('10' AS int)
                                ,CAST('01/01/1900' AS nvarchar(max))
                                ,CAST('06/06/2079' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('24' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('smallint' AS nvarchar(25))
                                ,CAST('5' AS int)
                                ,CAST('-32768' AS nvarchar(max))
                                ,CAST('32767' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('25' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('smallmoney' AS nvarchar(25))
                                ,CAST('5' AS int)
                                ,CAST('214748' AS nvarchar(max))
                                ,CAST('214748' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('26' AS tinyint)
                                ,CAST('10' AS tinyint)
                                ,CAST('sql_variant' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('27' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('sysname' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('28' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('text' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('29' AS tinyint)
                                ,CAST('6' AS tinyint)
                                ,CAST('time' AS nvarchar(25))
                                ,CAST('15' AS int)
                                ,CAST('00:00:00.0000000' AS nvarchar(max))
                                ,CAST('23:59:59.9999999' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('30' AS tinyint)
                                ,CAST('4' AS tinyint)
                                ,CAST('timestamp' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('31' AS tinyint)
                                ,CAST('2' AS tinyint)
                                ,CAST('tinyint' AS nvarchar(25))
                                ,CAST('3' AS int)
                                ,CAST('0' AS nvarchar(max))
                                ,CAST('255' AS nvarchar(max))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('32' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('uniqueidentifier' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('33' AS tinyint)
                                ,CAST('9' AS tinyint)
                                ,CAST('varbinary' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('34' AS tinyint)
                                ,CAST('9' AS tinyint)
                                ,CAST('varbinary(max)' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('35' AS tinyint)
                                ,CAST('1' AS tinyint)
                                ,CAST('varchar' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('36' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('varchar(max)' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Types] ([Id]
                                ,[CategoryId]
                                ,[Name]
                                ,[MaxLength]
                                ,[Minimum]
                                ,[Maximum]
                                ,[AskLength]
                                ,[AskDecimals]
                                ,[AskPrimarykey]
                                ,[AskAutoincrement]
                                ,[AskFilterable]
                                ,[AskGridable]
                                ,[AskCodification]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('37' AS tinyint)
                                ,CAST('7' AS tinyint)
                                ,CAST('xml' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Masks]
**********************************************************************************/
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('BigInteger' AS nvarchar(25))
                                ,CAST('#.###.###.###.###.###' AS nvarchar(max))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('Integer' AS nvarchar(25))
                                ,CAST('#.###.###.###' AS nvarchar(max))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS bigint)
                                ,CAST('SmallInteger' AS nvarchar(25))
                                ,CAST('##.###' AS nvarchar(max))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS bigint)
                                ,CAST('TinyInteger' AS nvarchar(25))
                                ,CAST('###' AS nvarchar(max))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS bigint)
                                ,CAST('ShortInteger' AS nvarchar(25))
                                ,CAST('##.###' AS nvarchar(max))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Masks] ([Id]
                                ,[Name]
                                ,[Mask]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS bigint)
                                ,CAST('DateTime' AS nvarchar(25))
                                ,CAST('dd/MM/yyyy hh:mm:ss' AS nvarchar(max))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Domains]
**********************************************************************************/
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('1' AS tinyint)
                                ,CAST('1' AS bigint)
                                ,CAST('BigInteger' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('15' AS tinyint)
                                ,CAST('2' AS bigint)
                                ,CAST('Integer' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS bigint)
                                ,CAST('15' AS tinyint)
                                ,CAST('5' AS bigint)
                                ,CAST('ShortInteger' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('-65536' AS nvarchar(max))
                                ,CAST('65535' AS nvarchar(max))
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS bigint)
                                ,CAST('24' AS tinyint)
                                ,CAST('3' AS bigint)
                                ,CAST('SmallInteger' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS bigint)
                                ,CAST('31' AS tinyint)
                                ,CAST('4' AS bigint)
                                ,CAST('TinyInteger' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS bigint)
                                ,CAST('3' AS tinyint)
                                ,NULL
                                ,CAST('Boolean' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS bigint)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Nvarchar(15)' AS nvarchar(25))
                                ,CAST('15' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS bigint)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Nvarchar(20)' AS nvarchar(25))
                                ,CAST('20' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS bigint)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Nvarchar(25)' AS nvarchar(25))
                                ,CAST('25' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS bigint)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Nvarchar(50)' AS nvarchar(25))
                                ,CAST('50' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS bigint)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Nvarchar(256)' AS nvarchar(25))
                                ,CAST('256' AS smallint)
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS bigint)
                                ,CAST('21' AS tinyint)
                                ,NULL
                                ,CAST('Nvarchar(MAX)' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS bigint)
                                ,CAST('21' AS tinyint)
                                ,NULL
                                ,CAST('JavaScript' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('JS' AS nvarchar(5))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS bigint)
                                ,CAST('21' AS tinyint)
                                ,NULL
                                ,CAST('SQL' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('SQL' AS nvarchar(5))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS bigint)
                                ,CAST('21' AS tinyint)
                                ,NULL
                                ,CAST('JSON' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('JSON' AS nvarchar(5))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS bigint)
                                ,CAST('6' AS tinyint)
                                ,CAST('6' AS bigint)
                                ,CAST('DateTime' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS bigint)
                                ,CAST('21' AS tinyint)
                                ,NULL
                                ,CAST('Variant' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS bigint)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('Codification' AS nvarchar(25))
                                ,CAST('5' AS smallint)
                                ,NULL
                                ,CAST('JSON;JS;SQL' AS nvarchar(max))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS bigint)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('HtmlInputType' AS nvarchar(25))
                                ,CAST('10' AS smallint)
                                ,NULL
                                ,CAST('text;checkbox;textarea;image;file' AS nvarchar(max))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS bigint)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('HtmlInputAlign' AS nvarchar(25))
                                ,CAST('6' AS smallint)
                                ,NULL
                                ,CAST('left;center;right' AS nvarchar(max))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Domains] ([Id]
                                ,[TypeId]
                                ,[MaskId]
                                ,[Name]
                                ,[Length]
                                ,[Decimals]
                                ,[ValidValues]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[Codification]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS bigint)
                                ,CAST('20' AS tinyint)
                                ,NULL
                                ,CAST('OperationAction' AS nvarchar(25))
                                ,CAST('15' AS smallint)
                                ,NULL
                                ,CAST('create;update;delete' AS nvarchar(max))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Systems]
**********************************************************************************/
INSERT INTO [dbo].[Systems] ([Id]
                                ,[Name]
                                ,[Description]
                                ,[ClientName]
                                ,[MaxRetryLogins]
                                ,[IsOffAir]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('crudex' AS nvarchar(25))
                                ,CAST('CRUD Express' AS nvarchar(50))
                                ,CAST('softlab' AS nvarchar(15))
                                ,CAST('5' AS tinyint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Menus]
**********************************************************************************/
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('Cadastros' AS nvarchar(20))
                                ,CAST('Cadastros' AS nvarchar(50))
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('Usuários' AS nvarchar(20))
                                ,CAST('Cadastro de Usuários' AS nvarchar(50))
                                ,CAST('grid/crudex/Users' AS nvarchar(50))
                                ,CAST('1' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('Tabelas' AS nvarchar(20))
                                ,CAST('Cadastro de tabelas' AS nvarchar(50))
                                ,CAST('grid/crudex/Tables' AS nvarchar(50))
                                ,CAST('1' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('Menus' AS nvarchar(20))
                                ,CAST('Cadastro de menus' AS nvarchar(50))
                                ,CAST('grid/crudex/Menus' AS nvarchar(50))
                                ,CAST('1' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('Sistemas' AS nvarchar(20))
                                ,CAST('Cadastro de sistemas' AS nvarchar(50))
                                ,CAST('grid/crudex/Systems' AS nvarchar(50))
                                ,CAST('3' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('Banco de Dados' AS nvarchar(20))
                                ,CAST('Cadastro de bancos de dados' AS nvarchar(50))
                                ,CAST('grid/crudex/Databases' AS nvarchar(50))
                                ,CAST('3' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('Colunas' AS nvarchar(20))
                                ,CAST('Cadastro de colunas de tabelas' AS nvarchar(50))
                                ,CAST('grid/crudex/Columns' AS nvarchar(50))
                                ,CAST('6' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('40' AS smallint)
                                ,CAST('Tipos' AS nvarchar(20))
                                ,CAST('Cadastro de tipos' AS nvarchar(50))
                                ,CAST('grid/crudex/Types' AS nvarchar(50))
                                ,CAST('6' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('45' AS smallint)
                                ,CAST('Associações' AS nvarchar(20))
                                ,CAST('Associações entre tabelas' AS nvarchar(50))
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('50' AS smallint)
                                ,CAST('Sistemas x BD' AS nvarchar(20))
                                ,CAST('Associação entre sistemas e bancos de dados' AS nvarchar(50))
                                ,CAST('grid/crudex/SystemsDatabases' AS nvarchar(50))
                                ,CAST('9' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('55' AS smallint)
                                ,CAST('Usuários x Sistemas' AS nvarchar(20))
                                ,CAST('Associação entre usuários e sistemas' AS nvarchar(50))
                                ,CAST('grid/crudex/SystemsUsers' AS nvarchar(50))
                                ,CAST('9' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Menus] ([Id]
                                ,[SystemId]
                                ,[Sequence]
                                ,[Caption]
                                ,[Message]
                                ,[Action]
                                ,[ParentMenuId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('60' AS smallint)
                                ,CAST('Sair' AS nvarchar(20))
                                ,CAST('Retornar ao login' AS nvarchar(50))
                                ,CAST('exit/login' AS nvarchar(50))
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Users]
**********************************************************************************/
INSERT INTO [dbo].[Users] ([Id]
                                ,[Name]
                                ,[Password]
                                ,[FullName]
                                ,[RetryLogins]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('adm' AS nvarchar(25))
                                ,CAST('adm' AS nvarchar(256))
                                ,CAST('Administrador' AS nvarchar(50))
                                ,CAST('0' AS tinyint)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Users] ([Id]
                                ,[Name]
                                ,[Password]
                                ,[FullName]
                                ,[RetryLogins]
                                ,[IsActive]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('labrego' AS nvarchar(25))
                                ,CAST('diva' AS nvarchar(256))
                                ,CAST('João da Rocha Labrego' AS nvarchar(50))
                                ,CAST('0' AS tinyint)
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[SystemsUsers]
**********************************************************************************/
INSERT INTO [dbo].[SystemsUsers] ([Id]
                                ,[SystemId]
                                ,[UserId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('cruda x adm' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[SystemsUsers] ([Id]
                                ,[SystemId]
                                ,[UserId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('cruda x labrego' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Connections]
**********************************************************************************/
INSERT INTO [dbo].[Connections] ([Id]
                                ,[Provider]
                                ,[HostName]
                                ,[Port]
                                ,[IntegratedSecurity]
                                ,[ConnectionTimeout]
                                ,[ExtendedProperties]
                                ,[UserID]
                                ,[Password]
                                ,[PersistSecurityInfo]
                                ,[AdditionalParameters]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('MSOLEDBSQL' AS nvarchar(50))
                                ,CAST('localhost' AS nvarchar(25))
                                ,CAST('1433' AS int)
                                ,CAST('0' AS bit)
                                ,CAST('30' AS smallint)
                                ,NULL
                                ,CAST('sa' AS nvarchar(25))
                                ,CAST('diva' AS nvarchar(256))
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Databases]
**********************************************************************************/
INSERT INTO [dbo].[Databases] ([Id]
                                ,[ConnectionId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Folder]
                                ,[IsLegacy]
                                ,[CurrentOperationId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('crudex' AS nvarchar(25))
                                ,CAST('crudex' AS nvarchar(25))
                                ,CAST('CRUD Express' AS nvarchar(50))
                                ,CAST('D:\CRUDEX-C#\CRUDEX\CRUDEX\db\' AS nvarchar(256))
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[SystemsDatabases]
**********************************************************************************/
INSERT INTO [dbo].[SystemsDatabases] ([Id]
                                ,[SystemId]
                                ,[DatabaseId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('crudex x crudex' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Tables]
**********************************************************************************/
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('Categories' AS nvarchar(25))
                                ,CAST('Category' AS nvarchar(25))
                                ,CAST('Categorias de tipos de dados' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('10' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('Types' AS nvarchar(25))
                                ,CAST('Type' AS nvarchar(25))
                                ,CAST('Tipos de dados' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('37' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS bigint)
                                ,CAST('Masks' AS nvarchar(25))
                                ,CAST('Mask' AS nvarchar(25))
                                ,CAST('Máscaras de Edição' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('6' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS bigint)
                                ,CAST('Domains' AS nvarchar(25))
                                ,CAST('Domain' AS nvarchar(25))
                                ,CAST('Domínios de colunas' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('21' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS bigint)
                                ,CAST('Systems' AS nvarchar(25))
                                ,CAST('System' AS nvarchar(25))
                                ,CAST('Sistemas' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS bigint)
                                ,CAST('Menus' AS nvarchar(25))
                                ,CAST('Menu' AS nvarchar(25))
                                ,CAST('Menus de sistemas' AS nvarchar(50))
                                ,CAST('5' AS bigint)
                                ,CAST('0' AS bit)
                                ,CAST('12' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS bigint)
                                ,CAST('Users' AS nvarchar(25))
                                ,CAST('User' AS nvarchar(25))
                                ,CAST('Usuários de sistemas' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('2' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS bigint)
                                ,CAST('SystemsUsers' AS nvarchar(25))
                                ,CAST('SystemUser' AS nvarchar(25))
                                ,CAST('Sistemas x Usuários' AS nvarchar(50))
                                ,CAST('5' AS bigint)
                                ,CAST('0' AS bit)
                                ,CAST('2' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS bigint)
                                ,CAST('Connections' AS nvarchar(25))
                                ,CAST('Connection' AS nvarchar(25))
                                ,CAST('Conexões de bancos-de-dados' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS bigint)
                                ,CAST('Databases' AS nvarchar(25))
                                ,CAST('Database' AS nvarchar(25))
                                ,CAST('Bancos-de-Dados' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS bigint)
                                ,CAST('SystemsDatabases' AS nvarchar(25))
                                ,CAST('SystemDatabase' AS nvarchar(25))
                                ,CAST('Sistemas x Bancos-de-Dados' AS nvarchar(50))
                                ,CAST('5' AS bigint)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS bigint)
                                ,CAST('Tables' AS nvarchar(25))
                                ,CAST('Table' AS nvarchar(25))
                                ,CAST('Tabelas de bancos-de-dados' AS nvarchar(50))
                                ,CAST('10' AS bigint)
                                ,CAST('0' AS bit)
                                ,CAST('19' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS bigint)
                                ,CAST('DatabasesTables' AS nvarchar(25))
                                ,CAST('DatabaseTable' AS nvarchar(25))
                                ,CAST('Bancos-de-Dados x Tabelas' AS nvarchar(50))
                                ,CAST('10' AS bigint)
                                ,CAST('0' AS bit)
                                ,CAST('19' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS bigint)
                                ,CAST('Columns' AS nvarchar(25))
                                ,CAST('Column' AS nvarchar(25))
                                ,CAST('Colunas de tabelas' AS nvarchar(50))
                                ,CAST('12' AS bigint)
                                ,CAST('0' AS bit)
                                ,CAST('144' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS bigint)
                                ,CAST('Indexes' AS nvarchar(25))
                                ,CAST('Index' AS nvarchar(25))
                                ,CAST('Índices de tabelas' AS nvarchar(50))
                                ,CAST('12' AS bigint)
                                ,CAST('0' AS bit)
                                ,CAST('24' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS bigint)
                                ,CAST('Indexkeys' AS nvarchar(25))
                                ,CAST('Indexkey' AS nvarchar(25))
                                ,CAST('Chaves de índices' AS nvarchar(50))
                                ,CAST('15' AS bigint)
                                ,CAST('0' AS bit)
                                ,CAST('36' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS bigint)
                                ,CAST('Logins' AS nvarchar(25))
                                ,CAST('Login' AS nvarchar(25))
                                ,CAST('Logins de acesso aos sistemas' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS bigint)
                                ,CAST('Transactions' AS nvarchar(25))
                                ,CAST('Transaction' AS nvarchar(25))
                                ,CAST('Transações de bancos-de-dados' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Tables] ([Id]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[ParentTableId]
                                ,[IsLegacy]
                                ,[CurrentId]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS bigint)
                                ,CAST('Operations' AS nvarchar(25))
                                ,CAST('Operation' AS nvarchar(25))
                                ,CAST('Operações de transações' AS nvarchar(50))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bigint)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[DatabasesTables]
**********************************************************************************/
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('crudex x Categories' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('crudex x Types' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('3' AS bigint)
                                ,CAST('crudex x Masks' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('crudex x Domains' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('crudex x Systems' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('crudex x Menus' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('crudex x Users' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('8' AS bigint)
                                ,CAST('crudex x SystemsUsers' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('crudex x Connections' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('crudex x Databases' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('11' AS bigint)
                                ,CAST('crudex x SystemsDatabases' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('crudex x Tables' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('13' AS bigint)
                                ,CAST('crudex x DatabasesTables' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('crudex x Columns' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('15' AS bigint)
                                ,CAST('crudex x Indexes' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('16' AS bigint)
                                ,CAST('crudex x Indexkeys' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('crudex x Logins' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('18' AS bigint)
                                ,CAST('crudex x Transactions' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[DatabasesTables] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('crudex x Operations' AS nvarchar(50))
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Columns]
**********************************************************************************/
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('5' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('Id da categoria' AS nvarchar(50))
                                ,CAST('Categoria' AS nvarchar(25))
                                ,CAST('Categoria' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome da categoria' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('19' AS bigint)
                                ,NULL
                                ,CAST('HtmlInputType' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tipo do input HTML' AS nvarchar(50))
                                ,CAST('Tipo input HTML' AS nvarchar(25))
                                ,CAST('Tipo input HTML' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('20' AS bigint)
                                ,NULL
                                ,CAST('HtmlInputAlign' AS nvarchar(25))
                                ,NULL
                                ,CAST('Alinhamento do input HTML' AS nvarchar(50))
                                ,CAST('Alinhamento input HTML' AS nvarchar(25))
                                ,CAST('Alinhamento input HTML' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskEncrypted' AS nvarchar(25))
                                ,NULL
                                ,CAST('Categoria de tipo pede criptografia?' AS nvarchar(50))
                                ,CAST('Pede criptografia?' AS nvarchar(25))
                                ,CAST('Pede criptografia?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskMask' AS nvarchar(25))
                                ,NULL
                                ,CAST('Categoria de tipo pede máscara?' AS nvarchar(50))
                                ,CAST('Pede máscara?' AS nvarchar(25))
                                ,CAST('Pede máscara?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskListable' AS nvarchar(25))
                                ,NULL
                                ,CAST('Categoria de tipo pede listável?' AS nvarchar(50))
                                ,CAST('Pede listável?' AS nvarchar(25))
                                ,CAST('Pede listável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('40' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskDefault' AS nvarchar(25))
                                ,NULL
                                ,CAST('Categoria de tipo pede valor padrão?' AS nvarchar(50))
                                ,CAST('Pede valor padrão?' AS nvarchar(25))
                                ,CAST('Pede valor padrão?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('45' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskMinimum' AS nvarchar(25))
                                ,NULL
                                ,CAST('Categoria de tipo pede valor mínimo?' AS nvarchar(50))
                                ,CAST('Pede valor mínimo?' AS nvarchar(25))
                                ,CAST('Pede valor mínimo?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('50' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskMaximum' AS nvarchar(25))
                                ,NULL
                                ,CAST('Categoria de tipo pede valor máximo?' AS nvarchar(50))
                                ,CAST('Pede valor máximo?' AS nvarchar(25))
                                ,CAST('Pede valor máximo?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('55' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskInWords' AS nvarchar(25))
                                ,NULL
                                ,CAST('Categoria de tipo pede extenso?' AS nvarchar(50))
                                ,CAST('Pede extenso?' AS nvarchar(25))
                                ,CAST('Pede extenso?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('5' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do tipo' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('5' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('CategoryId' AS nvarchar(25))
                                ,NULL
                                ,CAST('Categoria do tipo' AS nvarchar(50))
                                ,CAST('Categoria' AS nvarchar(25))
                                ,CAST('Categoria' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome do tipo' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('2' AS bigint)
                                ,NULL
                                ,CAST('MaxLength' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tamanho máximo' AS nvarchar(50))
                                ,CAST('Tamanho máximo' AS nvarchar(25))
                                ,CAST('Tamanho máximo' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('17' AS bigint)
                                ,NULL
                                ,CAST('Minimum' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valor mínimo do tipo' AS nvarchar(50))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('17' AS bigint)
                                ,NULL
                                ,CAST('Maximum' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valor máximo do tipo' AS nvarchar(50))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskLength' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tipo pede tamanho?' AS nvarchar(50))
                                ,CAST('Pede Tamanho?' AS nvarchar(25))
                                ,CAST('Pede Tamanho?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('40' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskDecimals' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tipo pede decimais?' AS nvarchar(50))
                                ,CAST('Pede decimais?' AS nvarchar(25))
                                ,CAST('Pede decimais?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('45' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskPrimarykey' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tipo pede chave-primária?' AS nvarchar(50))
                                ,CAST('Pede chave-primária?' AS nvarchar(25))
                                ,CAST('Pede chave-primária?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('50' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskAutoincrement' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tipo pede autoincremento?' AS nvarchar(50))
                                ,CAST('Pede autoincremento?' AS nvarchar(25))
                                ,CAST('Pede autoincremento?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('22' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('55' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskFilterable' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tipo pede filtrável?' AS nvarchar(50))
                                ,CAST('Pede filtrável?' AS nvarchar(25))
                                ,CAST('Pede filtrável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('23' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('60' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskGridable' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tipo pede exibível em grade?' AS nvarchar(50))
                                ,CAST('Pede exibível em grade?' AS nvarchar(25))
                                ,CAST('Pede exibível em grade?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('24' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('65' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('AskCodification' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tipo pede codificação?' AS nvarchar(50))
                                ,CAST('Pede codificação?' AS nvarchar(25))
                                ,CAST('Pede codificação?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('25' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('70' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsActive' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tipo é ativo?' AS nvarchar(50))
                                ,CAST('É ativo?' AS nvarchar(25))
                                ,CAST('É ativo?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('26' AS bigint)
                                ,CAST('3' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da máscara de edição' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('27' AS bigint)
                                ,CAST('3' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome da máscara' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('28' AS bigint)
                                ,CAST('3' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('12' AS bigint)
                                ,NULL
                                ,CAST('Mask' AS nvarchar(25))
                                ,NULL
                                ,CAST('Máscara de edição' AS nvarchar(50))
                                ,CAST('Máscara' AS nvarchar(25))
                                ,CAST('Máscara' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('29' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do domínio' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('30' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('5' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('TypeId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do tipo do domínio' AS nvarchar(50))
                                ,CAST('Tipo' AS nvarchar(25))
                                ,CAST('Tipo' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('31' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('3' AS bigint)
                                ,CAST('MaskId' AS nvarchar(25))
                                ,NULL
                                ,CAST('Id da máscara de edição do domínio' AS nvarchar(50))
                                ,CAST('Máscara' AS nvarchar(25))
                                ,CAST('Máscara' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('32' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome do domínio' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('33' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('4' AS bigint)
                                ,NULL
                                ,CAST('Length' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tamanho do domínio' AS nvarchar(50))
                                ,CAST('Tamanho' AS nvarchar(25))
                                ,CAST('Tamanho' AS nvarchar(25))
                                ,NULL
                                ,CAST('0' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('34' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('5' AS bigint)
                                ,NULL
                                ,CAST('Decimals' AS nvarchar(25))
                                ,NULL
                                ,CAST('Decimais do domínio' AS nvarchar(50))
                                ,CAST('Decimais' AS nvarchar(25))
                                ,CAST('Decimais' AS nvarchar(25))
                                ,NULL
                                ,CAST('0' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('35' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('12' AS bigint)
                                ,NULL
                                ,CAST('ValidValues' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valores válidos' AS nvarchar(50))
                                ,CAST('Valores válidos' AS nvarchar(25))
                                ,CAST('Valores válidos' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('36' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('40' AS smallint)
                                ,CAST('17' AS bigint)
                                ,NULL
                                ,CAST('Default' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valor padrão do domínio' AS nvarchar(50))
                                ,CAST('Padrão' AS nvarchar(25))
                                ,CAST('Padrão' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('37' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('45' AS smallint)
                                ,CAST('17' AS bigint)
                                ,NULL
                                ,CAST('Minimum' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valor mínimo do domínio' AS nvarchar(50))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('38' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('50' AS smallint)
                                ,CAST('17' AS bigint)
                                ,NULL
                                ,CAST('Maximum' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valor máximo do domínio' AS nvarchar(50))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('39' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('55' AS smallint)
                                ,CAST('18' AS bigint)
                                ,NULL
                                ,CAST('Codification' AS nvarchar(25))
                                ,NULL
                                ,CAST('Codificação do domínio' AS nvarchar(50))
                                ,CAST('Codificação' AS nvarchar(25))
                                ,CAST('Codificação' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('40' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do sistema' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('41' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome do sistema' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('42' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,NULL
                                ,CAST('Descrição do sistema' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('43' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('7' AS bigint)
                                ,NULL
                                ,CAST('ClientName' AS nvarchar(25))
                                ,NULL
                                ,CAST('Cliente do sistema' AS nvarchar(50))
                                ,CAST('Cliente' AS nvarchar(25))
                                ,CAST('Cliente' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('44' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('5' AS bigint)
                                ,NULL
                                ,CAST('MaxRetryLogins' AS nvarchar(25))
                                ,NULL
                                ,CAST('Máximo de tentativas de logins' AS nvarchar(50))
                                ,CAST('Máximo de logins' AS nvarchar(25))
                                ,CAST('Máximo de logins' AS nvarchar(25))
                                ,CAST('5' AS nvarchar(max))
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('45' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsOffAir' AS nvarchar(25))
                                ,NULL
                                ,CAST('Sistema fora-do-ar' AS nvarchar(50))
                                ,CAST('Fora-do-ar' AS nvarchar(25))
                                ,CAST('Fora-do-ar' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('46' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do menu' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('47' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('SystemId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do sistema do menu' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('48' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('4' AS bigint)
                                ,NULL
                                ,CAST('Sequence' AS nvarchar(25))
                                ,NULL
                                ,CAST('Sequência do menu' AS nvarchar(50))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('49' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('8' AS bigint)
                                ,NULL
                                ,CAST('Caption' AS nvarchar(25))
                                ,NULL
                                ,CAST('Opção do menu' AS nvarchar(50))
                                ,CAST('Opção' AS nvarchar(25))
                                ,CAST('Opção' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('50' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Message' AS nvarchar(25))
                                ,NULL
                                ,CAST('Mensagem do menu' AS nvarchar(50))
                                ,CAST('Mensagem' AS nvarchar(25))
                                ,CAST('Mensagem' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('51' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Action' AS nvarchar(25))
                                ,NULL
                                ,CAST('Ação do menu' AS nvarchar(50))
                                ,CAST('Ação' AS nvarchar(25))
                                ,CAST('Ação' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('52' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('ParentMenuId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do menu-pai' AS nvarchar(50))
                                ,CAST('Menu-pai' AS nvarchar(25))
                                ,CAST('Menu-pai' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('53' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do usuário' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('54' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome do usuário' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('55' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('11' AS bigint)
                                ,NULL
                                ,CAST('Password' AS nvarchar(25))
                                ,NULL
                                ,CAST('Senha do usuário' AS nvarchar(50))
                                ,CAST('Senha' AS nvarchar(25))
                                ,CAST('Senha' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('56' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('FullName' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome completo do usuário' AS nvarchar(50))
                                ,CAST('Nome completo' AS nvarchar(25))
                                ,CAST('Nome completo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('57' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('5' AS bigint)
                                ,NULL
                                ,CAST('RetryLogins' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tentativas de login' AS nvarchar(50))
                                ,CAST('Tentativas de login' AS nvarchar(25))
                                ,CAST('Tentativas de login' AS nvarchar(25))
                                ,CAST('0' AS nvarchar(max))
                                ,CAST('0' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('58' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsActive' AS nvarchar(25))
                                ,NULL
                                ,CAST('Ativo?' AS nvarchar(50))
                                ,CAST('Ativo?' AS nvarchar(25))
                                ,CAST('Ativo?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('59' AS bigint)
                                ,CAST('8' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do sistema x usuário' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('60' AS bigint)
                                ,CAST('8' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('SystemId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do sistema' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('61' AS bigint)
                                ,CAST('8' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('UserId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do usuário' AS nvarchar(50))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('62' AS bigint)
                                ,CAST('8' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome do sistema x usuário' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('63' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID de conexões' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('64' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Provider' AS nvarchar(25))
                                ,NULL
                                ,CAST('Provedor OleDb ' AS nvarchar(50))
                                ,CAST('Provedor' AS nvarchar(25))
                                ,CAST('Provedor' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('65' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('HostName' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome da Hospedagem' AS nvarchar(50))
                                ,CAST('Hospedagem' AS nvarchar(25))
                                ,CAST('Hospedagem' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('66' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('3' AS bigint)
                                ,NULL
                                ,CAST('Port' AS nvarchar(25))
                                ,NULL
                                ,CAST('Porta TCP/IP' AS nvarchar(50))
                                ,CAST('Porta' AS nvarchar(25))
                                ,CAST('Porta' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('67' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IntegratedSecurity' AS nvarchar(25))
                                ,NULL
                                ,CAST('Segurança integrada?' AS nvarchar(50))
                                ,CAST('Segurança integrada?' AS nvarchar(25))
                                ,CAST('Segurança integrada?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('68' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('4' AS bigint)
                                ,NULL
                                ,CAST('ConnectionTimeout' AS nvarchar(25))
                                ,NULL
                                ,CAST('Timeout de conexão' AS nvarchar(50))
                                ,CAST('Timeout' AS nvarchar(25))
                                ,CAST('Timeout' AS nvarchar(25))
                                ,NULL
                                ,CAST('0' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('69' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('12' AS bigint)
                                ,NULL
                                ,CAST('ExtendedProperties' AS nvarchar(25))
                                ,NULL
                                ,CAST('Propriedades extendidas' AS nvarchar(50))
                                ,CAST('Propriedades' AS nvarchar(25))
                                ,CAST('Propriedades' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('70' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('40' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('UserID' AS nvarchar(25))
                                ,NULL
                                ,CAST('Usuário ID' AS nvarchar(50))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('71' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('45' AS smallint)
                                ,CAST('11' AS bigint)
                                ,NULL
                                ,CAST('Password' AS nvarchar(25))
                                ,NULL
                                ,CAST('Senha do usuário' AS nvarchar(50))
                                ,CAST('Senha' AS nvarchar(25))
                                ,CAST('Senha' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('72' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('50' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('PersistSecurityInfo' AS nvarchar(25))
                                ,NULL
                                ,CAST('Persiste informação de segurança?' AS nvarchar(50))
                                ,CAST('Persiste info?' AS nvarchar(25))
                                ,CAST('Persiste info?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('73' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('55' AS smallint)
                                ,CAST('12' AS bigint)
                                ,NULL
                                ,CAST('AdditionalParameters' AS nvarchar(25))
                                ,NULL
                                ,CAST('Parâmetros adicionais' AS nvarchar(50))
                                ,CAST('Parâmetros' AS nvarchar(25))
                                ,CAST('Parâmetros' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('74' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do banco-de-dados' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('75' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('ConnectionId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da conexão' AS nvarchar(50))
                                ,CAST('Conexão' AS nvarchar(25))
                                ,CAST('Conexão' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('76' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome do banco-de-dados' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('77' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Alias' AS nvarchar(25))
                                ,NULL
                                ,CAST('Alias  do banco-de-dados' AS nvarchar(50))
                                ,CAST('Alias' AS nvarchar(25))
                                ,CAST('Alias' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('78' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,NULL
                                ,CAST('Descrição do banco-de-dados' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('79' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('11' AS bigint)
                                ,NULL
                                ,CAST('Folder' AS nvarchar(25))
                                ,NULL
                                ,CAST('Pasta diretório do banco-de-dados' AS nvarchar(50))
                                ,CAST('Pasta' AS nvarchar(25))
                                ,CAST('Pasta' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('80' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsLegacy' AS nvarchar(25))
                                ,NULL
                                ,CAST('É banco-de-dados legado?' AS nvarchar(50))
                                ,CAST('Legado?' AS nvarchar(25))
                                ,CAST('Legado?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('81' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('40' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('CurrentOperationId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da Operação atual' AS nvarchar(50))
                                ,CAST('Operação atual' AS nvarchar(25))
                                ,CAST('Operação atual' AS nvarchar(25))
                                ,CAST('0' AS nvarchar(max))
                                ,CAST('0' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('82' AS bigint)
                                ,CAST('11' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do sistema x banco-de-dados' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('83' AS bigint)
                                ,CAST('11' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('SystemId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do sistema' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('84' AS bigint)
                                ,CAST('11' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('DatabaseId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do banco-de-dados' AS nvarchar(50))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('85' AS bigint)
                                ,CAST('11' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome do sistema x banco-de-dados' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('86' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da tabela' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('87' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome da tabela' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('88' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Alias' AS nvarchar(25))
                                ,NULL
                                ,CAST('Alias da tabela' AS nvarchar(50))
                                ,CAST('Alias' AS nvarchar(25))
                                ,CAST('Alias' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('89' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,NULL
                                ,CAST('Descrição da tabela' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('90' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('ParentTableId' AS nvarchar(25))
                                ,NULL
                                ,CAST('Id da tabela-pai' AS nvarchar(50))
                                ,CAST('Tabela-pai' AS nvarchar(25))
                                ,CAST('Tabela-pai' AS nvarchar(25))
                                ,NULL
                                ,CAST('0' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('91' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsLegacy' AS nvarchar(25))
                                ,NULL
                                ,CAST('É tabela legada?' AS nvarchar(50))
                                ,CAST('Legada?' AS nvarchar(25))
                                ,CAST('Legada?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('92' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('CurrentId' AS nvarchar(25))
                                ,NULL
                                ,CAST('Id atual' AS nvarchar(50))
                                ,CAST('Id atual' AS nvarchar(25))
                                ,CAST('Id atual' AS nvarchar(25))
                                ,CAST('0' AS nvarchar(max))
                                ,CAST('0' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('93' AS bigint)
                                ,CAST('13' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do banco-de-dados x tabela' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('94' AS bigint)
                                ,CAST('13' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('DatabaseId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do banco-de-dados' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('95' AS bigint)
                                ,CAST('13' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('TableId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da tabela' AS nvarchar(50))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('96' AS bigint)
                                ,CAST('13' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome do banco-de-dados x tabela' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('97' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da coluna' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('98' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('TableId' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tabela' AS nvarchar(50))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('99' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('4' AS bigint)
                                ,NULL
                                ,CAST('Sequence' AS nvarchar(25))
                                ,NULL
                                ,CAST('Sequência' AS nvarchar(50))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('100' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('DomainId' AS nvarchar(25))
                                ,NULL
                                ,CAST('Domínio da coluna' AS nvarchar(50))
                                ,CAST('Domínio' AS nvarchar(25))
                                ,CAST('Domínio' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('101' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('ReferenceTableId' AS nvarchar(25))
                                ,NULL
                                ,CAST('Tabela-referência' AS nvarchar(50))
                                ,CAST('Referência' AS nvarchar(25))
                                ,CAST('Referência' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('102' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome da coluna' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('103' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Alias' AS nvarchar(25))
                                ,NULL
                                ,CAST('Alias da coluna' AS nvarchar(50))
                                ,CAST('Alias' AS nvarchar(25))
                                ,CAST('Alias' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('104' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('40' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Description' AS nvarchar(25))
                                ,NULL
                                ,CAST('Descrição da Coluna' AS nvarchar(50))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,CAST('Descrição' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('105' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('45' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Title' AS nvarchar(25))
                                ,NULL
                                ,CAST('Título da Coluna' AS nvarchar(50))
                                ,CAST('Título' AS nvarchar(25))
                                ,CAST('Título' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('106' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('50' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('Caption' AS nvarchar(25))
                                ,NULL
                                ,CAST('Legenda da Coluna' AS nvarchar(50))
                                ,CAST('Legenda' AS nvarchar(25))
                                ,CAST('Legenda' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('107' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('55' AS smallint)
                                ,CAST('17' AS bigint)
                                ,NULL
                                ,CAST('Default' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valor padrão da coluna' AS nvarchar(50))
                                ,CAST('Padrão' AS nvarchar(25))
                                ,CAST('Padrão' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('108' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('60' AS smallint)
                                ,CAST('17' AS bigint)
                                ,NULL
                                ,CAST('Minimum' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valor mínimo da coluna' AS nvarchar(50))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,CAST('Mínimo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('109' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('65' AS smallint)
                                ,CAST('17' AS bigint)
                                ,NULL
                                ,CAST('Maximum' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valor máximo da coluna' AS nvarchar(50))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,CAST('Máximo' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('110' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('70' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsPrimarykey' AS nvarchar(25))
                                ,NULL
                                ,CAST('Coluna é chave-primária?' AS nvarchar(50))
                                ,CAST('Chave-primária?' AS nvarchar(25))
                                ,CAST('Chave-primária?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('111' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('75' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsAutoIncrement' AS nvarchar(25))
                                ,NULL
                                ,CAST('Coluna é autoincremento?' AS nvarchar(50))
                                ,CAST('Autoincremento?' AS nvarchar(25))
                                ,CAST('Autoincremento?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('112' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('80' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsRequired' AS nvarchar(25))
                                ,NULL
                                ,CAST('Coluna é requerida?' AS nvarchar(50))
                                ,CAST('Requerida?' AS nvarchar(25))
                                ,CAST('Requerida?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('113' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('85' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsListable' AS nvarchar(25))
                                ,NULL
                                ,CAST('Coluna é listável?' AS nvarchar(50))
                                ,CAST('Listável?' AS nvarchar(25))
                                ,CAST('Listável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('114' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('90' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsFilterable' AS nvarchar(25))
                                ,NULL
                                ,CAST('Coluna é filtrável?' AS nvarchar(50))
                                ,CAST('Filtrável?' AS nvarchar(25))
                                ,CAST('Filtrável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('115' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('95' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsEditable' AS nvarchar(25))
                                ,NULL
                                ,CAST('Coluna é editável?' AS nvarchar(50))
                                ,CAST('Editável?' AS nvarchar(25))
                                ,CAST('Editável?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('116' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('100' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsGridable' AS nvarchar(25))
                                ,NULL
                                ,CAST('Coluna é exibível em grade?' AS nvarchar(50))
                                ,CAST('Exibível em grade?' AS nvarchar(25))
                                ,CAST('Exibível em grade?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('117' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('105' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsEncrypted' AS nvarchar(25))
                                ,NULL
                                ,CAST('Coluna é encriptada?' AS nvarchar(50))
                                ,CAST('Encriptada?' AS nvarchar(25))
                                ,CAST('Encriptada?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('118' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('110' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsInWords' AS nvarchar(25))
                                ,NULL
                                ,CAST('Valor da coluna por extenso?' AS nvarchar(50))
                                ,CAST('Valor por extenso?' AS nvarchar(25))
                                ,CAST('Valor por extenso?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('119' AS bigint)
                                ,CAST('15' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do índice' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('120' AS bigint)
                                ,CAST('15' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('DatabaseId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do banco-de-dados do índice' AS nvarchar(50))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,CAST('Banco-de-dados' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('121' AS bigint)
                                ,CAST('15' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('TableId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da tabela do índice' AS nvarchar(50))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('122' AS bigint)
                                ,CAST('15' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('10' AS bigint)
                                ,NULL
                                ,CAST('Name' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome do índice' AS nvarchar(50))
                                ,CAST('Nome' AS nvarchar(25))
                                ,CAST('Nome' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('123' AS bigint)
                                ,CAST('15' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsUnique' AS nvarchar(25))
                                ,NULL
                                ,CAST('É índice único?' AS nvarchar(50))
                                ,CAST('É único?' AS nvarchar(25))
                                ,CAST('É único?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('124' AS bigint)
                                ,CAST('16' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da chave de índice' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('125' AS bigint)
                                ,CAST('16' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('15' AS bigint)
                                ,CAST('IndexId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do índice da chave' AS nvarchar(50))
                                ,CAST('Índice' AS nvarchar(25))
                                ,CAST('Índice' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('126' AS bigint)
                                ,CAST('16' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('4' AS bigint)
                                ,NULL
                                ,CAST('Sequence' AS nvarchar(25))
                                ,NULL
                                ,CAST('Sequência da chave' AS nvarchar(50))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,CAST('Sequência' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('127' AS bigint)
                                ,CAST('16' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('ColumnId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da coluna-chave do índice' AS nvarchar(50))
                                ,CAST('Coluna' AS nvarchar(25))
                                ,CAST('Coluna' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('128' AS bigint)
                                ,CAST('16' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsDescending' AS nvarchar(25))
                                ,NULL
                                ,CAST('Ordem descedente da chave?' AS nvarchar(50))
                                ,CAST('Descendente?' AS nvarchar(25))
                                ,CAST('Descendente?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('129' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do Login de Acesso' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('130' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('SystemId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do Sistema' AS nvarchar(50))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,CAST('Sistema' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('131' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('UserId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID do usuário' AS nvarchar(50))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,CAST('Usuário' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('132' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('11' AS bigint)
                                ,NULL
                                ,CAST('PublicKey' AS nvarchar(25))
                                ,NULL
                                ,CAST('Chave pública do usuário' AS nvarchar(50))
                                ,CAST('Chave pública' AS nvarchar(25))
                                ,CAST('Chave pública' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('133' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsLogged' AS nvarchar(25))
                                ,NULL
                                ,CAST('Logado?' AS nvarchar(50))
                                ,CAST('Logado?' AS nvarchar(25))
                                ,CAST('Logado?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('134' AS bigint)
                                ,CAST('18' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da transação' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('135' AS bigint)
                                ,CAST('18' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('LoginId' AS nvarchar(25))
                                ,NULL
                                ,CAST('Login do usuário' AS nvarchar(50))
                                ,CAST('Login' AS nvarchar(25))
                                ,CAST('Login' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('136' AS bigint)
                                ,CAST('18' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsConfirmed' AS nvarchar(25))
                                ,NULL
                                ,CAST('É confirmado?' AS nvarchar(50))
                                ,CAST('Confirmado?' AS nvarchar(25))
                                ,CAST('Confirmado?' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('137' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('1' AS bigint)
                                ,NULL
                                ,CAST('Id' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da operação' AS nvarchar(50))
                                ,CAST('ID' AS nvarchar(25))
                                ,CAST('ID' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('138' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('18' AS bigint)
                                ,CAST('TransactionId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da transação' AS nvarchar(50))
                                ,CAST('Transação' AS nvarchar(25))
                                ,CAST('Transação' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('139' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('9' AS bigint)
                                ,NULL
                                ,CAST('TableName' AS nvarchar(25))
                                ,NULL
                                ,CAST('Nome da tabela' AS nvarchar(50))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,CAST('Tabela' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('140' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('20' AS smallint)
                                ,CAST('1' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('ParentOperationId' AS nvarchar(25))
                                ,NULL
                                ,CAST('ID da operação-pai' AS nvarchar(50))
                                ,CAST('Operação-pai' AS nvarchar(25))
                                ,CAST('Operação-pai' AS nvarchar(25))
                                ,NULL
                                ,CAST('1' AS nvarchar(max))
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('141' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('25' AS smallint)
                                ,CAST('21' AS bigint)
                                ,NULL
                                ,CAST('Action' AS nvarchar(25))
                                ,NULL
                                ,CAST('Ação da operação' AS nvarchar(50))
                                ,CAST('Ação' AS nvarchar(25))
                                ,CAST('Ação' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('142' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('30' AS smallint)
                                ,CAST('12' AS bigint)
                                ,NULL
                                ,CAST('OriginalRecord' AS nvarchar(25))
                                ,NULL
                                ,CAST('Registro original' AS nvarchar(50))
                                ,CAST('Registro original' AS nvarchar(25))
                                ,CAST('Registro original' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('143' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('35' AS smallint)
                                ,CAST('12' AS bigint)
                                ,NULL
                                ,CAST('ActualRecord' AS nvarchar(25))
                                ,NULL
                                ,CAST('Registro atual' AS nvarchar(50))
                                ,CAST('Registro atual' AS nvarchar(25))
                                ,CAST('Registro atual' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('1' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Columns] ([Id]
                                ,[TableId]
                                ,[Sequence]
                                ,[DomainId]
                                ,[ReferenceTableId]
                                ,[Name]
                                ,[Alias]
                                ,[Description]
                                ,[Title]
                                ,[Caption]
                                ,[Default]
                                ,[Minimum]
                                ,[Maximum]
                                ,[IsPrimarykey]
                                ,[IsAutoIncrement]
                                ,[IsRequired]
                                ,[IsListable]
                                ,[IsFilterable]
                                ,[IsEditable]
                                ,[IsGridable]
                                ,[IsEncrypted]
                                ,[IsInWords]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('144' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('40' AS smallint)
                                ,CAST('6' AS bigint)
                                ,NULL
                                ,CAST('IsConfirmed' AS nvarchar(25))
                                ,NULL
                                ,CAST('É confirmado?' AS nvarchar(50))
                                ,CAST('Confirmado?' AS nvarchar(25))
                                ,CAST('Confirmado?' AS nvarchar(25))
                                ,NULL
                                ,NULL
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,NULL
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,CAST('0' AS bit)
                                ,NULL
                                ,NULL
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Indexes]
**********************************************************************************/
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('UNQ_Categories_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('UNQ_Types_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('3' AS bigint)
                                ,CAST('UNQ_Masks_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('UNQ_Domains_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('UNQ_Systems_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('UNQ_Menus_SystemId_Sequence' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('UNQ_Menus_SystemId_Caption' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('UNQ_Users_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('8' AS bigint)
                                ,CAST('UNQ_SystemsUsers_SystemId_UserId' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('8' AS bigint)
                                ,CAST('UNQ_SystemsUsers_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('UNQ_Databases_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('UNQ_Databases_Alias' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('11' AS bigint)
                                ,CAST('UNQ_SystemsDatabases_SystemId_DatabaseId' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('11' AS bigint)
                                ,CAST('UNQ_SystemsDatabases_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('UNQ_Tables_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('UNQ_Tables_Alias' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('13' AS bigint)
                                ,CAST('UNQ_DatabasesTables_DatabaseId_TableId' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('13' AS bigint)
                                ,CAST('UNQ_DatabasesTables_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('UNQ_Columns_TableId_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('UNQ_Columns_TableId_Sequence' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('15' AS bigint)
                                ,CAST('UNQ_Indexes_DatabaseId_Name' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('22' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('16' AS bigint)
                                ,CAST('UNQ_Indexkeys_IndexId_Sequence' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('23' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('16' AS bigint)
                                ,CAST('UNQ_Indexkeys_IndexId_ColumnId' AS nvarchar(50))
                                ,CAST('1' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexes] ([Id]
                                ,[DatabaseId]
                                ,[TableId]
                                ,[Name]
                                ,[IsUnique]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('24' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('UNQ_Logins_SystemId_UserId_IsLogged' AS nvarchar(50))
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO

/**********************************************************************************
Inserir dados na tabela [dbo].[Indexkeys]
**********************************************************************************/
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('1' AS bigint)
                                ,CAST('1' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('2' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('2' AS bigint)
                                ,CAST('2' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('14' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('3' AS bigint)
                                ,CAST('3' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('27' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('4' AS bigint)
                                ,CAST('4' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('32' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('5' AS bigint)
                                ,CAST('5' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('41' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('6' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('47' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('7' AS bigint)
                                ,CAST('6' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('48' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('8' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('47' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('9' AS bigint)
                                ,CAST('7' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('49' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('10' AS bigint)
                                ,CAST('8' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('54' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('11' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('60' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('12' AS bigint)
                                ,CAST('9' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('61' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('13' AS bigint)
                                ,CAST('10' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('62' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('14' AS bigint)
                                ,CAST('11' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('76' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('15' AS bigint)
                                ,CAST('12' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('77' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('16' AS bigint)
                                ,CAST('13' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('83' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('17' AS bigint)
                                ,CAST('13' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('84' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('18' AS bigint)
                                ,CAST('14' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('85' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('19' AS bigint)
                                ,CAST('15' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('87' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('20' AS bigint)
                                ,CAST('16' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('88' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('21' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('94' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('22' AS bigint)
                                ,CAST('17' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('95' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('23' AS bigint)
                                ,CAST('18' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('96' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('24' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('98' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('25' AS bigint)
                                ,CAST('19' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('102' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('26' AS bigint)
                                ,CAST('20' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('98' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('27' AS bigint)
                                ,CAST('20' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('99' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('28' AS bigint)
                                ,CAST('21' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('120' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('29' AS bigint)
                                ,CAST('21' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('122' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('30' AS bigint)
                                ,CAST('22' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('125' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('31' AS bigint)
                                ,CAST('22' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('126' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('32' AS bigint)
                                ,CAST('23' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('125' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('33' AS bigint)
                                ,CAST('23' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('127' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('34' AS bigint)
                                ,CAST('24' AS bigint)
                                ,CAST('5' AS smallint)
                                ,CAST('130' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('35' AS bigint)
                                ,CAST('24' AS bigint)
                                ,CAST('10' AS smallint)
                                ,CAST('131' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO
INSERT INTO [dbo].[Indexkeys] ([Id]
                                ,[IndexId]
                                ,[Sequence]
                                ,[ColumnId]
                                ,[IsDescending]
                                ,[CreatedAt]
                                ,[CreatedBy]
                                ,[UpdatedAt]
                                ,[UpdatedBy])
                         VALUES (CAST('36' AS bigint)
                                ,CAST('24' AS bigint)
                                ,CAST('15' AS smallint)
                                ,CAST('133' AS bigint)
                                ,CAST('0' AS bit)
                                ,GETDATE()
                                ,'admnistrator'
                                ,NULL
                                ,NULL)
GO




/**********************************************************************************
Criar stored procedure [dbo].[CategoryValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[CategoryValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[CategoryValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[CategoryValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS tinyint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Categories', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Categories', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'tinyint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputType'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.HtmlInputType'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputAlign'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.HtmlInputAlign'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskEncrypted'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskEncrypted'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskMask'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskMask'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskListable'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskListable'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskDefault'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskDefault'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskMinimum'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskMinimum'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskMaximum'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskMaximum'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskInWords'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskInWords'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Categories]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [crudex].[IS_EQUAL]([HtmlInputType], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.HtmlInputType'), 'nvarchar') = 1
                                  AND [crudex].[IS_EQUAL]([HtmlInputAlign], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.HtmlInputAlign'), 'nvarchar') = 1
                                  AND [AskEncrypted] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskEncrypted')
                                  AND [AskMask] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskMask')
                                  AND [AskListable] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskListable')
                                  AND [AskDefault] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskDefault')
                                  AND [AskMinimum] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskMinimum')
                                  AND [AskMaximum] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskMaximum')
                                  AND [AskInWords] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskInWords'))
                THROW 51000, 'Registro de Categories alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Types] WHERE [CategoryId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Types', 1
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_HtmlInputType nvarchar(10) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputType') AS nvarchar(10))
                   ,@W_HtmlInputAlign nvarchar(6) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputAlign') AS nvarchar(6))
                   ,@W_AskEncrypted bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskEncrypted') AS bit)
                   ,@W_AskMask bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskMask') AS bit)
                   ,@W_AskListable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskListable') AS bit)
                   ,@W_AskDefault bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskDefault') AS bit)
                   ,@W_AskMinimum bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskMinimum') AS bit)
                   ,@W_AskMaximum bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskMaximum') AS bit)
                   ,@W_AskInWords bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskInWords') AS bit)

            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_AskEncrypted IS NULL
                THROW 51000, 'Valor de AskEncrypted em @ActualRecord é requerido.', 1
            IF @W_AskMask IS NULL
                THROW 51000, 'Valor de AskMask em @ActualRecord é requerido.', 1
            IF @W_AskListable IS NULL
                THROW 51000, 'Valor de AskListable em @ActualRecord é requerido.', 1
            IF @W_AskDefault IS NULL
                THROW 51000, 'Valor de AskDefault em @ActualRecord é requerido.', 1
            IF @W_AskMinimum IS NULL
                THROW 51000, 'Valor de AskMinimum em @ActualRecord é requerido.', 1
            IF @W_AskMaximum IS NULL
                THROW 51000, 'Valor de AskMaximum em @ActualRecord é requerido.', 1
            IF @W_AskInWords IS NULL
                THROW 51000, 'Valor de AskInWords em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Categories] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Categories_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Categories] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Categories_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[CategoryPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[CategoryPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[CategoryPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[CategoryPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[CategoryValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS tinyint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Categories'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[CategoryValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[CategoryCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[CategoryCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[CategoryCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[CategoryCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Categories'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[CategoryValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Categories] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_HtmlInputType nvarchar(10) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputType') AS nvarchar(10))
                   ,@W_HtmlInputAlign nvarchar(6) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.HtmlInputAlign') AS nvarchar(6))
                   ,@W_AskEncrypted bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskEncrypted') AS bit)
                   ,@W_AskMask bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskMask') AS bit)
                   ,@W_AskListable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskListable') AS bit)
                   ,@W_AskDefault bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskDefault') AS bit)
                   ,@W_AskMinimum bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskMinimum') AS bit)
                   ,@W_AskMaximum bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskMaximum') AS bit)
                   ,@W_AskInWords bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskInWords') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Categories] ([Id]
                                                ,[Name]
                                                ,[HtmlInputType]
                                                ,[HtmlInputAlign]
                                                ,[AskEncrypted]
                                                ,[AskMask]
                                                ,[AskListable]
                                                ,[AskDefault]
                                                ,[AskMinimum]
                                                ,[AskMaximum]
                                                ,[AskInWords]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_HtmlInputType
                                                 ,@W_HtmlInputAlign
                                                 ,@W_AskEncrypted
                                                 ,@W_AskMask
                                                 ,@W_AskListable
                                                 ,@W_AskDefault
                                                 ,@W_AskMinimum
                                                 ,@W_AskMaximum
                                                 ,@W_AskInWords
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Categories] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[HtmlInputType] = @W_HtmlInputType
                                              ,[HtmlInputAlign] = @W_HtmlInputAlign
                                              ,[AskEncrypted] = @W_AskEncrypted
                                              ,[AskMask] = @W_AskMask
                                              ,[AskListable] = @W_AskListable
                                              ,[AskDefault] = @W_AskDefault
                                              ,[AskMinimum] = @W_AskMinimum
                                              ,[AskMaximum] = @W_AskMaximum
                                              ,[AskInWords] = @W_AskInWords
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[CategoriesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[CategoriesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[CategoriesRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[CategoriesRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Categories') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS tinyint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.HtmlInputType') AS nvarchar(10)) AS [HtmlInputType]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.HtmlInputAlign') AS nvarchar(6)) AS [HtmlInputAlign]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskEncrypted') AS bit) AS [AskEncrypted]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskMask') AS bit) AS [AskMask]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskListable') AS bit) AS [AskListable]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskDefault') AS bit) AS [AskDefault]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskMinimum') AS bit) AS [AskMinimum]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskMaximum') AS bit) AS [AskMaximum]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskInWords') AS bit) AS [AskInWords]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Categories'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id tinyint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS tinyint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                   ,@W_AskEncrypted bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskEncrypted') AS bit)
                   ,@W_AskMask bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskMask') AS bit)
                   ,@W_AskListable bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskListable') AS bit)
                   ,@W_AskDefault bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskDefault') AS bit)
                   ,@W_AskMinimum bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskMinimum') AS bit)
                   ,@W_AskMaximum bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskMaximum') AS bit)
                   ,@W_AskInWords bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskInWords') AS bit)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS tinyint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
            IF @W_AskEncrypted IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskEncrypted] = @AskEncrypted'
            END
            IF @W_AskMask IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskMask] = @AskMask'
            END
            IF @W_AskListable IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskListable] = @AskListable'
            END
            IF @W_AskDefault IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskDefault] = @AskDefault'
            END
            IF @W_AskMinimum IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskMinimum] = @AskMinimum'
            END
            IF @W_AskMaximum IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskMaximum] = @AskMaximum'
            END
            IF @W_AskInWords IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskInWords] = @AskInWords'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Categories] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] tinyint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id tinyint
                               ,@Name nvarchar(25)
                               ,@AskEncrypted bit
                               ,@AskMask bit
                               ,@AskListable bit
                               ,@AskDefault bit
                               ,@AskMinimum bit
                               ,@AskMaximum bit
                               ,@AskInWords bit'
                           ,@Id = @W_Id
                           ,@Name = @W_Name
                           ,@AskEncrypted = @W_AskEncrypted
                           ,@AskMask = @W_AskMask
                           ,@AskListable = @W_AskListable
                           ,@AskDefault = @W_AskDefault
                           ,@AskMinimum = @W_AskMinimum
                           ,@AskMaximum = @W_AskMaximum
                           ,@AskInWords = @W_AskInWords
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS tinyint) AS [Id]
                    ,CAST(NULL AS nvarchar(25)) AS [Name]
                    ,CAST(NULL AS nvarchar(10)) AS [HtmlInputType]
                    ,CAST(NULL AS nvarchar(6)) AS [HtmlInputAlign]
                    ,CAST(NULL AS bit) AS [AskEncrypted]
                    ,CAST(NULL AS bit) AS [AskMask]
                    ,CAST(NULL AS bit) AS [AskListable]
                    ,CAST(NULL AS bit) AS [AskDefault]
                    ,CAST(NULL AS bit) AS [AskMinimum]
                    ,CAST(NULL AS bit) AS [AskMaximum]
                    ,CAST(NULL AS bit) AS [AskInWords]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Category'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[Name]
                              ,[T].[HtmlInputType]
                              ,[T].[HtmlInputAlign]
                              ,[T].[AskEncrypted]
                              ,[T].[AskMask]
                              ,[T].[AskListable]
                              ,[T].[AskDefault]
                              ,[T].[AskMinimum]
                              ,[T].[AskMaximum]
                              ,[T].[AskInWords]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Categories] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Category'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[Name]
                                  ,[O].[HtmlInputType]
                                  ,[O].[HtmlInputAlign]
                                  ,[O].[AskEncrypted]
                                  ,[O].[AskMask]
                                  ,[O].[AskListable]
                                  ,[O].[AskDefault]
                                  ,[O].[AskMinimum]
                                  ,[O].[AskMaximum]
                                  ,[O].[AskInWords]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[Name]
              ,[HtmlInputType]
              ,[HtmlInputAlign]
              ,[AskEncrypted]
              ,[AskMask]
              ,[AskListable]
              ,[AskDefault]
              ,[AskMinimum]
              ,[AskMaximum]
              ,[AskInWords]
            FROM [dbo].[#result]
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[CategoriesList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[CategoriesList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[CategoriesList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[CategoriesList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[Categories]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[Categories] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TypeValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TypeValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TypeValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TypeValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS tinyint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Types', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Types', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'tinyint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.CategoryId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.CategoryId'), 'tinyint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.MaxLength'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.MaxLength'), 'int') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Minimum'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Minimum'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Maximum'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Maximum'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskLength'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskLength'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskDecimals'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskDecimals'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskPrimarykey'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskPrimarykey'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskAutoincrement'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskAutoincrement'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskFilterable'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskFilterable'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskGridable'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskGridable'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskCodification'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskCodification'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsActive'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsActive'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Types]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [CategoryId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.CategoryId')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [crudex].[IS_EQUAL]([MaxLength], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.MaxLength'), 'int') = 1
                                  AND [crudex].[IS_EQUAL]([Minimum], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Minimum'), 'nvarchar(max)') = 1
                                  AND [crudex].[IS_EQUAL]([Maximum], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Maximum'), 'nvarchar(max)') = 1
                                  AND [AskLength] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskLength')
                                  AND [AskDecimals] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskDecimals')
                                  AND [AskPrimarykey] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskPrimarykey')
                                  AND [AskAutoincrement] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskAutoincrement')
                                  AND [AskFilterable] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskFilterable')
                                  AND [AskGridable] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskGridable')
                                  AND [AskCodification] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AskCodification')
                                  AND [IsActive] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsActive'))
                THROW 51000, 'Registro de Types alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [TypeId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Domains', 1
        END ELSE BEGIN

            DECLARE @W_CategoryId tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.CategoryId') AS tinyint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_MaxLength int = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.MaxLength') AS int)
                   ,@W_Minimum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(max))
                   ,@W_Maximum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(max))
                   ,@W_AskLength bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskLength') AS bit)
                   ,@W_AskDecimals bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskDecimals') AS bit)
                   ,@W_AskPrimarykey bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskPrimarykey') AS bit)
                   ,@W_AskAutoincrement bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskAutoincrement') AS bit)
                   ,@W_AskFilterable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskFilterable') AS bit)
                   ,@W_AskGridable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskGridable') AS bit)
                   ,@W_AskCodification bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskCodification') AS bit)
                   ,@W_IsActive bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsActive') AS bit)

            IF @W_CategoryId IS NULL
                THROW 51000, 'Valor de CategoryId em @ActualRecord é requerido.', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Categories] WHERE [Id] = @W_CategoryId)
                THROW 51000, 'Valor de CategoryId em @ActualRecord inexiste em Categories', 1
            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_MaxLength IS NOT NULL AND @W_MaxLength < CAST('1' AS int)
                THROW 51000, 'Valor de MaxLength em @ActualRecord deve ser maior que ou igual a 1', 1
            IF @W_AskLength IS NULL
                THROW 51000, 'Valor de AskLength em @ActualRecord é requerido.', 1
            IF @W_AskDecimals IS NULL
                THROW 51000, 'Valor de AskDecimals em @ActualRecord é requerido.', 1
            IF @W_AskPrimarykey IS NULL
                THROW 51000, 'Valor de AskPrimarykey em @ActualRecord é requerido.', 1
            IF @W_AskAutoincrement IS NULL
                THROW 51000, 'Valor de AskAutoincrement em @ActualRecord é requerido.', 1
            IF @W_AskFilterable IS NULL
                THROW 51000, 'Valor de AskFilterable em @ActualRecord é requerido.', 1
            IF @W_AskGridable IS NULL
                THROW 51000, 'Valor de AskGridable em @ActualRecord é requerido.', 1
            IF @W_AskCodification IS NULL
                THROW 51000, 'Valor de AskCodification em @ActualRecord é requerido.', 1
            IF @W_IsActive IS NULL
                THROW 51000, 'Valor de IsActive em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Types] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Types_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Types] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Types_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TypePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TypePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TypePersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TypePersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[TypeValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS tinyint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Types'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[TypeValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TypeCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TypeCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TypeCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TypeCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Types'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[TypeValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS tinyint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Types] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_CategoryId tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.CategoryId') AS tinyint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_MaxLength int = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.MaxLength') AS int)
                   ,@W_Minimum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(max))
                   ,@W_Maximum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(max))
                   ,@W_AskLength bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskLength') AS bit)
                   ,@W_AskDecimals bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskDecimals') AS bit)
                   ,@W_AskPrimarykey bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskPrimarykey') AS bit)
                   ,@W_AskAutoincrement bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskAutoincrement') AS bit)
                   ,@W_AskFilterable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskFilterable') AS bit)
                   ,@W_AskGridable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskGridable') AS bit)
                   ,@W_AskCodification bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AskCodification') AS bit)
                   ,@W_IsActive bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsActive') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Types] ([Id]
                                                ,[CategoryId]
                                                ,[Name]
                                                ,[MaxLength]
                                                ,[Minimum]
                                                ,[Maximum]
                                                ,[AskLength]
                                                ,[AskDecimals]
                                                ,[AskPrimarykey]
                                                ,[AskAutoincrement]
                                                ,[AskFilterable]
                                                ,[AskGridable]
                                                ,[AskCodification]
                                                ,[IsActive]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_CategoryId
                                                 ,@W_Name
                                                 ,@W_MaxLength
                                                 ,@W_Minimum
                                                 ,@W_Maximum
                                                 ,@W_AskLength
                                                 ,@W_AskDecimals
                                                 ,@W_AskPrimarykey
                                                 ,@W_AskAutoincrement
                                                 ,@W_AskFilterable
                                                 ,@W_AskGridable
                                                 ,@W_AskCodification
                                                 ,@W_IsActive
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Types] SET [Id] = @W_Id
                                              ,[CategoryId] = @W_CategoryId
                                              ,[Name] = @W_Name
                                              ,[MaxLength] = @W_MaxLength
                                              ,[Minimum] = @W_Minimum
                                              ,[Maximum] = @W_Maximum
                                              ,[AskLength] = @W_AskLength
                                              ,[AskDecimals] = @W_AskDecimals
                                              ,[AskPrimarykey] = @W_AskPrimarykey
                                              ,[AskAutoincrement] = @W_AskAutoincrement
                                              ,[AskFilterable] = @W_AskFilterable
                                              ,[AskGridable] = @W_AskGridable
                                              ,[AskCodification] = @W_AskCodification
                                              ,[IsActive] = @W_IsActive
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TypesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TypesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TypesRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TypesRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Types') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS tinyint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.CategoryId') AS tinyint) AS [CategoryId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.MaxLength') AS int) AS [MaxLength]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Minimum') AS nvarchar(max)) AS [Minimum]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Maximum') AS nvarchar(max)) AS [Maximum]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskLength') AS bit) AS [AskLength]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskDecimals') AS bit) AS [AskDecimals]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskPrimarykey') AS bit) AS [AskPrimarykey]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskAutoincrement') AS bit) AS [AskAutoincrement]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskFilterable') AS bit) AS [AskFilterable]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskGridable') AS bit) AS [AskGridable]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AskCodification') AS bit) AS [AskCodification]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsActive') AS bit) AS [IsActive]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Types'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id tinyint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS tinyint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                   ,@W_AskLength bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskLength') AS bit)
                   ,@W_AskDecimals bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskDecimals') AS bit)
                   ,@W_AskPrimarykey bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskPrimarykey') AS bit)
                   ,@W_AskAutoincrement bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskAutoincrement') AS bit)
                   ,@W_AskFilterable bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskFilterable') AS bit)
                   ,@W_AskGridable bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskGridable') AS bit)
                   ,@W_AskCodification bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.AskCodification') AS bit)
                   ,@W_IsActive bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsActive') AS bit)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS tinyint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
            IF @W_AskLength IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskLength] = @AskLength'
            END
            IF @W_AskDecimals IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskDecimals] = @AskDecimals'
            END
            IF @W_AskPrimarykey IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskPrimarykey] = @AskPrimarykey'
            END
            IF @W_AskAutoincrement IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskAutoincrement] = @AskAutoincrement'
            END
            IF @W_AskFilterable IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskFilterable] = @AskFilterable'
            END
            IF @W_AskGridable IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskGridable] = @AskGridable'
            END
            IF @W_AskCodification IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[AskCodification] = @AskCodification'
            END
            IF @W_IsActive IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsActive] = @IsActive'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Types] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] tinyint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id tinyint
                               ,@Name nvarchar(25)
                               ,@AskLength bit
                               ,@AskDecimals bit
                               ,@AskPrimarykey bit
                               ,@AskAutoincrement bit
                               ,@AskFilterable bit
                               ,@AskGridable bit
                               ,@AskCodification bit
                               ,@IsActive bit'
                           ,@Id = @W_Id
                           ,@Name = @W_Name
                           ,@AskLength = @W_AskLength
                           ,@AskDecimals = @W_AskDecimals
                           ,@AskPrimarykey = @W_AskPrimarykey
                           ,@AskAutoincrement = @W_AskAutoincrement
                           ,@AskFilterable = @W_AskFilterable
                           ,@AskGridable = @W_AskGridable
                           ,@AskCodification = @W_AskCodification
                           ,@IsActive = @W_IsActive
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS tinyint) AS [Id]
                    ,CAST(NULL AS tinyint) AS [CategoryId]
                    ,CAST(NULL AS nvarchar(25)) AS [Name]
                    ,CAST(NULL AS int) AS [MaxLength]
                    ,CAST(NULL AS nvarchar(max)) AS [Minimum]
                    ,CAST(NULL AS nvarchar(max)) AS [Maximum]
                    ,CAST(NULL AS bit) AS [AskLength]
                    ,CAST(NULL AS bit) AS [AskDecimals]
                    ,CAST(NULL AS bit) AS [AskPrimarykey]
                    ,CAST(NULL AS bit) AS [AskAutoincrement]
                    ,CAST(NULL AS bit) AS [AskFilterable]
                    ,CAST(NULL AS bit) AS [AskGridable]
                    ,CAST(NULL AS bit) AS [AskCodification]
                    ,CAST(NULL AS bit) AS [IsActive]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Type'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[CategoryId]
                              ,[T].[Name]
                              ,[T].[MaxLength]
                              ,[T].[Minimum]
                              ,[T].[Maximum]
                              ,[T].[AskLength]
                              ,[T].[AskDecimals]
                              ,[T].[AskPrimarykey]
                              ,[T].[AskAutoincrement]
                              ,[T].[AskFilterable]
                              ,[T].[AskGridable]
                              ,[T].[AskCodification]
                              ,[T].[IsActive]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Types] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Type'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[CategoryId]
                                  ,[O].[Name]
                                  ,[O].[MaxLength]
                                  ,[O].[Minimum]
                                  ,[O].[Maximum]
                                  ,[O].[AskLength]
                                  ,[O].[AskDecimals]
                                  ,[O].[AskPrimarykey]
                                  ,[O].[AskAutoincrement]
                                  ,[O].[AskFilterable]
                                  ,[O].[AskGridable]
                                  ,[O].[AskCodification]
                                  ,[O].[IsActive]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[CategoryId]
              ,[Name]
              ,[MaxLength]
              ,[Minimum]
              ,[Maximum]
              ,[AskLength]
              ,[AskDecimals]
              ,[AskPrimarykey]
              ,[AskAutoincrement]
              ,[AskFilterable]
              ,[AskGridable]
              ,[AskCodification]
              ,[IsActive]
            FROM [dbo].[#result]
        SELECT 'Category' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[HtmlInputType]
              ,[R].[HtmlInputAlign]
              ,[R].[AskEncrypted]
              ,[R].[AskMask]
              ,[R].[AskListable]
              ,[R].[AskDefault]
              ,[R].[AskMinimum]
              ,[R].[AskMaximum]
              ,[R].[AskInWords]
            FROM [dbo].[Categories] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [CategoryId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TypesList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TypesList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TypesList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TypesList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[Types]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[Types] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[MaskValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MaskValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MaskValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[MaskValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Masks', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Masks', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Mask'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Mask'), 'nvarchar(max)') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Masks]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [Mask] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Mask'))
                THROW 51000, 'Registro de Masks alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [MaskId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Domains', 1
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Mask nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Mask') AS nvarchar(max))

            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_Mask IS NULL
                THROW 51000, 'Valor de Mask em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Masks] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Masks_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Masks] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Masks_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[MaskPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MaskPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MaskPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[MaskPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[MaskValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Masks'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[MaskValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[MaskCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MaskCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MaskCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[MaskCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Masks'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[MaskValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Masks] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Mask nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Mask') AS nvarchar(max))

            IF @Action = 'create'
                INSERT INTO [dbo].[Masks] ([Id]
                                                ,[Name]
                                                ,[Mask]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_Mask
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Masks] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[Mask] = @W_Mask
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[MasksRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MasksRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MasksRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[MasksRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Masks') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Mask') AS nvarchar(max)) AS [Mask]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Masks'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))

            IF @W_Id IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Masks] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@Name nvarchar(25)'
                           ,@Id = @W_Id
                           ,@Name = @W_Name
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS nvarchar(25)) AS [Name]
                    ,CAST(NULL AS nvarchar(max)) AS [Mask]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Mask'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[Name]
                              ,[T].[Mask]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Masks] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Mask'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[Name]
                                  ,[O].[Mask]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[Name]
              ,[Mask]
            FROM [dbo].[#result]
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO


/**********************************************************************************
Criar stored procedure [dbo].[DomainValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DomainValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DomainValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DomainValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Domains', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Domains', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.TypeId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TypeId'), 'tinyint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.MaskId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.MaskId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Length'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Length'), 'smallint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Decimals'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Decimals'), 'tinyint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ValidValues'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ValidValues'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Default'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Default'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Minimum'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Minimum'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Maximum'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Maximum'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Codification'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Codification'), 'nvarchar') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Domains]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [TypeId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TypeId')
                                  AND [crudex].[IS_EQUAL]([MaskId], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.MaskId'), 'bigint') = 1
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [crudex].[IS_EQUAL]([Length], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Length'), 'smallint') = 1
                                  AND [crudex].[IS_EQUAL]([Decimals], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Decimals'), 'tinyint') = 1
                                  AND [crudex].[IS_EQUAL]([ValidValues], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ValidValues'), 'nvarchar(max)') = 1
                                  AND [crudex].[IS_EQUAL]([Default], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Default'), 'nvarchar(max)') = 1
                                  AND [crudex].[IS_EQUAL]([Minimum], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Minimum'), 'nvarchar(max)') = 1
                                  AND [crudex].[IS_EQUAL]([Maximum], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Maximum'), 'nvarchar(max)') = 1
                                  AND [crudex].[IS_EQUAL]([Codification], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Codification'), 'nvarchar') = 1)
                THROW 51000, 'Registro de Domains alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [DomainId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Columns', 1
        END ELSE BEGIN

            DECLARE @W_TypeId tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TypeId') AS tinyint)
                   ,@W_MaskId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.MaskId') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Length smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Length') AS smallint)
                   ,@W_Decimals tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Decimals') AS tinyint)
                   ,@W_ValidValues nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ValidValues') AS nvarchar(max))
                   ,@W_Default nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Default') AS nvarchar(max))
                   ,@W_Minimum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(max))
                   ,@W_Maximum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(max))
                   ,@W_Codification nvarchar(5) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Codification') AS nvarchar(5))

            IF @W_TypeId IS NULL
                THROW 51000, 'Valor de TypeId em @ActualRecord é requerido.', 1
            IF @W_TypeId < CAST('1' AS tinyint)
                THROW 51000, 'Valor de TypeId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Types] WHERE [Id] = @W_TypeId)
                THROW 51000, 'Valor de TypeId em @ActualRecord inexiste em Types', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Masks] WHERE [Id] = @W_MaskId)
                THROW 51000, 'Valor de MaskId em @ActualRecord inexiste em Masks', 1
            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_Length IS NOT NULL AND @W_Length < CAST('0' AS smallint)
                THROW 51000, 'Valor de Length em @ActualRecord deve ser maior que ou igual a 0', 1
            IF @W_Decimals IS NOT NULL AND @W_Decimals < CAST('0' AS tinyint)
                THROW 51000, 'Valor de Decimals em @ActualRecord deve ser maior que ou igual a 0', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Domains_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Domains_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DomainPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DomainPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DomainPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DomainPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[DomainValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Domains'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[DomainValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DomainCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DomainCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DomainCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DomainCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Domains'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[DomainValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Domains] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_TypeId tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TypeId') AS tinyint)
                   ,@W_MaskId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.MaskId') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Length smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Length') AS smallint)
                   ,@W_Decimals tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Decimals') AS tinyint)
                   ,@W_ValidValues nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ValidValues') AS nvarchar(max))
                   ,@W_Default nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Default') AS nvarchar(max))
                   ,@W_Minimum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(max))
                   ,@W_Maximum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(max))
                   ,@W_Codification nvarchar(5) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Codification') AS nvarchar(5))

            IF @Action = 'create'
                INSERT INTO [dbo].[Domains] ([Id]
                                                ,[TypeId]
                                                ,[MaskId]
                                                ,[Name]
                                                ,[Length]
                                                ,[Decimals]
                                                ,[ValidValues]
                                                ,[Default]
                                                ,[Minimum]
                                                ,[Maximum]
                                                ,[Codification]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_TypeId
                                                 ,@W_MaskId
                                                 ,@W_Name
                                                 ,@W_Length
                                                 ,@W_Decimals
                                                 ,@W_ValidValues
                                                 ,@W_Default
                                                 ,@W_Minimum
                                                 ,@W_Maximum
                                                 ,@W_Codification
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Domains] SET [Id] = @W_Id
                                              ,[TypeId] = @W_TypeId
                                              ,[MaskId] = @W_MaskId
                                              ,[Name] = @W_Name
                                              ,[Length] = @W_Length
                                              ,[Decimals] = @W_Decimals
                                              ,[ValidValues] = @W_ValidValues
                                              ,[Default] = @W_Default
                                              ,[Minimum] = @W_Minimum
                                              ,[Maximum] = @W_Maximum
                                              ,[Codification] = @W_Codification
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DomainsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DomainsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DomainsRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DomainsRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Domains') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.TypeId') AS tinyint) AS [TypeId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.MaskId') AS bigint) AS [MaskId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Length') AS smallint) AS [Length]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Decimals') AS tinyint) AS [Decimals]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ValidValues') AS nvarchar(max)) AS [ValidValues]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Default') AS nvarchar(max)) AS [Default]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Minimum') AS nvarchar(max)) AS [Minimum]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Maximum') AS nvarchar(max)) AS [Maximum]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Codification') AS nvarchar(5)) AS [Codification]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Domains'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_TypeId tinyint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.TypeId') AS tinyint)
                   ,@W_MaskId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.MaskId') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                   ,@W_ValidValues nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.ValidValues') AS nvarchar(max))
                   ,@W_Codification nvarchar(5) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Codification') AS nvarchar(5))

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_TypeId IS NOT NULL BEGIN
                IF @W_TypeId < CAST('1' AS tinyint)
                    THROW 51000, 'Valor de TypeId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[TypeId] = @TypeId'
            END
            IF @W_MaskId IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[MaskId] = @MaskId'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
            IF @W_ValidValues IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[ValidValues] = @ValidValues'
            END
            IF @W_Codification IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Codification] = @Codification'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Domains] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@TypeId tinyint
                               ,@MaskId bigint
                               ,@Name nvarchar(25)
                               ,@ValidValues nvarchar(max)
                               ,@Codification nvarchar(5)'
                           ,@Id = @W_Id
                           ,@TypeId = @W_TypeId
                           ,@MaskId = @W_MaskId
                           ,@Name = @W_Name
                           ,@ValidValues = @W_ValidValues
                           ,@Codification = @W_Codification
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS tinyint) AS [TypeId]
                    ,CAST(NULL AS bigint) AS [MaskId]
                    ,CAST(NULL AS nvarchar(25)) AS [Name]
                    ,CAST(NULL AS smallint) AS [Length]
                    ,CAST(NULL AS tinyint) AS [Decimals]
                    ,CAST(NULL AS nvarchar(max)) AS [ValidValues]
                    ,CAST(NULL AS nvarchar(max)) AS [Default]
                    ,CAST(NULL AS nvarchar(max)) AS [Minimum]
                    ,CAST(NULL AS nvarchar(max)) AS [Maximum]
                    ,CAST(NULL AS nvarchar(5)) AS [Codification]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Domain'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[TypeId]
                              ,[T].[MaskId]
                              ,[T].[Name]
                              ,[T].[Length]
                              ,[T].[Decimals]
                              ,[T].[ValidValues]
                              ,[T].[Default]
                              ,[T].[Minimum]
                              ,[T].[Maximum]
                              ,[T].[Codification]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Domains] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Domain'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[TypeId]
                                  ,[O].[MaskId]
                                  ,[O].[Name]
                                  ,[O].[Length]
                                  ,[O].[Decimals]
                                  ,[O].[ValidValues]
                                  ,[O].[Default]
                                  ,[O].[Minimum]
                                  ,[O].[Maximum]
                                  ,[O].[Codification]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[TypeId]
              ,[MaskId]
              ,[Name]
              ,[Length]
              ,[Decimals]
              ,[ValidValues]
              ,[Default]
              ,[Minimum]
              ,[Maximum]
              ,[Codification]
            FROM [dbo].[#result]
        SELECT 'Type' AS ClassName
              ,[R].[Id]
              ,[R].[CategoryId]
              ,[R].[Name]
              ,[R].[MaxLength]
              ,[R].[Minimum]
              ,[R].[Maximum]
              ,[R].[AskLength]
              ,[R].[AskDecimals]
              ,[R].[AskPrimarykey]
              ,[R].[AskAutoincrement]
              ,[R].[AskFilterable]
              ,[R].[AskGridable]
              ,[R].[AskCodification]
              ,[R].[IsActive]
            FROM [dbo].[Types] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [TypeId] =  [R].[Id])
        SELECT 'Mask' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Mask]
            FROM [dbo].[Masks] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [MaskId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DomainsList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DomainsList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DomainsList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DomainsList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[Domains]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[Domains] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Systems', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Systems', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Description'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ClientName'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ClientName'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.MaxRetryLogins'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.MaxRetryLogins'), 'tinyint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsOffAir'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsOffAir'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Systems]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [Description] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Description')
                                  AND [ClientName] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ClientName')
                                  AND [MaxRetryLogins] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.MaxRetryLogins')
                                  AND [IsOffAir] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsOffAir'))
                THROW 51000, 'Registro de Systems alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Menus', 1
            IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [SystemId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em SystemsUsers', 1
            IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [SystemId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em SystemsDatabases', 1
            IF EXISTS(SELECT 1 FROM [dbo].[Logins] WHERE [SystemId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Logins', 1
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_ClientName nvarchar(15) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ClientName') AS nvarchar(15))
                   ,@W_MaxRetryLogins tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.MaxRetryLogins') AS tinyint)
                   ,@W_IsOffAir bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsOffAir') AS bit)

            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_Description IS NULL
                THROW 51000, 'Valor de Description em @ActualRecord é requerido.', 1
            IF @W_ClientName IS NULL
                THROW 51000, 'Valor de ClientName em @ActualRecord é requerido.', 1
            IF @W_MaxRetryLogins IS NULL
                THROW 51000, 'Valor de MaxRetryLogins em @ActualRecord é requerido.', 1
            IF @W_MaxRetryLogins < CAST('1' AS tinyint)
                THROW 51000, 'Valor de MaxRetryLogins em @ActualRecord deve ser maior que ou igual a 1', 1
            IF @W_IsOffAir IS NULL
                THROW 51000, 'Valor de IsOffAir em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Systems_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Systems_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[SystemValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Systems'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[SystemValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Systems'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[SystemValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Systems] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_ClientName nvarchar(15) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ClientName') AS nvarchar(15))
                   ,@W_MaxRetryLogins tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.MaxRetryLogins') AS tinyint)
                   ,@W_IsOffAir bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsOffAir') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Systems] ([Id]
                                                ,[Name]
                                                ,[Description]
                                                ,[ClientName]
                                                ,[MaxRetryLogins]
                                                ,[IsOffAir]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_Description
                                                 ,@W_ClientName
                                                 ,@W_MaxRetryLogins
                                                 ,@W_IsOffAir
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Systems] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[Description] = @W_Description
                                              ,[ClientName] = @W_ClientName
                                              ,[MaxRetryLogins] = @W_MaxRetryLogins
                                              ,[IsOffAir] = @W_IsOffAir
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemsRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemsRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Systems') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ClientName') AS nvarchar(15)) AS [ClientName]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.MaxRetryLogins') AS tinyint) AS [MaxRetryLogins]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsOffAir') AS bit) AS [IsOffAir]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Systems'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                   ,@W_ClientName nvarchar(15) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.ClientName') AS nvarchar(15))

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
            IF @W_ClientName IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[ClientName] = @ClientName'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Systems] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@Name nvarchar(25)
                               ,@ClientName nvarchar(15)'
                           ,@Id = @W_Id
                           ,@Name = @W_Name
                           ,@ClientName = @W_ClientName
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS nvarchar(25)) AS [Name]
                    ,CAST(NULL AS nvarchar(50)) AS [Description]
                    ,CAST(NULL AS nvarchar(15)) AS [ClientName]
                    ,CAST(NULL AS tinyint) AS [MaxRetryLogins]
                    ,CAST(NULL AS bit) AS [IsOffAir]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''System'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[Name]
                              ,[T].[Description]
                              ,[T].[ClientName]
                              ,[T].[MaxRetryLogins]
                              ,[T].[IsOffAir]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Systems] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''System'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[Name]
                                  ,[O].[Description]
                                  ,[O].[ClientName]
                                  ,[O].[MaxRetryLogins]
                                  ,[O].[IsOffAir]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[Name]
              ,[Description]
              ,[ClientName]
              ,[MaxRetryLogins]
              ,[IsOffAir]
            FROM [dbo].[#result]
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemsList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemsList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemsList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemsList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[Systems]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[Systems] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[MenuValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MenuValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MenuValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[MenuValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Menus', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Menus', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.SystemId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Sequence'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Sequence'), 'smallint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Caption'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Caption'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Message'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Message'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Action'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Action'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ParentMenuId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ParentMenuId'), 'bigint') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Menus]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [SystemId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.SystemId')
                                  AND [Sequence] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Sequence')
                                  AND [Caption] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Caption')
                                  AND [Message] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Message')
                                  AND [crudex].[IS_EQUAL]([Action], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Action'), 'nvarchar') = 1
                                  AND [crudex].[IS_EQUAL]([ParentMenuId], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ParentMenuId'), 'bigint') = 1)
                THROW 51000, 'Registro de Menus alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [ParentMenuId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Menus', 1
        END ELSE BEGIN

            DECLARE @W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS bigint)
                   ,@W_Sequence smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_Caption nvarchar(20) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Caption') AS nvarchar(20))
                   ,@W_Message nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Message') AS nvarchar(50))
                   ,@W_Action nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Action') AS nvarchar(50))
                   ,@W_ParentMenuId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ParentMenuId') AS bigint)

            IF @W_SystemId IS NULL
                THROW 51000, 'Valor de SystemId em @ActualRecord é requerido.', 1
            IF @W_SystemId < CAST('1' AS bigint)
                THROW 51000, 'Valor de SystemId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Id] = @W_SystemId)
                THROW 51000, 'Valor de SystemId em @ActualRecord inexiste em Systems', 1
            IF @W_Sequence IS NULL
                THROW 51000, 'Valor de Sequence em @ActualRecord é requerido.', 1
            IF @W_Sequence < CAST('1' AS smallint)
                THROW 51000, 'Valor de Sequence em @ActualRecord deve ser maior que ou igual a 1', 1
            IF @W_Caption IS NULL
                THROW 51000, 'Valor de Caption em @ActualRecord é requerido.', 1
            IF @W_Message IS NULL
                THROW 51000, 'Valor de Message em @ActualRecord é requerido.', 1
            IF @W_ParentMenuId IS NOT NULL AND @W_ParentMenuId < CAST('1' AS bigint)
                THROW 51000, 'Valor de ParentMenuId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [Id] = @W_ParentMenuId)
                THROW 51000, 'Valor de ParentMenuId em @ActualRecord inexiste em Menus', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_SystemId AND [Sequence] = @W_Sequence)
                    THROW 51000, 'Chave única de UNQ_Menus_SystemId_Sequence já existe', 1
                IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_SystemId AND [Caption] = @W_Caption)
                    THROW 51000, 'Chave única de UNQ_Menus_SystemId_Caption já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_SystemId AND [Sequence] = @W_Sequence AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Menus_SystemId_Sequence já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Menus] WHERE [SystemId] = @W_SystemId AND [Caption] = @W_Caption AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Menus_SystemId_Caption já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[MenuPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MenuPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MenuPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[MenuPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[MenuValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Menus'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[MenuValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[MenuCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MenuCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MenuCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[MenuCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Menus'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[MenuValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Menus] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS bigint)
                   ,@W_Sequence smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_Caption nvarchar(20) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Caption') AS nvarchar(20))
                   ,@W_Message nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Message') AS nvarchar(50))
                   ,@W_Action nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Action') AS nvarchar(50))
                   ,@W_ParentMenuId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ParentMenuId') AS bigint)

            IF @Action = 'create'
                INSERT INTO [dbo].[Menus] ([Id]
                                                ,[SystemId]
                                                ,[Sequence]
                                                ,[Caption]
                                                ,[Message]
                                                ,[Action]
                                                ,[ParentMenuId]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_SystemId
                                                 ,@W_Sequence
                                                 ,@W_Caption
                                                 ,@W_Message
                                                 ,@W_Action
                                                 ,@W_ParentMenuId
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Menus] SET [Id] = @W_Id
                                              ,[SystemId] = @W_SystemId
                                              ,[Sequence] = @W_Sequence
                                              ,[Caption] = @W_Caption
                                              ,[Message] = @W_Message
                                              ,[Action] = @W_Action
                                              ,[ParentMenuId] = @W_ParentMenuId
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[MenusRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[MenusRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[MenusRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[MenusRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Menus') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.SystemId') AS bigint) AS [SystemId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Sequence') AS smallint) AS [Sequence]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Caption') AS nvarchar(20)) AS [Caption]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Message') AS nvarchar(50)) AS [Message]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Action') AS nvarchar(50)) AS [Action]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ParentMenuId') AS bigint) AS [ParentMenuId]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Menus'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.SystemId') AS bigint)
                   ,@W_Caption nvarchar(20) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Caption') AS nvarchar(20))

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_SystemId IS NOT NULL BEGIN
                IF @W_SystemId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de SystemId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[SystemId] = @SystemId'
            END
            IF @W_Caption IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Caption] = @Caption'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Menus] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@SystemId bigint
                               ,@Caption nvarchar(20)'
                           ,@Id = @W_Id
                           ,@SystemId = @W_SystemId
                           ,@Caption = @W_Caption
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [SystemId]
                    ,CAST(NULL AS smallint) AS [Sequence]
                    ,CAST(NULL AS nvarchar(20)) AS [Caption]
                    ,CAST(NULL AS nvarchar(50)) AS [Message]
                    ,CAST(NULL AS nvarchar(50)) AS [Action]
                    ,CAST(NULL AS bigint) AS [ParentMenuId]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Menu'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[SystemId]
                              ,[T].[Sequence]
                              ,[T].[Caption]
                              ,[T].[Message]
                              ,[T].[Action]
                              ,[T].[ParentMenuId]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Menus] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Menu'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[SystemId]
                                  ,[O].[Sequence]
                                  ,[O].[Caption]
                                  ,[O].[Message]
                                  ,[O].[Action]
                                  ,[O].[ParentMenuId]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[SystemId]
              ,[Sequence]
              ,[Caption]
              ,[Message]
              ,[Action]
              ,[ParentMenuId]
            FROM [dbo].[#result]
        SELECT 'System' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Description]
              ,[R].[ClientName]
              ,[R].[MaxRetryLogins]
              ,[R].[IsOffAir]
            FROM [dbo].[Systems] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [SystemId] =  [R].[Id])
        SELECT 'Menu' AS ClassName
              ,[R].[Id]
              ,[R].[SystemId]
              ,[R].[Sequence]
              ,[R].[Caption]
              ,[R].[Message]
              ,[R].[Action]
              ,[R].[ParentMenuId]
            FROM [dbo].[Menus] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [ParentMenuId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO


/**********************************************************************************
Criar stored procedure [dbo].[UserValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[UserValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[UserValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[UserValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Users', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Users', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Password'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Password'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.FullName'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.FullName'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.RetryLogins'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.RetryLogins'), 'tinyint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsActive'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsActive'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Users]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [Password] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Password')
                                  AND [FullName] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.FullName')
                                  AND [RetryLogins] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.RetryLogins')
                                  AND [IsActive] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsActive'))
                THROW 51000, 'Registro de Users alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [UserId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em SystemsUsers', 1
            IF EXISTS(SELECT 1 FROM [dbo].[Logins] WHERE [UserId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Logins', 1
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Password nvarchar(256) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Password') AS nvarchar(256))
                   ,@W_FullName nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.FullName') AS nvarchar(50))
                   ,@W_RetryLogins tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.RetryLogins') AS tinyint)
                   ,@W_IsActive bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsActive') AS bit)

            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_Password IS NULL
                THROW 51000, 'Valor de Password em @ActualRecord é requerido.', 1
            IF @W_FullName IS NULL
                THROW 51000, 'Valor de FullName em @ActualRecord é requerido.', 1
            IF @W_RetryLogins IS NULL
                THROW 51000, 'Valor de RetryLogins em @ActualRecord é requerido.', 1
            IF @W_RetryLogins < CAST('0' AS tinyint)
                THROW 51000, 'Valor de RetryLogins em @ActualRecord deve ser maior que ou igual a 0', 1
            IF @W_IsActive IS NULL
                THROW 51000, 'Valor de IsActive em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Users] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Users_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Users] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Users_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[UserPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[UserPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[UserPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[UserPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[UserValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Users'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[UserValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[UserCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[UserCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[UserCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[UserCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Users'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[UserValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Users] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Password nvarchar(256) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Password') AS nvarchar(256))
                   ,@W_FullName nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.FullName') AS nvarchar(50))
                   ,@W_RetryLogins tinyint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.RetryLogins') AS tinyint)
                   ,@W_IsActive bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsActive') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Users] ([Id]
                                                ,[Name]
                                                ,[Password]
                                                ,[FullName]
                                                ,[RetryLogins]
                                                ,[IsActive]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_Password
                                                 ,@W_FullName
                                                 ,@W_RetryLogins
                                                 ,@W_IsActive
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Users] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[Password] = @W_Password
                                              ,[FullName] = @W_FullName
                                              ,[RetryLogins] = @W_RetryLogins
                                              ,[IsActive] = @W_IsActive
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[UsersRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[UsersRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[UsersRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[UsersRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Users') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Password') AS nvarchar(256)) AS [Password]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.FullName') AS nvarchar(50)) AS [FullName]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.RetryLogins') AS tinyint) AS [RetryLogins]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsActive') AS bit) AS [IsActive]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Users'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                   ,@W_FullName nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.FullName') AS nvarchar(50))
                   ,@W_IsActive bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsActive') AS bit)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
            IF @W_FullName IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[FullName] = @FullName'
            END
            IF @W_IsActive IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsActive] = @IsActive'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Users] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@Name nvarchar(25)
                               ,@FullName nvarchar(50)
                               ,@IsActive bit'
                           ,@Id = @W_Id
                           ,@Name = @W_Name
                           ,@FullName = @W_FullName
                           ,@IsActive = @W_IsActive
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS nvarchar(25)) AS [Name]
                    ,CAST(NULL AS nvarchar(256)) AS [Password]
                    ,CAST(NULL AS nvarchar(50)) AS [FullName]
                    ,CAST(NULL AS tinyint) AS [RetryLogins]
                    ,CAST(NULL AS bit) AS [IsActive]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''User'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[Name]
                              ,[T].[Password]
                              ,[T].[FullName]
                              ,[T].[RetryLogins]
                              ,[T].[IsActive]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Users] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''User'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[Name]
                                  ,[O].[Password]
                                  ,[O].[FullName]
                                  ,[O].[RetryLogins]
                                  ,[O].[IsActive]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[Name]
              ,[Password]
              ,[FullName]
              ,[RetryLogins]
              ,[IsActive]
            FROM [dbo].[#result]
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[UsersList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[UsersList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[UsersList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[UsersList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[Users]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[Users] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemUserValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemUserValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemUserValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemUserValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em SystemsUsers', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em SystemsUsers', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.SystemId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.UserId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.UserId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[SystemsUsers]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [SystemId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.SystemId')
                                  AND [UserId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.UserId')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'))
                THROW 51000, 'Registro de SystemsUsers alterado por outro usuário', 1
        END

        IF @Action <> 'delete' BEGIN

            DECLARE @W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS bigint)
                   ,@W_UserId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.UserId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))

            IF @W_SystemId IS NULL
                THROW 51000, 'Valor de SystemId em @ActualRecord é requerido.', 1
            IF @W_SystemId < CAST('1' AS bigint)
                THROW 51000, 'Valor de SystemId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Id] = @W_SystemId)
                THROW 51000, 'Valor de SystemId em @ActualRecord inexiste em Systems', 1
            IF @W_UserId IS NULL
                THROW 51000, 'Valor de UserId em @ActualRecord é requerido.', 1
            IF @W_UserId < CAST('1' AS bigint)
                THROW 51000, 'Valor de UserId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Users] WHERE [Id] = @W_UserId)
                THROW 51000, 'Valor de UserId em @ActualRecord inexiste em Users', 1
            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [SystemId] = @W_SystemId AND [UserId] = @W_UserId)
                    THROW 51000, 'Chave única de UNQ_SystemsUsers_SystemId_UserId já existe', 1
                IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_SystemsUsers_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [SystemId] = @W_SystemId AND [UserId] = @W_UserId AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_SystemsUsers_SystemId_UserId já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[SystemsUsers] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_SystemsUsers_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemUserPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemUserPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemUserPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemUserPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[SystemUserValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'SystemsUsers'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[SystemUserValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemUserCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemUserCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemUserCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemUserCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'SystemsUsers'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[SystemUserValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[SystemsUsers] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS bigint)
                   ,@W_UserId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.UserId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))

            IF @Action = 'create'
                INSERT INTO [dbo].[SystemsUsers] ([Id]
                                                ,[SystemId]
                                                ,[UserId]
                                                ,[Name]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_SystemId
                                                 ,@W_UserId
                                                 ,@W_Name
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[SystemsUsers] SET [Id] = @W_Id
                                              ,[SystemId] = @W_SystemId
                                              ,[UserId] = @W_UserId
                                              ,[Name] = @W_Name
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemsUsersRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemsUsersRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemsUsersRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemsUsersRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'SystemsUsers') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.SystemId') AS bigint) AS [SystemId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.UserId') AS bigint) AS [UserId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(50)) AS [Name]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'SystemsUsers'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.SystemId') AS bigint)
                   ,@W_UserId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.UserId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(50))

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_SystemId IS NOT NULL BEGIN
                IF @W_SystemId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de SystemId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[SystemId] = @SystemId'
            END
            IF @W_UserId IS NOT NULL BEGIN
                IF @W_UserId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de UserId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[UserId] = @UserId'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[SystemsUsers] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@SystemId bigint
                               ,@UserId bigint
                               ,@Name nvarchar(50)'
                           ,@Id = @W_Id
                           ,@SystemId = @W_SystemId
                           ,@UserId = @W_UserId
                           ,@Name = @W_Name
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [SystemId]
                    ,CAST(NULL AS bigint) AS [UserId]
                    ,CAST(NULL AS nvarchar(50)) AS [Name]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''SystemUser'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[SystemId]
                              ,[T].[UserId]
                              ,[T].[Name]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[SystemsUsers] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''SystemUser'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[SystemId]
                                  ,[O].[UserId]
                                  ,[O].[Name]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[SystemId]
              ,[UserId]
              ,[Name]
            FROM [dbo].[#result]
        SELECT 'System' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Description]
              ,[R].[ClientName]
              ,[R].[MaxRetryLogins]
              ,[R].[IsOffAir]
            FROM [dbo].[Systems] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [SystemId] =  [R].[Id])
        SELECT 'User' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Password]
              ,[R].[FullName]
              ,[R].[RetryLogins]
              ,[R].[IsActive]
            FROM [dbo].[Users] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [UserId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemsUsersList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemsUsersList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemsUsersList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemsUsersList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[SystemsUsers]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[SystemsUsers] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[ConnectionValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ConnectionValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ConnectionValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[ConnectionValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Connections', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Connections', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Provider'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Provider'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.HostName'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.HostName'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Port'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Port'), 'int') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IntegratedSecurity'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IntegratedSecurity'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ConnectionTimeout'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ConnectionTimeout'), 'smallint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ExtendedProperties'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ExtendedProperties'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.UserID'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.UserID'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Password'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Password'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.PersistSecurityInfo'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.PersistSecurityInfo'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.AdditionalParameters'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AdditionalParameters'), 'nvarchar(max)') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Connections]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [Provider] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Provider')
                                  AND [HostName] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.HostName')
                                  AND [Port] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Port')
                                  AND [IntegratedSecurity] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IntegratedSecurity')
                                  AND [ConnectionTimeout] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ConnectionTimeout')
                                  AND [crudex].[IS_EQUAL]([ExtendedProperties], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ExtendedProperties'), 'nvarchar(max)') = 1
                                  AND [crudex].[IS_EQUAL]([UserID], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.UserID'), 'nvarchar') = 1
                                  AND [crudex].[IS_EQUAL]([Password], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Password'), 'nvarchar') = 1
                                  AND [crudex].[IS_EQUAL]([PersistSecurityInfo], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.PersistSecurityInfo'), 'bit') = 1
                                  AND [crudex].[IS_EQUAL]([AdditionalParameters], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.AdditionalParameters'), 'nvarchar(max)') = 1)
                THROW 51000, 'Registro de Connections alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [ConnectionId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Databases', 1
        END ELSE BEGIN

            DECLARE @W_Provider nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Provider') AS nvarchar(50))
                   ,@W_HostName nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.HostName') AS nvarchar(25))
                   ,@W_Port int = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Port') AS int)
                   ,@W_IntegratedSecurity bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IntegratedSecurity') AS bit)
                   ,@W_ConnectionTimeout smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ConnectionTimeout') AS smallint)
                   ,@W_ExtendedProperties nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ExtendedProperties') AS nvarchar(max))
                   ,@W_UserID nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.UserID') AS nvarchar(25))
                   ,@W_Password nvarchar(256) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Password') AS nvarchar(256))
                   ,@W_PersistSecurityInfo bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.PersistSecurityInfo') AS bit)
                   ,@W_AdditionalParameters nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AdditionalParameters') AS nvarchar(max))

            IF @W_Provider IS NULL
                THROW 51000, 'Valor de Provider em @ActualRecord é requerido.', 1
            IF @W_HostName IS NULL
                THROW 51000, 'Valor de HostName em @ActualRecord é requerido.', 1
            IF @W_Port IS NULL
                THROW 51000, 'Valor de Port em @ActualRecord é requerido.', 1
            IF @W_Port < CAST('1' AS int)
                THROW 51000, 'Valor de Port em @ActualRecord deve ser maior que ou igual a 1', 1
            IF @W_IntegratedSecurity IS NULL
                THROW 51000, 'Valor de IntegratedSecurity em @ActualRecord é requerido.', 1
            IF @W_ConnectionTimeout IS NULL
                THROW 51000, 'Valor de ConnectionTimeout em @ActualRecord é requerido.', 1
            IF @W_ConnectionTimeout < CAST('0' AS smallint)
                THROW 51000, 'Valor de ConnectionTimeout em @ActualRecord deve ser maior que ou igual a 0', 1
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[ConnectionPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ConnectionPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ConnectionPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[ConnectionPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[ConnectionValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Connections'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[ConnectionValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[ConnectionCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ConnectionCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ConnectionCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[ConnectionCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Connections'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[ConnectionValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Connections] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Provider nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Provider') AS nvarchar(50))
                   ,@W_HostName nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.HostName') AS nvarchar(25))
                   ,@W_Port int = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Port') AS int)
                   ,@W_IntegratedSecurity bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IntegratedSecurity') AS bit)
                   ,@W_ConnectionTimeout smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ConnectionTimeout') AS smallint)
                   ,@W_ExtendedProperties nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ExtendedProperties') AS nvarchar(max))
                   ,@W_UserID nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.UserID') AS nvarchar(25))
                   ,@W_Password nvarchar(256) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Password') AS nvarchar(256))
                   ,@W_PersistSecurityInfo bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.PersistSecurityInfo') AS bit)
                   ,@W_AdditionalParameters nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.AdditionalParameters') AS nvarchar(max))

            IF @Action = 'create'
                INSERT INTO [dbo].[Connections] ([Id]
                                                ,[Provider]
                                                ,[HostName]
                                                ,[Port]
                                                ,[IntegratedSecurity]
                                                ,[ConnectionTimeout]
                                                ,[ExtendedProperties]
                                                ,[UserID]
                                                ,[Password]
                                                ,[PersistSecurityInfo]
                                                ,[AdditionalParameters]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Provider
                                                 ,@W_HostName
                                                 ,@W_Port
                                                 ,@W_IntegratedSecurity
                                                 ,@W_ConnectionTimeout
                                                 ,@W_ExtendedProperties
                                                 ,@W_UserID
                                                 ,@W_Password
                                                 ,@W_PersistSecurityInfo
                                                 ,@W_AdditionalParameters
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Connections] SET [Id] = @W_Id
                                              ,[Provider] = @W_Provider
                                              ,[HostName] = @W_HostName
                                              ,[Port] = @W_Port
                                              ,[IntegratedSecurity] = @W_IntegratedSecurity
                                              ,[ConnectionTimeout] = @W_ConnectionTimeout
                                              ,[ExtendedProperties] = @W_ExtendedProperties
                                              ,[UserID] = @W_UserID
                                              ,[Password] = @W_Password
                                              ,[PersistSecurityInfo] = @W_PersistSecurityInfo
                                              ,[AdditionalParameters] = @W_AdditionalParameters
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[ConnectionsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ConnectionsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ConnectionsRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[ConnectionsRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Connections') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Provider') AS nvarchar(50)) AS [Provider]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.HostName') AS nvarchar(25)) AS [HostName]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Port') AS int) AS [Port]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IntegratedSecurity') AS bit) AS [IntegratedSecurity]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ConnectionTimeout') AS smallint) AS [ConnectionTimeout]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ExtendedProperties') AS nvarchar(max)) AS [ExtendedProperties]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.UserID') AS nvarchar(25)) AS [UserID]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Password') AS nvarchar(256)) AS [Password]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.PersistSecurityInfo') AS bit) AS [PersistSecurityInfo]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.AdditionalParameters') AS nvarchar(max)) AS [AdditionalParameters]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Connections'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_Provider nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Provider') AS nvarchar(50))
                   ,@W_HostName nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.HostName') AS nvarchar(25))
                   ,@W_Port int = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Port') AS int)
                   ,@W_IntegratedSecurity bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IntegratedSecurity') AS bit)

            IF @W_Id IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_Provider IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Provider] = @Provider'
            END
            IF @W_HostName IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[HostName] = @HostName'
            END
            IF @W_Port IS NOT NULL BEGIN
                IF @W_Port < CAST('1' AS int)
                    THROW 51000, 'Valor de Port deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Port] = @Port'
            END
            IF @W_IntegratedSecurity IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IntegratedSecurity] = @IntegratedSecurity'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Connections] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@Provider nvarchar(50)
                               ,@HostName nvarchar(25)
                               ,@Port int
                               ,@IntegratedSecurity bit'
                           ,@Id = @W_Id
                           ,@Provider = @W_Provider
                           ,@HostName = @W_HostName
                           ,@Port = @W_Port
                           ,@IntegratedSecurity = @W_IntegratedSecurity
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS nvarchar(50)) AS [Provider]
                    ,CAST(NULL AS nvarchar(25)) AS [HostName]
                    ,CAST(NULL AS int) AS [Port]
                    ,CAST(NULL AS bit) AS [IntegratedSecurity]
                    ,CAST(NULL AS smallint) AS [ConnectionTimeout]
                    ,CAST(NULL AS nvarchar(max)) AS [ExtendedProperties]
                    ,CAST(NULL AS nvarchar(25)) AS [UserID]
                    ,CAST(NULL AS nvarchar(256)) AS [Password]
                    ,CAST(NULL AS bit) AS [PersistSecurityInfo]
                    ,CAST(NULL AS nvarchar(max)) AS [AdditionalParameters]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Connection'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[Provider]
                              ,[T].[HostName]
                              ,[T].[Port]
                              ,[T].[IntegratedSecurity]
                              ,[T].[ConnectionTimeout]
                              ,[T].[ExtendedProperties]
                              ,[T].[UserID]
                              ,[T].[Password]
                              ,[T].[PersistSecurityInfo]
                              ,[T].[AdditionalParameters]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Connections] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Connection'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[Provider]
                                  ,[O].[HostName]
                                  ,[O].[Port]
                                  ,[O].[IntegratedSecurity]
                                  ,[O].[ConnectionTimeout]
                                  ,[O].[ExtendedProperties]
                                  ,[O].[UserID]
                                  ,[O].[Password]
                                  ,[O].[PersistSecurityInfo]
                                  ,[O].[AdditionalParameters]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[Provider]
              ,[HostName]
              ,[Port]
              ,[IntegratedSecurity]
              ,[ConnectionTimeout]
              ,[ExtendedProperties]
              ,[UserID]
              ,[Password]
              ,[PersistSecurityInfo]
              ,[AdditionalParameters]
            FROM [dbo].[#result]
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO


/**********************************************************************************
Criar stored procedure [dbo].[DatabaseValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabaseValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Databases', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Databases', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ConnectionId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ConnectionId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Alias'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Alias'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Description'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Folder'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Folder'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsLegacy'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsLegacy'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.CurrentOperationId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.CurrentOperationId'), 'bigint') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Databases]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [ConnectionId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ConnectionId')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [Alias] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Alias')
                                  AND [Description] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Description')
                                  AND [crudex].[IS_EQUAL]([Folder], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Folder'), 'nvarchar') = 1
                                  AND [IsLegacy] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsLegacy')
                                  AND [CurrentOperationId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.CurrentOperationId'))
                THROW 51000, 'Registro de Databases alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [DatabaseId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em SystemsDatabases', 1
            IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [DatabaseId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em DatabasesTables', 1
            IF EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [DatabaseId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Indexes', 1
        END ELSE BEGIN

            DECLARE @W_ConnectionId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ConnectionId') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_Folder nvarchar(256) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Folder') AS nvarchar(256))
                   ,@W_IsLegacy bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsLegacy') AS bit)
                   ,@W_CurrentOperationId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.CurrentOperationId') AS bigint)

            IF @W_ConnectionId IS NULL
                THROW 51000, 'Valor de ConnectionId em @ActualRecord é requerido.', 1
            IF @W_ConnectionId < CAST('1' AS bigint)
                THROW 51000, 'Valor de ConnectionId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Connections] WHERE [Id] = @W_ConnectionId)
                THROW 51000, 'Valor de ConnectionId em @ActualRecord inexiste em Connections', 1
            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_Alias IS NULL
                THROW 51000, 'Valor de Alias em @ActualRecord é requerido.', 1
            IF @W_Description IS NULL
                THROW 51000, 'Valor de Description em @ActualRecord é requerido.', 1
            IF @W_IsLegacy IS NULL
                THROW 51000, 'Valor de IsLegacy em @ActualRecord é requerido.', 1
            IF @W_CurrentOperationId IS NULL
                THROW 51000, 'Valor de CurrentOperationId em @ActualRecord é requerido.', 1
            IF @W_CurrentOperationId < CAST('0' AS bigint)
                THROW 51000, 'Valor de CurrentOperationId em @ActualRecord deve ser maior que ou igual a 0', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Databases_Name já existe', 1
                IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Alias] = @W_Alias)
                    THROW 51000, 'Chave única de UNQ_Databases_Alias já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Databases_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Alias] = @W_Alias AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Databases_Alias já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DatabasePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabasePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabasePersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabasePersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[DatabaseValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Databases'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[DatabaseValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DatabaseCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabaseCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Databases'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[DatabaseValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Databases] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_ConnectionId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ConnectionId') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_Folder nvarchar(256) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Folder') AS nvarchar(256))
                   ,@W_IsLegacy bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsLegacy') AS bit)
                   ,@W_CurrentOperationId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.CurrentOperationId') AS bigint)

            IF @Action = 'create'
                INSERT INTO [dbo].[Databases] ([Id]
                                                ,[ConnectionId]
                                                ,[Name]
                                                ,[Alias]
                                                ,[Description]
                                                ,[Folder]
                                                ,[IsLegacy]
                                                ,[CurrentOperationId]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_ConnectionId
                                                 ,@W_Name
                                                 ,@W_Alias
                                                 ,@W_Description
                                                 ,@W_Folder
                                                 ,@W_IsLegacy
                                                 ,@W_CurrentOperationId
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Databases] SET [Id] = @W_Id
                                              ,[ConnectionId] = @W_ConnectionId
                                              ,[Name] = @W_Name
                                              ,[Alias] = @W_Alias
                                              ,[Description] = @W_Description
                                              ,[Folder] = @W_Folder
                                              ,[IsLegacy] = @W_IsLegacy
                                              ,[CurrentOperationId] = @W_CurrentOperationId
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DatabasesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabasesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabasesRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabasesRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Databases') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ConnectionId') AS bigint) AS [ConnectionId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Alias') AS nvarchar(25)) AS [Alias]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Folder') AS nvarchar(256)) AS [Folder]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsLegacy') AS bit) AS [IsLegacy]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.CurrentOperationId') AS bigint) AS [CurrentOperationId]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Databases'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_ConnectionId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.ConnectionId') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Alias') AS nvarchar(25))

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_ConnectionId IS NOT NULL BEGIN
                IF @W_ConnectionId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de ConnectionId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[ConnectionId] = @ConnectionId'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
            IF @W_Alias IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Alias] = @Alias'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Databases] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@ConnectionId bigint
                               ,@Name nvarchar(25)
                               ,@Alias nvarchar(25)'
                           ,@Id = @W_Id
                           ,@ConnectionId = @W_ConnectionId
                           ,@Name = @W_Name
                           ,@Alias = @W_Alias
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [ConnectionId]
                    ,CAST(NULL AS nvarchar(25)) AS [Name]
                    ,CAST(NULL AS nvarchar(25)) AS [Alias]
                    ,CAST(NULL AS nvarchar(50)) AS [Description]
                    ,CAST(NULL AS nvarchar(256)) AS [Folder]
                    ,CAST(NULL AS bit) AS [IsLegacy]
                    ,CAST(NULL AS bigint) AS [CurrentOperationId]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Database'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[ConnectionId]
                              ,[T].[Name]
                              ,[T].[Alias]
                              ,[T].[Description]
                              ,[T].[Folder]
                              ,[T].[IsLegacy]
                              ,[T].[CurrentOperationId]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Databases] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Database'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[ConnectionId]
                                  ,[O].[Name]
                                  ,[O].[Alias]
                                  ,[O].[Description]
                                  ,[O].[Folder]
                                  ,[O].[IsLegacy]
                                  ,[O].[CurrentOperationId]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[ConnectionId]
              ,[Name]
              ,[Alias]
              ,[Description]
              ,[Folder]
              ,[IsLegacy]
              ,[CurrentOperationId]
            FROM [dbo].[#result]
        SELECT 'Connection' AS ClassName
              ,[R].[Id]
              ,[R].[Provider]
              ,[R].[HostName]
              ,[R].[Port]
              ,[R].[IntegratedSecurity]
              ,[R].[ConnectionTimeout]
              ,[R].[ExtendedProperties]
              ,[R].[UserID]
              ,[R].[Password]
              ,[R].[PersistSecurityInfo]
              ,[R].[AdditionalParameters]
            FROM [dbo].[Connections] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [ConnectionId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DatabasesList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabasesList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabasesList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabasesList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[Databases]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[Databases] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemDatabaseValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemDatabaseValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemDatabaseValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemDatabaseValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em SystemsDatabases', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em SystemsDatabases', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.SystemId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.DatabaseId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[SystemsDatabases]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [SystemId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.SystemId')
                                  AND [DatabaseId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.DatabaseId')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'))
                THROW 51000, 'Registro de SystemsDatabases alterado por outro usuário', 1
        END

        IF @Action <> 'delete' BEGIN

            DECLARE @W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS bigint)
                   ,@W_DatabaseId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))

            IF @W_SystemId IS NULL
                THROW 51000, 'Valor de SystemId em @ActualRecord é requerido.', 1
            IF @W_SystemId < CAST('1' AS bigint)
                THROW 51000, 'Valor de SystemId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Id] = @W_SystemId)
                THROW 51000, 'Valor de SystemId em @ActualRecord inexiste em Systems', 1
            IF @W_DatabaseId IS NULL
                THROW 51000, 'Valor de DatabaseId em @ActualRecord é requerido.', 1
            IF @W_DatabaseId < CAST('1' AS bigint)
                THROW 51000, 'Valor de DatabaseId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Id] = @W_DatabaseId)
                THROW 51000, 'Valor de DatabaseId em @ActualRecord inexiste em Databases', 1
            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [SystemId] = @W_SystemId AND [DatabaseId] = @W_DatabaseId)
                    THROW 51000, 'Chave única de UNQ_SystemsDatabases_SystemId_DatabaseId já existe', 1
                IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_SystemsDatabases_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [SystemId] = @W_SystemId AND [DatabaseId] = @W_DatabaseId AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_SystemsDatabases_SystemId_DatabaseId já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[SystemsDatabases] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_SystemsDatabases_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemDatabasePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemDatabasePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemDatabasePersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemDatabasePersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[SystemDatabaseValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'SystemsDatabases'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[SystemDatabaseValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemDatabaseCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemDatabaseCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemDatabaseCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemDatabaseCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'SystemsDatabases'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[SystemDatabaseValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[SystemsDatabases] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS bigint)
                   ,@W_DatabaseId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))

            IF @Action = 'create'
                INSERT INTO [dbo].[SystemsDatabases] ([Id]
                                                ,[SystemId]
                                                ,[DatabaseId]
                                                ,[Name]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_SystemId
                                                 ,@W_DatabaseId
                                                 ,@W_Name
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[SystemsDatabases] SET [Id] = @W_Id
                                              ,[SystemId] = @W_SystemId
                                              ,[DatabaseId] = @W_DatabaseId
                                              ,[Name] = @W_Name
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemsDatabasesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemsDatabasesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemsDatabasesRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemsDatabasesRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'SystemsDatabases') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.SystemId') AS bigint) AS [SystemId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.DatabaseId') AS bigint) AS [DatabaseId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(50)) AS [Name]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'SystemsDatabases'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.SystemId') AS bigint)
                   ,@W_DatabaseId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.DatabaseId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(50))

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_SystemId IS NOT NULL BEGIN
                IF @W_SystemId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de SystemId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[SystemId] = @SystemId'
            END
            IF @W_DatabaseId IS NOT NULL BEGIN
                IF @W_DatabaseId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de DatabaseId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[DatabaseId] = @DatabaseId'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[SystemsDatabases] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@SystemId bigint
                               ,@DatabaseId bigint
                               ,@Name nvarchar(50)'
                           ,@Id = @W_Id
                           ,@SystemId = @W_SystemId
                           ,@DatabaseId = @W_DatabaseId
                           ,@Name = @W_Name
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [SystemId]
                    ,CAST(NULL AS bigint) AS [DatabaseId]
                    ,CAST(NULL AS nvarchar(50)) AS [Name]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''SystemDatabase'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[SystemId]
                              ,[T].[DatabaseId]
                              ,[T].[Name]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[SystemsDatabases] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''SystemDatabase'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[SystemId]
                                  ,[O].[DatabaseId]
                                  ,[O].[Name]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[SystemId]
              ,[DatabaseId]
              ,[Name]
            FROM [dbo].[#result]
        SELECT 'System' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Description]
              ,[R].[ClientName]
              ,[R].[MaxRetryLogins]
              ,[R].[IsOffAir]
            FROM [dbo].[Systems] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [SystemId] =  [R].[Id])
        SELECT 'Database' AS ClassName
              ,[R].[Id]
              ,[R].[ConnectionId]
              ,[R].[Name]
              ,[R].[Alias]
              ,[R].[Description]
              ,[R].[Folder]
              ,[R].[IsLegacy]
              ,[R].[CurrentOperationId]
            FROM [dbo].[Databases] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [DatabaseId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[SystemsDatabasesList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[SystemsDatabasesList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[SystemsDatabasesList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[SystemsDatabasesList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[SystemsDatabases]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[SystemsDatabases] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TableValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TableValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TableValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TableValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Tables', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Tables', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Alias'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Alias'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Description'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ParentTableId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ParentTableId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsLegacy'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsLegacy'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.CurrentId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.CurrentId'), 'bigint') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Tables]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [Alias] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Alias')
                                  AND [Description] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Description')
                                  AND [crudex].[IS_EQUAL]([ParentTableId], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ParentTableId'), 'bigint') = 1
                                  AND [IsLegacy] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsLegacy')
                                  AND [CurrentId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.CurrentId'))
                THROW 51000, 'Registro de Tables alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [TableId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em DatabasesTables', 1
            IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Columns', 1
            IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [ReferenceTableId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Columns', 1
            IF EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [TableId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Indexes', 1
        END ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_ParentTableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ParentTableId') AS bigint)
                   ,@W_IsLegacy bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsLegacy') AS bit)
                   ,@W_CurrentId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.CurrentId') AS bigint)

            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_Alias IS NULL
                THROW 51000, 'Valor de Alias em @ActualRecord é requerido.', 1
            IF @W_Description IS NULL
                THROW 51000, 'Valor de Description em @ActualRecord é requerido.', 1
            IF @W_ParentTableId IS NOT NULL AND @W_ParentTableId < CAST('0' AS bigint)
                THROW 51000, 'Valor de ParentTableId em @ActualRecord deve ser maior que ou igual a 0', 1
            IF @W_IsLegacy IS NULL
                THROW 51000, 'Valor de IsLegacy em @ActualRecord é requerido.', 1
            IF @W_CurrentId IS NULL
                THROW 51000, 'Valor de CurrentId em @ActualRecord é requerido.', 1
            IF @W_CurrentId < CAST('0' AS bigint)
                THROW 51000, 'Valor de CurrentId em @ActualRecord deve ser maior que ou igual a 0', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Tables_Name já existe', 1
                IF EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Alias] = @W_Alias)
                    THROW 51000, 'Chave única de UNQ_Tables_Alias já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Tables_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Alias] = @W_Alias AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Tables_Alias já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TablePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TablePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TablePersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TablePersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[TableValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Tables'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[TableValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TableCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TableCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TableCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TableCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Tables'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[TableValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Tables] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_ParentTableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ParentTableId') AS bigint)
                   ,@W_IsLegacy bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsLegacy') AS bit)
                   ,@W_CurrentId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.CurrentId') AS bigint)

            IF @Action = 'create'
                INSERT INTO [dbo].[Tables] ([Id]
                                                ,[Name]
                                                ,[Alias]
                                                ,[Description]
                                                ,[ParentTableId]
                                                ,[IsLegacy]
                                                ,[CurrentId]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_Name
                                                 ,@W_Alias
                                                 ,@W_Description
                                                 ,@W_ParentTableId
                                                 ,@W_IsLegacy
                                                 ,@W_CurrentId
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Tables] SET [Id] = @W_Id
                                              ,[Name] = @W_Name
                                              ,[Alias] = @W_Alias
                                              ,[Description] = @W_Description
                                              ,[ParentTableId] = @W_ParentTableId
                                              ,[IsLegacy] = @W_IsLegacy
                                              ,[CurrentId] = @W_CurrentId
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TablesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TablesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TablesRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TablesRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Tables') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Alias') AS nvarchar(25)) AS [Alias]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ParentTableId') AS bigint) AS [ParentTableId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsLegacy') AS bit) AS [IsLegacy]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.CurrentId') AS bigint) AS [CurrentId]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Tables'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Alias') AS nvarchar(25))
                   ,@W_IsLegacy bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsLegacy') AS bit)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
            IF @W_Alias IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Alias] = @Alias'
            END
            IF @W_IsLegacy IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsLegacy] = @IsLegacy'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Tables] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@Name nvarchar(25)
                               ,@Alias nvarchar(25)
                               ,@IsLegacy bit'
                           ,@Id = @W_Id
                           ,@Name = @W_Name
                           ,@Alias = @W_Alias
                           ,@IsLegacy = @W_IsLegacy
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS nvarchar(25)) AS [Name]
                    ,CAST(NULL AS nvarchar(25)) AS [Alias]
                    ,CAST(NULL AS nvarchar(50)) AS [Description]
                    ,CAST(NULL AS bigint) AS [ParentTableId]
                    ,CAST(NULL AS bit) AS [IsLegacy]
                    ,CAST(NULL AS bigint) AS [CurrentId]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Table'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[Name]
                              ,[T].[Alias]
                              ,[T].[Description]
                              ,[T].[ParentTableId]
                              ,[T].[IsLegacy]
                              ,[T].[CurrentId]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Tables] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Table'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[Name]
                                  ,[O].[Alias]
                                  ,[O].[Description]
                                  ,[O].[ParentTableId]
                                  ,[O].[IsLegacy]
                                  ,[O].[CurrentId]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[Name]
              ,[Alias]
              ,[Description]
              ,[ParentTableId]
              ,[IsLegacy]
              ,[CurrentId]
            FROM [dbo].[#result]
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TablesList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TablesList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TablesList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TablesList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[Tables]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[Tables] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DatabaseTableValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseTableValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseTableValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabaseTableValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em DatabasesTables', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em DatabasesTables', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.DatabaseId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TableId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[DatabasesTables]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [DatabaseId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.DatabaseId')
                                  AND [TableId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TableId')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'))
                THROW 51000, 'Registro de DatabasesTables alterado por outro usuário', 1
        END

        IF @Action <> 'delete' BEGIN

            DECLARE @W_DatabaseId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS bigint)
                   ,@W_TableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))

            IF @W_DatabaseId IS NULL
                THROW 51000, 'Valor de DatabaseId em @ActualRecord é requerido.', 1
            IF @W_DatabaseId < CAST('1' AS bigint)
                THROW 51000, 'Valor de DatabaseId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Id] = @W_DatabaseId)
                THROW 51000, 'Valor de DatabaseId em @ActualRecord inexiste em Databases', 1
            IF @W_TableId IS NULL
                THROW 51000, 'Valor de TableId em @ActualRecord é requerido.', 1
            IF @W_TableId < CAST('1' AS bigint)
                THROW 51000, 'Valor de TableId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Id] = @W_TableId)
                THROW 51000, 'Valor de TableId em @ActualRecord inexiste em Tables', 1
            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [DatabaseId] = @W_DatabaseId AND [TableId] = @W_TableId)
                    THROW 51000, 'Chave única de UNQ_DatabasesTables_DatabaseId_TableId já existe', 1
                IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_DatabasesTables_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [DatabaseId] = @W_DatabaseId AND [TableId] = @W_TableId AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_DatabasesTables_DatabaseId_TableId já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[DatabasesTables] WHERE [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_DatabasesTables_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DatabaseTablePersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseTablePersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseTablePersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabaseTablePersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[DatabaseTableValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'DatabasesTables'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[DatabaseTableValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DatabaseTableCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabaseTableCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabaseTableCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabaseTableCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'DatabasesTables'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[DatabaseTableValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[DatabasesTables] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_DatabaseId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS bigint)
                   ,@W_TableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))

            IF @Action = 'create'
                INSERT INTO [dbo].[DatabasesTables] ([Id]
                                                ,[DatabaseId]
                                                ,[TableId]
                                                ,[Name]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_DatabaseId
                                                 ,@W_TableId
                                                 ,@W_Name
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[DatabasesTables] SET [Id] = @W_Id
                                              ,[DatabaseId] = @W_DatabaseId
                                              ,[TableId] = @W_TableId
                                              ,[Name] = @W_Name
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DatabasesTablesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabasesTablesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabasesTablesRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabasesTablesRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'DatabasesTables') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.DatabaseId') AS bigint) AS [DatabaseId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.TableId') AS bigint) AS [TableId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(50)) AS [Name]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'DatabasesTables'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_DatabaseId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.DatabaseId') AS bigint)
                   ,@W_TableId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.TableId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(50))

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_DatabaseId IS NOT NULL BEGIN
                IF @W_DatabaseId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de DatabaseId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[DatabaseId] = @DatabaseId'
            END
            IF @W_TableId IS NOT NULL BEGIN
                IF @W_TableId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de TableId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[TableId] = @TableId'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[DatabasesTables] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@DatabaseId bigint
                               ,@TableId bigint
                               ,@Name nvarchar(50)'
                           ,@Id = @W_Id
                           ,@DatabaseId = @W_DatabaseId
                           ,@TableId = @W_TableId
                           ,@Name = @W_Name
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [DatabaseId]
                    ,CAST(NULL AS bigint) AS [TableId]
                    ,CAST(NULL AS nvarchar(50)) AS [Name]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''DatabaseTable'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[DatabaseId]
                              ,[T].[TableId]
                              ,[T].[Name]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[DatabasesTables] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''DatabaseTable'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[DatabaseId]
                                  ,[O].[TableId]
                                  ,[O].[Name]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[DatabaseId]
              ,[TableId]
              ,[Name]
            FROM [dbo].[#result]
        SELECT 'Database' AS ClassName
              ,[R].[Id]
              ,[R].[ConnectionId]
              ,[R].[Name]
              ,[R].[Alias]
              ,[R].[Description]
              ,[R].[Folder]
              ,[R].[IsLegacy]
              ,[R].[CurrentOperationId]
            FROM [dbo].[Databases] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [DatabaseId] =  [R].[Id])
        SELECT 'Table' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Alias]
              ,[R].[Description]
              ,[R].[ParentTableId]
              ,[R].[IsLegacy]
              ,[R].[CurrentId]
            FROM [dbo].[Tables] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [TableId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[DatabasesTablesList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[DatabasesTablesList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[DatabasesTablesList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[DatabasesTablesList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[DatabasesTables]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[DatabasesTables] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[ColumnValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ColumnValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ColumnValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[ColumnValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Columns', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Columns', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TableId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Sequence'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Sequence'), 'smallint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.DomainId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.DomainId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ReferenceTableId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ReferenceTableId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Alias'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Alias'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Description'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Title'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Title'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Caption'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Caption'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Default'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Default'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Minimum'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Minimum'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Maximum'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Maximum'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsPrimarykey'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsPrimarykey'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsAutoIncrement'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsAutoIncrement'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsRequired'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsRequired'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsListable'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsListable'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsFilterable'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsFilterable'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsEditable'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsEditable'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsGridable'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsGridable'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsEncrypted'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsEncrypted'), 'bit') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsInWords'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsInWords'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Columns]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [TableId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TableId')
                                  AND [Sequence] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Sequence')
                                  AND [DomainId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.DomainId')
                                  AND [crudex].[IS_EQUAL]([ReferenceTableId], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ReferenceTableId'), 'bigint') = 1
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [crudex].[IS_EQUAL]([Alias], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Alias'), 'nvarchar') = 1
                                  AND [Description] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Description')
                                  AND [Title] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Title')
                                  AND [Caption] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Caption')
                                  AND [crudex].[IS_EQUAL]([Default], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Default'), 'nvarchar(max)') = 1
                                  AND [crudex].[IS_EQUAL]([Minimum], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Minimum'), 'nvarchar(max)') = 1
                                  AND [crudex].[IS_EQUAL]([Maximum], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Maximum'), 'nvarchar(max)') = 1
                                  AND [crudex].[IS_EQUAL]([IsPrimarykey], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsPrimarykey'), 'bit') = 1
                                  AND [crudex].[IS_EQUAL]([IsAutoIncrement], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsAutoIncrement'), 'bit') = 1
                                  AND [IsRequired] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsRequired')
                                  AND [crudex].[IS_EQUAL]([IsListable], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsListable'), 'bit') = 1
                                  AND [crudex].[IS_EQUAL]([IsFilterable], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsFilterable'), 'bit') = 1
                                  AND [crudex].[IS_EQUAL]([IsEditable], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsEditable'), 'bit') = 1
                                  AND [crudex].[IS_EQUAL]([IsGridable], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsGridable'), 'bit') = 1
                                  AND [crudex].[IS_EQUAL]([IsEncrypted], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsEncrypted'), 'bit') = 1
                                  AND [crudex].[IS_EQUAL]([IsInWords], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsInWords'), 'bit') = 1)
                THROW 51000, 'Registro de Columns alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [ColumnId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Indexkeys', 1
        END ELSE BEGIN

            DECLARE @W_TableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS bigint)
                   ,@W_Sequence smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_DomainId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.DomainId') AS bigint)
                   ,@W_ReferenceTableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ReferenceTableId') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_Title nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Title') AS nvarchar(25))
                   ,@W_Caption nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Caption') AS nvarchar(25))
                   ,@W_Default nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Default') AS nvarchar(max))
                   ,@W_Minimum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(max))
                   ,@W_Maximum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(max))
                   ,@W_IsPrimarykey bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsPrimarykey') AS bit)
                   ,@W_IsAutoIncrement bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsAutoIncrement') AS bit)
                   ,@W_IsRequired bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsRequired') AS bit)
                   ,@W_IsListable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsListable') AS bit)
                   ,@W_IsFilterable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsFilterable') AS bit)
                   ,@W_IsEditable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsEditable') AS bit)
                   ,@W_IsGridable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsGridable') AS bit)
                   ,@W_IsEncrypted bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsEncrypted') AS bit)
                   ,@W_IsInWords bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsInWords') AS bit)

            IF @W_TableId IS NULL
                THROW 51000, 'Valor de TableId em @ActualRecord é requerido.', 1
            IF @W_TableId < CAST('1' AS bigint)
                THROW 51000, 'Valor de TableId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Id] = @W_TableId)
                THROW 51000, 'Valor de TableId em @ActualRecord inexiste em Tables', 1
            IF @W_Sequence IS NULL
                THROW 51000, 'Valor de Sequence em @ActualRecord é requerido.', 1
            IF @W_Sequence < CAST('1' AS smallint)
                THROW 51000, 'Valor de Sequence em @ActualRecord deve ser maior que ou igual a 1', 1
            IF @W_DomainId IS NULL
                THROW 51000, 'Valor de DomainId em @ActualRecord é requerido.', 1
            IF @W_DomainId < CAST('1' AS bigint)
                THROW 51000, 'Valor de DomainId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Domains] WHERE [Id] = @W_DomainId)
                THROW 51000, 'Valor de DomainId em @ActualRecord inexiste em Domains', 1
            IF @W_ReferenceTableId IS NOT NULL AND @W_ReferenceTableId < CAST('1' AS bigint)
                THROW 51000, 'Valor de ReferenceTableId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Id] = @W_ReferenceTableId)
                THROW 51000, 'Valor de ReferenceTableId em @ActualRecord inexiste em Tables', 1
            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_Description IS NULL
                THROW 51000, 'Valor de Description em @ActualRecord é requerido.', 1
            IF @W_Title IS NULL
                THROW 51000, 'Valor de Title em @ActualRecord é requerido.', 1
            IF @W_Caption IS NULL
                THROW 51000, 'Valor de Caption em @ActualRecord é requerido.', 1
            IF @W_IsRequired IS NULL
                THROW 51000, 'Valor de IsRequired em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_TableId AND [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Columns_TableId_Name já existe', 1
                IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_TableId AND [Sequence] = @W_Sequence)
                    THROW 51000, 'Chave única de UNQ_Columns_TableId_Sequence já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_TableId AND [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Columns_TableId_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [TableId] = @W_TableId AND [Sequence] = @W_Sequence AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Columns_TableId_Sequence já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[ColumnPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ColumnPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ColumnPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[ColumnPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[ColumnValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Columns'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[ColumnValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[ColumnCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ColumnCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ColumnCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[ColumnCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Columns'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[ColumnValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Columns] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_TableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS bigint)
                   ,@W_Sequence smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_DomainId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.DomainId') AS bigint)
                   ,@W_ReferenceTableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ReferenceTableId') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Alias') AS nvarchar(25))
                   ,@W_Description nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Description') AS nvarchar(50))
                   ,@W_Title nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Title') AS nvarchar(25))
                   ,@W_Caption nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Caption') AS nvarchar(25))
                   ,@W_Default nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Default') AS nvarchar(max))
                   ,@W_Minimum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Minimum') AS nvarchar(max))
                   ,@W_Maximum nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Maximum') AS nvarchar(max))
                   ,@W_IsPrimarykey bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsPrimarykey') AS bit)
                   ,@W_IsAutoIncrement bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsAutoIncrement') AS bit)
                   ,@W_IsRequired bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsRequired') AS bit)
                   ,@W_IsListable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsListable') AS bit)
                   ,@W_IsFilterable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsFilterable') AS bit)
                   ,@W_IsEditable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsEditable') AS bit)
                   ,@W_IsGridable bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsGridable') AS bit)
                   ,@W_IsEncrypted bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsEncrypted') AS bit)
                   ,@W_IsInWords bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsInWords') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Columns] ([Id]
                                                ,[TableId]
                                                ,[Sequence]
                                                ,[DomainId]
                                                ,[ReferenceTableId]
                                                ,[Name]
                                                ,[Alias]
                                                ,[Description]
                                                ,[Title]
                                                ,[Caption]
                                                ,[Default]
                                                ,[Minimum]
                                                ,[Maximum]
                                                ,[IsPrimarykey]
                                                ,[IsAutoIncrement]
                                                ,[IsRequired]
                                                ,[IsListable]
                                                ,[IsFilterable]
                                                ,[IsEditable]
                                                ,[IsGridable]
                                                ,[IsEncrypted]
                                                ,[IsInWords]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_TableId
                                                 ,@W_Sequence
                                                 ,@W_DomainId
                                                 ,@W_ReferenceTableId
                                                 ,@W_Name
                                                 ,@W_Alias
                                                 ,@W_Description
                                                 ,@W_Title
                                                 ,@W_Caption
                                                 ,@W_Default
                                                 ,@W_Minimum
                                                 ,@W_Maximum
                                                 ,@W_IsPrimarykey
                                                 ,@W_IsAutoIncrement
                                                 ,@W_IsRequired
                                                 ,@W_IsListable
                                                 ,@W_IsFilterable
                                                 ,@W_IsEditable
                                                 ,@W_IsGridable
                                                 ,@W_IsEncrypted
                                                 ,@W_IsInWords
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Columns] SET [Id] = @W_Id
                                              ,[TableId] = @W_TableId
                                              ,[Sequence] = @W_Sequence
                                              ,[DomainId] = @W_DomainId
                                              ,[ReferenceTableId] = @W_ReferenceTableId
                                              ,[Name] = @W_Name
                                              ,[Alias] = @W_Alias
                                              ,[Description] = @W_Description
                                              ,[Title] = @W_Title
                                              ,[Caption] = @W_Caption
                                              ,[Default] = @W_Default
                                              ,[Minimum] = @W_Minimum
                                              ,[Maximum] = @W_Maximum
                                              ,[IsPrimarykey] = @W_IsPrimarykey
                                              ,[IsAutoIncrement] = @W_IsAutoIncrement
                                              ,[IsRequired] = @W_IsRequired
                                              ,[IsListable] = @W_IsListable
                                              ,[IsFilterable] = @W_IsFilterable
                                              ,[IsEditable] = @W_IsEditable
                                              ,[IsGridable] = @W_IsGridable
                                              ,[IsEncrypted] = @W_IsEncrypted
                                              ,[IsInWords] = @W_IsInWords
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[ColumnsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[ColumnsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[ColumnsRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[ColumnsRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Columns') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.TableId') AS bigint) AS [TableId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Sequence') AS smallint) AS [Sequence]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.DomainId') AS bigint) AS [DomainId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ReferenceTableId') AS bigint) AS [ReferenceTableId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(25)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Alias') AS nvarchar(25)) AS [Alias]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Description') AS nvarchar(50)) AS [Description]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Title') AS nvarchar(25)) AS [Title]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Caption') AS nvarchar(25)) AS [Caption]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Default') AS nvarchar(max)) AS [Default]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Minimum') AS nvarchar(max)) AS [Minimum]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Maximum') AS nvarchar(max)) AS [Maximum]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsPrimarykey') AS bit) AS [IsPrimarykey]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsAutoIncrement') AS bit) AS [IsAutoIncrement]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsRequired') AS bit) AS [IsRequired]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsListable') AS bit) AS [IsListable]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsFilterable') AS bit) AS [IsFilterable]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsEditable') AS bit) AS [IsEditable]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsGridable') AS bit) AS [IsGridable]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsEncrypted') AS bit) AS [IsEncrypted]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsInWords') AS bit) AS [IsInWords]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_TableId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.TableId') AS bigint)
                   ,@W_DomainId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.DomainId') AS bigint)
                   ,@W_ReferenceTableId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.ReferenceTableId') AS bigint)
                   ,@W_Name nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(25))
                   ,@W_Alias nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Alias') AS nvarchar(25))
                   ,@W_IsAutoIncrement bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsAutoIncrement') AS bit)
                   ,@W_IsRequired bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsRequired') AS bit)
                   ,@W_IsListable bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsListable') AS bit)
                   ,@W_IsFilterable bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsFilterable') AS bit)
                   ,@W_IsEditable bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsEditable') AS bit)
                   ,@W_IsGridable bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsGridable') AS bit)
                   ,@W_IsEncrypted bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsEncrypted') AS bit)
                   ,@W_IsInWords bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsInWords') AS bit)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_TableId IS NOT NULL BEGIN
                IF @W_TableId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de TableId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[TableId] = @TableId'
            END
            IF @W_DomainId IS NOT NULL BEGIN
                IF @W_DomainId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de DomainId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[DomainId] = @DomainId'
            END
            IF @W_ReferenceTableId IS NOT NULL BEGIN
                IF @W_ReferenceTableId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de ReferenceTableId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[ReferenceTableId] = @ReferenceTableId'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
            IF @W_Alias IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Alias] = @Alias'
            END
            IF @W_IsAutoIncrement IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsAutoIncrement] = @IsAutoIncrement'
            END
            IF @W_IsRequired IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsRequired] = @IsRequired'
            END
            IF @W_IsListable IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsListable] = @IsListable'
            END
            IF @W_IsFilterable IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsFilterable] = @IsFilterable'
            END
            IF @W_IsEditable IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsEditable] = @IsEditable'
            END
            IF @W_IsGridable IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsGridable] = @IsGridable'
            END
            IF @W_IsEncrypted IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsEncrypted] = @IsEncrypted'
            END
            IF @W_IsInWords IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsInWords] = @IsInWords'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Columns] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@TableId bigint
                               ,@DomainId bigint
                               ,@ReferenceTableId bigint
                               ,@Name nvarchar(25)
                               ,@Alias nvarchar(25)
                               ,@IsAutoIncrement bit
                               ,@IsRequired bit
                               ,@IsListable bit
                               ,@IsFilterable bit
                               ,@IsEditable bit
                               ,@IsGridable bit
                               ,@IsEncrypted bit
                               ,@IsInWords bit'
                           ,@Id = @W_Id
                           ,@TableId = @W_TableId
                           ,@DomainId = @W_DomainId
                           ,@ReferenceTableId = @W_ReferenceTableId
                           ,@Name = @W_Name
                           ,@Alias = @W_Alias
                           ,@IsAutoIncrement = @W_IsAutoIncrement
                           ,@IsRequired = @W_IsRequired
                           ,@IsListable = @W_IsListable
                           ,@IsFilterable = @W_IsFilterable
                           ,@IsEditable = @W_IsEditable
                           ,@IsGridable = @W_IsGridable
                           ,@IsEncrypted = @W_IsEncrypted
                           ,@IsInWords = @W_IsInWords
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [TableId]
                    ,CAST(NULL AS smallint) AS [Sequence]
                    ,CAST(NULL AS bigint) AS [DomainId]
                    ,CAST(NULL AS bigint) AS [ReferenceTableId]
                    ,CAST(NULL AS nvarchar(25)) AS [Name]
                    ,CAST(NULL AS nvarchar(25)) AS [Alias]
                    ,CAST(NULL AS nvarchar(50)) AS [Description]
                    ,CAST(NULL AS nvarchar(25)) AS [Title]
                    ,CAST(NULL AS nvarchar(25)) AS [Caption]
                    ,CAST(NULL AS nvarchar(max)) AS [Default]
                    ,CAST(NULL AS nvarchar(max)) AS [Minimum]
                    ,CAST(NULL AS nvarchar(max)) AS [Maximum]
                    ,CAST(NULL AS bit) AS [IsPrimarykey]
                    ,CAST(NULL AS bit) AS [IsAutoIncrement]
                    ,CAST(NULL AS bit) AS [IsRequired]
                    ,CAST(NULL AS bit) AS [IsListable]
                    ,CAST(NULL AS bit) AS [IsFilterable]
                    ,CAST(NULL AS bit) AS [IsEditable]
                    ,CAST(NULL AS bit) AS [IsGridable]
                    ,CAST(NULL AS bit) AS [IsEncrypted]
                    ,CAST(NULL AS bit) AS [IsInWords]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Column'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[TableId]
                              ,[T].[Sequence]
                              ,[T].[DomainId]
                              ,[T].[ReferenceTableId]
                              ,[T].[Name]
                              ,[T].[Alias]
                              ,[T].[Description]
                              ,[T].[Title]
                              ,[T].[Caption]
                              ,[T].[Default]
                              ,[T].[Minimum]
                              ,[T].[Maximum]
                              ,[T].[IsPrimarykey]
                              ,[T].[IsAutoIncrement]
                              ,[T].[IsRequired]
                              ,[T].[IsListable]
                              ,[T].[IsFilterable]
                              ,[T].[IsEditable]
                              ,[T].[IsGridable]
                              ,[T].[IsEncrypted]
                              ,[T].[IsInWords]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Columns] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Column'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[TableId]
                                  ,[O].[Sequence]
                                  ,[O].[DomainId]
                                  ,[O].[ReferenceTableId]
                                  ,[O].[Name]
                                  ,[O].[Alias]
                                  ,[O].[Description]
                                  ,[O].[Title]
                                  ,[O].[Caption]
                                  ,[O].[Default]
                                  ,[O].[Minimum]
                                  ,[O].[Maximum]
                                  ,[O].[IsPrimarykey]
                                  ,[O].[IsAutoIncrement]
                                  ,[O].[IsRequired]
                                  ,[O].[IsListable]
                                  ,[O].[IsFilterable]
                                  ,[O].[IsEditable]
                                  ,[O].[IsGridable]
                                  ,[O].[IsEncrypted]
                                  ,[O].[IsInWords]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[TableId]
              ,[Sequence]
              ,[DomainId]
              ,[ReferenceTableId]
              ,[Name]
              ,[Alias]
              ,[Description]
              ,[Title]
              ,[Caption]
              ,[Default]
              ,[Minimum]
              ,[Maximum]
              ,[IsPrimarykey]
              ,[IsAutoIncrement]
              ,[IsRequired]
              ,[IsListable]
              ,[IsFilterable]
              ,[IsEditable]
              ,[IsGridable]
              ,[IsEncrypted]
              ,[IsInWords]
            FROM [dbo].[#result]
        SELECT 'Table' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Alias]
              ,[R].[Description]
              ,[R].[ParentTableId]
              ,[R].[IsLegacy]
              ,[R].[CurrentId]
            FROM [dbo].[Tables] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [TableId] =  [R].[Id])
        SELECT 'Domain' AS ClassName
              ,[R].[Id]
              ,[R].[TypeId]
              ,[R].[MaskId]
              ,[R].[Name]
              ,[R].[Length]
              ,[R].[Decimals]
              ,[R].[ValidValues]
              ,[R].[Default]
              ,[R].[Minimum]
              ,[R].[Maximum]
              ,[R].[Codification]
            FROM [dbo].[Domains] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [DomainId] =  [R].[Id])
        SELECT 'Table' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Alias]
              ,[R].[Description]
              ,[R].[ParentTableId]
              ,[R].[IsLegacy]
              ,[R].[CurrentId]
            FROM [dbo].[Tables] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [ReferenceTableId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO


/**********************************************************************************
Criar stored procedure [dbo].[IndexValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[IndexValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Indexes', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Indexes', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.DatabaseId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TableId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsUnique'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsUnique'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Indexes]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [DatabaseId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.DatabaseId')
                                  AND [TableId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TableId')
                                  AND [Name] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Name')
                                  AND [IsUnique] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsUnique'))
                THROW 51000, 'Registro de Indexes alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Indexkeys', 1
        END ELSE BEGIN

            DECLARE @W_DatabaseId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS bigint)
                   ,@W_TableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))
                   ,@W_IsUnique bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsUnique') AS bit)

            IF @W_DatabaseId IS NULL
                THROW 51000, 'Valor de DatabaseId em @ActualRecord é requerido.', 1
            IF @W_DatabaseId < CAST('1' AS bigint)
                THROW 51000, 'Valor de DatabaseId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Databases] WHERE [Id] = @W_DatabaseId)
                THROW 51000, 'Valor de DatabaseId em @ActualRecord inexiste em Databases', 1
            IF @W_TableId IS NULL
                THROW 51000, 'Valor de TableId em @ActualRecord é requerido.', 1
            IF @W_TableId < CAST('1' AS bigint)
                THROW 51000, 'Valor de TableId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Tables] WHERE [Id] = @W_TableId)
                THROW 51000, 'Valor de TableId em @ActualRecord inexiste em Tables', 1
            IF @W_Name IS NULL
                THROW 51000, 'Valor de Name em @ActualRecord é requerido.', 1
            IF @W_IsUnique IS NULL
                THROW 51000, 'Valor de IsUnique em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [DatabaseId] = @W_DatabaseId AND [Name] = @W_Name)
                    THROW 51000, 'Chave única de UNQ_Indexes_DatabaseId_Name já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [DatabaseId] = @W_DatabaseId AND [Name] = @W_Name AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Indexes_DatabaseId_Name já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[IndexPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[IndexPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[IndexValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Indexes'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[IndexValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[IndexCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[IndexCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Indexes'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[IndexValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Indexes] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_DatabaseId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.DatabaseId') AS bigint)
                   ,@W_TableId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Name') AS nvarchar(50))
                   ,@W_IsUnique bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsUnique') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Indexes] ([Id]
                                                ,[DatabaseId]
                                                ,[TableId]
                                                ,[Name]
                                                ,[IsUnique]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_DatabaseId
                                                 ,@W_TableId
                                                 ,@W_Name
                                                 ,@W_IsUnique
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Indexes] SET [Id] = @W_Id
                                              ,[DatabaseId] = @W_DatabaseId
                                              ,[TableId] = @W_TableId
                                              ,[Name] = @W_Name
                                              ,[IsUnique] = @W_IsUnique
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[IndexesRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexesRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexesRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[IndexesRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Indexes') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.DatabaseId') AS bigint) AS [DatabaseId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.TableId') AS bigint) AS [TableId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Name') AS nvarchar(50)) AS [Name]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsUnique') AS bit) AS [IsUnique]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Indexes'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_TableId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.TableId') AS bigint)
                   ,@W_Name nvarchar(50) = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Name') AS nvarchar(50))
                   ,@W_IsUnique bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsUnique') AS bit)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_TableId IS NOT NULL BEGIN
                IF @W_TableId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de TableId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[TableId] = @TableId'
            END
            IF @W_Name IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[Name] = @Name'
            END
            IF @W_IsUnique IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsUnique] = @IsUnique'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Indexes] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@TableId bigint
                               ,@Name nvarchar(50)
                               ,@IsUnique bit'
                           ,@Id = @W_Id
                           ,@TableId = @W_TableId
                           ,@Name = @W_Name
                           ,@IsUnique = @W_IsUnique
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [DatabaseId]
                    ,CAST(NULL AS bigint) AS [TableId]
                    ,CAST(NULL AS nvarchar(50)) AS [Name]
                    ,CAST(NULL AS bit) AS [IsUnique]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Index'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[DatabaseId]
                              ,[T].[TableId]
                              ,[T].[Name]
                              ,[T].[IsUnique]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Indexes] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Index'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[DatabaseId]
                                  ,[O].[TableId]
                                  ,[O].[Name]
                                  ,[O].[IsUnique]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[DatabaseId]
              ,[TableId]
              ,[Name]
              ,[IsUnique]
            FROM [dbo].[#result]
        SELECT 'Database' AS ClassName
              ,[R].[Id]
              ,[R].[ConnectionId]
              ,[R].[Name]
              ,[R].[Alias]
              ,[R].[Description]
              ,[R].[Folder]
              ,[R].[IsLegacy]
              ,[R].[CurrentOperationId]
            FROM [dbo].[Databases] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [DatabaseId] =  [R].[Id])
        SELECT 'Table' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Alias]
              ,[R].[Description]
              ,[R].[ParentTableId]
              ,[R].[IsLegacy]
              ,[R].[CurrentId]
            FROM [dbo].[Tables] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [TableId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[IndexesList]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexesList]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexesList] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[IndexesList](@Value NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @Value IS NULL
            SET @Value = ''
        SELECT [Id]
            INTO [dbo].[#query]
            FROM [dbo].[Indexes]
            WHERE [Name] LIKE '%' + @Value + '%'
            ORDER BY [Name]

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT
               ,@sql NVARCHAR(MAX)

        CREATE UNIQUE INDEX [#unqQuery] ON [dbo].[#query]([Id])        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SET @sql = 'SELECT [T].[Id]
                          ,[T].[Name]
                       FROM [dbo].[#query] [Q]
                           INNER JOIN [dbo].[Indexes] [T] ON [T].[Id] = [Q].[Id]
                       ORDER BY [T].[Name]
                       OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                       FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[IndexkeyValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexkeyValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexkeyValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[IndexkeyValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Indexkeys', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Indexkeys', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IndexId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IndexId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Sequence'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Sequence'), 'smallint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ColumnId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ColumnId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsDescending'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsDescending'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Indexkeys]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [IndexId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IndexId')
                                  AND [Sequence] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Sequence')
                                  AND [ColumnId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ColumnId')
                                  AND [IsDescending] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsDescending'))
                THROW 51000, 'Registro de Indexkeys alterado por outro usuário', 1
        END

        IF @Action <> 'delete' BEGIN

            DECLARE @W_IndexId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IndexId') AS bigint)
                   ,@W_Sequence smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_ColumnId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ColumnId') AS bigint)
                   ,@W_IsDescending bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsDescending') AS bit)

            IF @W_IndexId IS NULL
                THROW 51000, 'Valor de IndexId em @ActualRecord é requerido.', 1
            IF @W_IndexId < CAST('1' AS bigint)
                THROW 51000, 'Valor de IndexId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Indexes] WHERE [Id] = @W_IndexId)
                THROW 51000, 'Valor de IndexId em @ActualRecord inexiste em Indexes', 1
            IF @W_Sequence IS NULL
                THROW 51000, 'Valor de Sequence em @ActualRecord é requerido.', 1
            IF @W_Sequence < CAST('1' AS smallint)
                THROW 51000, 'Valor de Sequence em @ActualRecord deve ser maior que ou igual a 1', 1
            IF @W_ColumnId IS NULL
                THROW 51000, 'Valor de ColumnId em @ActualRecord é requerido.', 1
            IF @W_ColumnId < CAST('1' AS bigint)
                THROW 51000, 'Valor de ColumnId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE [Id] = @W_ColumnId)
                THROW 51000, 'Valor de ColumnId em @ActualRecord inexiste em Columns', 1
            IF @W_IsDescending IS NULL
                THROW 51000, 'Valor de IsDescending em @ActualRecord é requerido.', 1
            IF @Action = 'create' BEGIN
                IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_IndexId AND [Sequence] = @W_Sequence)
                    THROW 51000, 'Chave única de UNQ_Indexkeys_IndexId_Sequence já existe', 1
                IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_IndexId AND [ColumnId] = @W_ColumnId)
                    THROW 51000, 'Chave única de UNQ_Indexkeys_IndexId_ColumnId já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_IndexId AND [Sequence] = @W_Sequence AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Indexkeys_IndexId_Sequence já existe', 1
            ELSE IF EXISTS(SELECT 1 FROM [dbo].[Indexkeys] WHERE [IndexId] = @W_IndexId AND [ColumnId] = @W_ColumnId AND [Id] <> @W_Id)
                THROW 51000, 'Chave única de UNQ_Indexkeys_IndexId_ColumnId já existe', 1
            END
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[IndexkeyPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexkeyPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexkeyPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[IndexkeyPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[IndexkeyValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Indexkeys'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[IndexkeyValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[IndexkeyCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexkeyCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexkeyCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[IndexkeyCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Indexkeys'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[IndexkeyValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Indexkeys] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_IndexId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IndexId') AS bigint)
                   ,@W_Sequence smallint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Sequence') AS smallint)
                   ,@W_ColumnId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ColumnId') AS bigint)
                   ,@W_IsDescending bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsDescending') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Indexkeys] ([Id]
                                                ,[IndexId]
                                                ,[Sequence]
                                                ,[ColumnId]
                                                ,[IsDescending]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_IndexId
                                                 ,@W_Sequence
                                                 ,@W_ColumnId
                                                 ,@W_IsDescending
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Indexkeys] SET [Id] = @W_Id
                                              ,[IndexId] = @W_IndexId
                                              ,[Sequence] = @W_Sequence
                                              ,[ColumnId] = @W_ColumnId
                                              ,[IsDescending] = @W_IsDescending
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[IndexkeysRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[IndexkeysRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[IndexkeysRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[IndexkeysRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Indexkeys') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IndexId') AS bigint) AS [IndexId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Sequence') AS smallint) AS [Sequence]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ColumnId') AS bigint) AS [ColumnId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsDescending') AS bit) AS [IsDescending]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Indexkeys'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_IndexId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IndexId') AS bigint)
                   ,@W_ColumnId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.ColumnId') AS bigint)
                   ,@W_IsDescending bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsDescending') AS bit)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_IndexId IS NOT NULL BEGIN
                IF @W_IndexId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de IndexId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[IndexId] = @IndexId'
            END
            IF @W_ColumnId IS NOT NULL BEGIN
                IF @W_ColumnId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de ColumnId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[ColumnId] = @ColumnId'
            END
            IF @W_IsDescending IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsDescending] = @IsDescending'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Indexkeys] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@IndexId bigint
                               ,@ColumnId bigint
                               ,@IsDescending bit'
                           ,@Id = @W_Id
                           ,@IndexId = @W_IndexId
                           ,@ColumnId = @W_ColumnId
                           ,@IsDescending = @W_IsDescending
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [IndexId]
                    ,CAST(NULL AS smallint) AS [Sequence]
                    ,CAST(NULL AS bigint) AS [ColumnId]
                    ,CAST(NULL AS bit) AS [IsDescending]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Indexkey'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[IndexId]
                              ,[T].[Sequence]
                              ,[T].[ColumnId]
                              ,[T].[IsDescending]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Indexkeys] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Indexkey'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[IndexId]
                                  ,[O].[Sequence]
                                  ,[O].[ColumnId]
                                  ,[O].[IsDescending]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[IndexId]
              ,[Sequence]
              ,[ColumnId]
              ,[IsDescending]
            FROM [dbo].[#result]
        SELECT 'Index' AS ClassName
              ,[R].[Id]
              ,[R].[DatabaseId]
              ,[R].[TableId]
              ,[R].[Name]
              ,[R].[IsUnique]
            FROM [dbo].[Indexes] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [IndexId] =  [R].[Id])
        SELECT 'Column' AS ClassName
              ,[R].[Id]
              ,[R].[TableId]
              ,[R].[Sequence]
              ,[R].[DomainId]
              ,[R].[ReferenceTableId]
              ,[R].[Name]
              ,[R].[Alias]
              ,[R].[Description]
              ,[R].[Title]
              ,[R].[Caption]
              ,[R].[Default]
              ,[R].[Minimum]
              ,[R].[Maximum]
              ,[R].[IsPrimarykey]
              ,[R].[IsAutoIncrement]
              ,[R].[IsRequired]
              ,[R].[IsListable]
              ,[R].[IsFilterable]
              ,[R].[IsEditable]
              ,[R].[IsGridable]
              ,[R].[IsEncrypted]
              ,[R].[IsInWords]
            FROM [dbo].[Columns] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [ColumnId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO


/**********************************************************************************
Criar stored procedure [dbo].[LoginValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[LoginValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[LoginValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[LoginValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Logins', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Logins', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.SystemId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.UserId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.UserId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.PublicKey'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.PublicKey'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsLogged'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsLogged'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Logins]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [SystemId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.SystemId')
                                  AND [UserId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.UserId')
                                  AND [PublicKey] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.PublicKey')
                                  AND [IsLogged] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsLogged'))
                THROW 51000, 'Registro de Logins alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [LoginId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Transactions', 1
        END ELSE BEGIN

            DECLARE @W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS bigint)
                   ,@W_UserId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.UserId') AS bigint)
                   ,@W_PublicKey nvarchar(256) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.PublicKey') AS nvarchar(256))
                   ,@W_IsLogged bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsLogged') AS bit)

            IF @W_SystemId IS NULL
                THROW 51000, 'Valor de SystemId em @ActualRecord é requerido.', 1
            IF @W_SystemId < CAST('1' AS bigint)
                THROW 51000, 'Valor de SystemId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Systems] WHERE [Id] = @W_SystemId)
                THROW 51000, 'Valor de SystemId em @ActualRecord inexiste em Systems', 1
            IF @W_UserId IS NULL
                THROW 51000, 'Valor de UserId em @ActualRecord é requerido.', 1
            IF @W_UserId < CAST('1' AS bigint)
                THROW 51000, 'Valor de UserId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Users] WHERE [Id] = @W_UserId)
                THROW 51000, 'Valor de UserId em @ActualRecord inexiste em Users', 1
            IF @W_PublicKey IS NULL
                THROW 51000, 'Valor de PublicKey em @ActualRecord é requerido.', 1
            IF @W_IsLogged IS NULL
                THROW 51000, 'Valor de IsLogged em @ActualRecord é requerido.', 1
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[LoginPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[LoginPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[LoginPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[LoginPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[LoginValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Logins'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[LoginValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[LoginCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[LoginCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[LoginCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[LoginCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Logins'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[LoginValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Logins] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.SystemId') AS bigint)
                   ,@W_UserId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.UserId') AS bigint)
                   ,@W_PublicKey nvarchar(256) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.PublicKey') AS nvarchar(256))
                   ,@W_IsLogged bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsLogged') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Logins] ([Id]
                                                ,[SystemId]
                                                ,[UserId]
                                                ,[PublicKey]
                                                ,[IsLogged]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_SystemId
                                                 ,@W_UserId
                                                 ,@W_PublicKey
                                                 ,@W_IsLogged
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Logins] SET [Id] = @W_Id
                                              ,[SystemId] = @W_SystemId
                                              ,[UserId] = @W_UserId
                                              ,[PublicKey] = @W_PublicKey
                                              ,[IsLogged] = @W_IsLogged
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[LoginsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[LoginsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[LoginsRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[LoginsRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Logins') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.SystemId') AS bigint) AS [SystemId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.UserId') AS bigint) AS [UserId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.PublicKey') AS nvarchar(256)) AS [PublicKey]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsLogged') AS bit) AS [IsLogged]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Logins'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)
                   ,@W_SystemId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.SystemId') AS bigint)
                   ,@W_UserId bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.UserId') AS bigint)
                   ,@W_IsLogged bit = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.IsLogged') AS bit)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
            IF @W_SystemId IS NOT NULL BEGIN
                IF @W_SystemId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de SystemId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[SystemId] = @SystemId'
            END
            IF @W_UserId IS NOT NULL BEGIN
                IF @W_UserId < CAST('1' AS bigint)
                    THROW 51000, 'Valor de UserId deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[UserId] = @UserId'
            END
            IF @W_IsLogged IS NOT NULL BEGIN
                SET @Where = @Where + ' AND [T].[IsLogged] = @IsLogged'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Logins] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint
                               ,@SystemId bigint
                               ,@UserId bigint
                               ,@IsLogged bit'
                           ,@Id = @W_Id
                           ,@SystemId = @W_SystemId
                           ,@UserId = @W_UserId
                           ,@IsLogged = @W_IsLogged
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [SystemId]
                    ,CAST(NULL AS bigint) AS [UserId]
                    ,CAST(NULL AS nvarchar(256)) AS [PublicKey]
                    ,CAST(NULL AS bit) AS [IsLogged]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Login'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[SystemId]
                              ,[T].[UserId]
                              ,[T].[PublicKey]
                              ,[T].[IsLogged]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Logins] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Login'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[SystemId]
                                  ,[O].[UserId]
                                  ,[O].[PublicKey]
                                  ,[O].[IsLogged]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[SystemId]
              ,[UserId]
              ,[PublicKey]
              ,[IsLogged]
            FROM [dbo].[#result]
        SELECT 'System' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Description]
              ,[R].[ClientName]
              ,[R].[MaxRetryLogins]
              ,[R].[IsOffAir]
            FROM [dbo].[Systems] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [SystemId] =  [R].[Id])
        SELECT 'User' AS ClassName
              ,[R].[Id]
              ,[R].[Name]
              ,[R].[Password]
              ,[R].[FullName]
              ,[R].[RetryLogins]
              ,[R].[IsActive]
            FROM [dbo].[Users] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [UserId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO


/**********************************************************************************
Criar stored procedure [dbo].[TransactionValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TransactionValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TransactionValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TransactionValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Transactions', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Transactions', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.LoginId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.LoginId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsConfirmed'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsConfirmed'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Transactions]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [LoginId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.LoginId')
                                  AND [IsConfirmed] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsConfirmed'))
                THROW 51000, 'Registro de Transactions alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Operations] WHERE [TransactionId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Operations', 1
        END ELSE BEGIN

            DECLARE @W_LoginId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.LoginId') AS bigint)
                   ,@W_IsConfirmed bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsConfirmed') AS bit)

            IF @W_LoginId IS NULL
                THROW 51000, 'Valor de LoginId em @ActualRecord é requerido.', 1
            IF @W_LoginId < CAST('1' AS bigint)
                THROW 51000, 'Valor de LoginId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Logins] WHERE [Id] = @W_LoginId)
                THROW 51000, 'Valor de LoginId em @ActualRecord inexiste em Logins', 1
            IF @W_IsConfirmed IS NULL
                THROW 51000, 'Valor de IsConfirmed em @ActualRecord é requerido.', 1
            IF @W_IsConfirmed < CAST('1' AS bit)
                THROW 51000, 'Valor de IsConfirmed em @ActualRecord deve ser maior que ou igual a 1', 1
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TransactionPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TransactionPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TransactionPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TransactionPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[TransactionValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Transactions'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[TransactionValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TransactionCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TransactionCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TransactionCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TransactionCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Transactions'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[TransactionValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Transactions] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_LoginId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.LoginId') AS bigint)
                   ,@W_IsConfirmed bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsConfirmed') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Transactions] ([Id]
                                                ,[LoginId]
                                                ,[IsConfirmed]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_LoginId
                                                 ,@W_IsConfirmed
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Transactions] SET [Id] = @W_Id
                                              ,[LoginId] = @W_LoginId
                                              ,[IsConfirmed] = @W_IsConfirmed
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[TransactionsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[TransactionsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[TransactionsRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[TransactionsRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Transactions') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.LoginId') AS bigint) AS [LoginId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsConfirmed') AS bit) AS [IsConfirmed]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Transactions'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Transactions] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint'
                           ,@Id = @W_Id
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [LoginId]
                    ,CAST(NULL AS bit) AS [IsConfirmed]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Transaction'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[LoginId]
                              ,[T].[IsConfirmed]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Transactions] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Transaction'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[LoginId]
                                  ,[O].[IsConfirmed]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[LoginId]
              ,[IsConfirmed]
            FROM [dbo].[#result]
        SELECT 'Login' AS ClassName
              ,[R].[Id]
              ,[R].[SystemId]
              ,[R].[UserId]
              ,[R].[PublicKey]
              ,[R].[IsLogged]
            FROM [dbo].[Logins] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [LoginId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO


/**********************************************************************************
Criar stored procedure [dbo].[OperationValidate]
**********************************************************************************/
IF(SELECT object_id('[dbo].[OperationValidate]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[OperationValidate] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[OperationValidate](@LoginId BIGINT
                                               ,@UserName NVARCHAR(25)
                                               ,@Action NVARCHAR(15)
                                               ,@OriginalRecord NVARCHAR(max)
                                               ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName é requerido', 1
        IF @Action IS NULL
            THROW 51000, 'Valor de @Action é requerido', 1
        IF @Action NOT IN ('create', 'update', 'delete')
            THROW 51000, 'Valor de @Action é inválido', 1
        IF @ActualRecord IS NULL
            THROW 51000, 'Valor de @ActualRecord é requerido', 1
        IF ISJSON(@ActualRecord) = 0
            THROW 51000, 'Valor de @ActualRecord não está no formato JSON', 1
        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)
               ,@IsConfirmed BIT
               ,@CreatedBy NVARCHAR(25)
               ,@W_Id AS bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @TransactionId IS NULL
            THROW 51000, 'Não existe transação para este @LoginId', 1
        SELECT @IsConfirmed = [IsConfirmed]
              ,@CreatedBy = [CreatedBy]
            FROM [dbo].[Transactions]
            WHERE [Id] = @TransactionId
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1;
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        IF @W_Id IS NULL BEGIN
            SET @ErrorMessage = 'Valor de Id em @ActualRecord é requerido.';
            THROW 51000, @ErrorMessage, 1
        END
        IF @W_Id < CAST('1' AS bigint)
            THROW 51000, 'Valor de Id em @ActualRecord deve ser maior que ou igual a 1', 1
        IF EXISTS(SELECT 1 FROM [dbo].[Columns] WHERE Id = @W_Id) BEGIN
            IF @Action = 'create'
                THROW 51000, 'Chave-primária já existe em Operations', 1
        END ELSE IF @Action <> 'create'
            THROW 51000, 'Chave-primária não existe em Operations', 1
        IF @Action <> 'create' BEGIN
            IF @OriginalRecord IS NULL
                THROW 51000, 'Valor de @OriginalRecord é requerido', 1
            IF ISJSON(@OriginalRecord) = 0
                THROW 51000, 'Valor de @OriginalRecord não está no formato JSON', 1
            IF @Action = 'update'
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.TransactionId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TransactionId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableName'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TableName'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ParentOperationId'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ParentOperationId'), 'bigint') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.Action'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Action'), 'nvarchar') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.OriginalRecord'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.OriginalRecord'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.ActualRecord'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ActualRecord'), 'nvarchar(max)') = 1
                AND [crudex].[IS_EQUAL]([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsConfirmed'), [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsConfirmed'), 'bit') = 1
                THROW 51000, 'Nenhuma alteração feita no registro', 1
            IF NOT EXISTS(SELECT 1
                            FROM [dbo].[Operations]
                            WHERE [Id] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Id')
                                  AND [TransactionId] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TransactionId')
                                  AND [TableName] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.TableName')
                                  AND [crudex].[IS_EQUAL]([ParentOperationId], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ParentOperationId'), 'bigint') = 1
                                  AND [Action] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.Action')
                                  AND [crudex].[IS_EQUAL]([OriginalRecord], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.OriginalRecord'), 'nvarchar(max)') = 1
                                  AND [ActualRecord] = [crudex].[JSON_EXTRACT](@OriginalRecord, '$.ActualRecord')
                                  AND [crudex].[IS_EQUAL]([IsConfirmed], [crudex].[JSON_EXTRACT](@OriginalRecord, '$.IsConfirmed'), 'bit') = 1)
                THROW 51000, 'Registro de Operations alterado por outro usuário', 1
        END

        IF @Action = 'delete' BEGIN
            IF EXISTS(SELECT 1 FROM [dbo].[Operations] WHERE [ParentOperationId] = @W_Id)
                THROW 51000, 'Chave-primária referenciada em Operations', 1
        END ELSE BEGIN

            DECLARE @W_TransactionId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TransactionId') AS bigint)
                   ,@W_TableName nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableName') AS nvarchar(25))
                   ,@W_ParentOperationId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ParentOperationId') AS bigint)
                   ,@W_Action nvarchar(15) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Action') AS nvarchar(15))
                   ,@W_OriginalRecord nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.OriginalRecord') AS nvarchar(max))
                   ,@W_ActualRecord nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ActualRecord') AS nvarchar(max))
                   ,@W_IsConfirmed bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsConfirmed') AS bit)

            IF @W_TransactionId IS NULL
                THROW 51000, 'Valor de TransactionId em @ActualRecord é requerido.', 1
            IF @W_TransactionId < CAST('1' AS bigint)
                THROW 51000, 'Valor de TransactionId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @W_TransactionId)
                THROW 51000, 'Valor de TransactionId em @ActualRecord inexiste em Transactions', 1
            IF @W_TableName IS NULL
                THROW 51000, 'Valor de TableName em @ActualRecord é requerido.', 1
            IF @W_ParentOperationId IS NOT NULL AND @W_ParentOperationId < CAST('1' AS bigint)
                THROW 51000, 'Valor de ParentOperationId em @ActualRecord deve ser maior que ou igual a 1', 1
            IF NOT EXISTS(SELECT 1 FROM [dbo].[Operations] WHERE [Id] = @W_ParentOperationId)
                THROW 51000, 'Valor de ParentOperationId em @ActualRecord inexiste em Operations', 1
            IF @W_Action IS NULL
                THROW 51000, 'Valor de Action em @ActualRecord é requerido.', 1
            IF @W_ActualRecord IS NULL
                THROW 51000, 'Valor de ActualRecord em @ActualRecord é requerido.', 1
        END

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[OperationPersist]
**********************************************************************************/
IF(SELECT object_id('[dbo].[OperationPersist]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[OperationPersist] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[OperationPersist](@LoginId BIGINT
                                              ,@UserName NVARCHAR(25)
                                              ,@Action NVARCHAR(15)
                                              ,@OriginalRecord NVARCHAR(max)
                                              ,@ActualRecord NVARCHAR(max)) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
           ,@ErrorMessage NVARCHAR(255)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@OperationId BIGINT
               ,@CreatedBy NVARCHAR(25)
               ,@ActionAux NVARCHAR(15)
               ,@IsConfirmed BIT
               ,@W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        EXEC @TransactionId = [dbo].[OperationValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        SELECT @OperationId = [Id]
              ,@CreatedBy = [CreatedBy]
              ,@ActionAux = [Action]
              ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Columns'
                  AND [IsConfirmed] IS NULL
                  AND CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) = @W_Id
        IF @@ROWCOUNT = 0 BEGIN
            INSERT INTO [dbo].[Operations] ([TransactionId]
                                             ,[TableName]
                                             ,[Action]
                                             ,[OriginalRecord]
                                             ,[ActualRecord]
                                             ,[IsConfirmed]
                                             ,[CreatedAt]
                                             ,[CreatedBy])
                                       VALUES(@TransactionId
                                             ,'Operations'
                                             ,@Action
                                             ,@OriginalRecord
                                             ,@ActualRecord
                                             ,NULL
                                             ,GETDATE()
                                             ,@UserName)
            SET @OperationId = @@IDENTITY
        END ELSE IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = 'Operação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END ELSE IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        ELSE IF @ActionAux = 'delete'
            THROW 51000, 'Registro excluído nesta transação', 1
        ELSE IF @Action = 'create'
            THROW 51000, 'Registro já existe nesta transação', 1
        ELSE IF @Action = 'update' BEGIN
            IF @ActionAux = 'create'
                EXEC [dbo].[OperationValidate] @LoginId, @UserName, 'create', NULL, @ActualRecord
            UPDATE [dbo].[Operations]
                SET [ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE IF @ActionAux = 'create' BEGIN
            UPDATE [dbo].[Operations] 
                SET [IsConfirmed] = 0
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END ELSE BEGIN
            UPDATE [dbo].[Operations]
                SET [Action] = 'delete'
                   ,[OriginalRecord] = @OriginalRecord
                   ,[ActualRecord] = @ActualRecord
                   ,[UpdatedAt] = GETDATE()
                   ,[UpdatedBy] = @UserName
                WHERE [Id] = @OperationId
        END
        COMMIT TRANSACTION

        RETURN CAST(@OperationId AS BIGINT)
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[OperationCommit]
**********************************************************************************/
IF(SELECT object_id('[dbo].[OperationCommit]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[OperationCommit] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[OperationCommit](@LoginId BIGINT
                                             ,@UserName NVARCHAR(25)
                                             ,@OperationId BIGINT) AS BEGIN
    DECLARE @TRANCOUNT INT = @@TRANCOUNT
            ,@ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED

        DECLARE @TransactionId BIGINT
               ,@TransactionIdAux BIGINT
               ,@TableName NVARCHAR(25)
               ,@Action NVARCHAR(15)
               ,@CreatedBy NVARCHAR(25)
               ,@OriginalRecord NVARCHAR(max)
               ,@ActualRecord NVARCHAR(max)
               ,@IsConfirmed BIT

        BEGIN TRANSACTION
        SAVE TRANSACTION [SavePoint]
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId requerido', 1
        IF @UserName IS NULL
            THROW 51000, 'Valor de @UserName requerido', 1
        IF @OperationId IS NULL
            THROW 51000, 'Valor de @OperationId requerido', 1
        SELECT @TransactionId = [TransactionId]
               ,@TableName = [TableName]
               ,@Action = [Action]
               ,@CreatedBy = [CreatedBy]
               ,@OriginalRecord = [OriginalRecord]
               ,@ActualRecord = [ActualRecord]
               ,@IsConfirmed = [IsConfirmed]
            FROM [dbo].[Operations]
            WHERE [Id] = @OperationId
        IF @@ROWCOUNT = 0
            THROW 51000, 'Operação inexistente', 1
        IF @TableName <> 'Operations'
            THROW 51000, 'Tabela da operação é inválida', 1
        IF @IsConfirmed IS NOT NULL BEGIN
            SET @ErrorMessage = @ErrorMessage + 'Transação já ' + CASE WHEN @IsConfirmed = 0 THEN 'cancelada' ELSE 'concluída' END;
            THROW 51000, @ErrorMessage, 1
        END
        IF @UserName <> @CreatedBy
            THROW 51000, 'Erro grave de segurança', 1
        EXEC @TransactionIdAux = [dbo].[OperationValidate] @LoginId, @UserName, @Action, @OriginalRecord, @ActualRecord
        IF @TransactionId <> @TransactionIdAux
            THROW 51000, 'Transação da operação é inválida', 1
        DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Id') AS bigint)

        IF @Action = 'delete'
            DELETE FROM [dbo].[Operations] WHERE [Id] = @W_Id
        ELSE BEGIN

            DECLARE @W_TransactionId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TransactionId') AS bigint)
                   ,@W_TableName nvarchar(25) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.TableName') AS nvarchar(25))
                   ,@W_ParentOperationId bigint = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ParentOperationId') AS bigint)
                   ,@W_Action nvarchar(15) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.Action') AS nvarchar(15))
                   ,@W_OriginalRecord nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.OriginalRecord') AS nvarchar(max))
                   ,@W_ActualRecord nvarchar(max) = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.ActualRecord') AS nvarchar(max))
                   ,@W_IsConfirmed bit = CAST([crudex].[JSON_EXTRACT](@ActualRecord, '$.IsConfirmed') AS bit)

            IF @Action = 'create'
                INSERT INTO [dbo].[Operations] ([Id]
                                                ,[TransactionId]
                                                ,[TableName]
                                                ,[ParentOperationId]
                                                ,[Action]
                                                ,[OriginalRecord]
                                                ,[ActualRecord]
                                                ,[IsConfirmed]
                                                ,[CreatedAt]
                                                ,[CreatedBy])
                                          VALUES (@W_Id
                                                 ,@W_TransactionId
                                                 ,@W_TableName
                                                 ,@W_ParentOperationId
                                                 ,@W_Action
                                                 ,@W_OriginalRecord
                                                 ,@W_ActualRecord
                                                 ,@W_IsConfirmed
                                                 ,GETDATE()
                                                 ,@UserName)
            ELSE
                UPDATE [dbo].[Operations] SET [Id] = @W_Id
                                              ,[TransactionId] = @W_TransactionId
                                              ,[TableName] = @W_TableName
                                              ,[ParentOperationId] = @W_ParentOperationId
                                              ,[Action] = @W_Action
                                              ,[OriginalRecord] = @W_OriginalRecord
                                              ,[ActualRecord] = @W_ActualRecord
                                              ,[IsConfirmed] = @W_IsConfirmed
                                              ,[UpdatedAt] = GETDATE()
                                              ,[UpdatedBy] = @UserName
                    WHERE [Id] = @W_Id
        END
        UPDATE [dbo].[Operations]
            SET [IsConfirmed] = 1
                ,[UpdatedAt] = GETDATE()
                ,[UpdatedBy] = @UserName
            WHERE [Id] = @OperationId
        COMMIT TRANSACTION

        RETURN @TransactionId
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > @TRANCOUNT BEGIN
            ROLLBACK TRANSACTION [SavePoint];
            COMMIT TRANSACTION
        END;
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1
    END CATCH
END
GO

/**********************************************************************************
Criar stored procedure [dbo].[OperationsRead]
**********************************************************************************/
IF(SELECT object_id('[dbo].[OperationsRead]', 'P')) IS NULL
    EXEC('CREATE PROCEDURE [dbo].[OperationsRead] AS PRINT 1')
GO
ALTER PROCEDURE [dbo].[OperationsRead](@LoginId BIGINT
                                          ,@RecordFilter NVARCHAR(MAX)
                                          ,@OrderBy NVARCHAR(MAX)
                                          ,@PaddingGridLastPage BIT
                                          ,@PageNumber INT OUT
                                          ,@LimitRows INT OUT
                                          ,@MaxPage INT OUT
                                          ,@ReturnValue BIGINT OUT) AS BEGIN
    DECLARE @ErrorMessage NVARCHAR(MAX)

    BEGIN TRY
        SET NOCOUNT ON
        SET TRANSACTION ISOLATION LEVEL READ COMMITTED
        IF @LoginId IS NULL
            THROW 51000, 'Valor de @LoginId é requerido', 1
        IF @RecordFilter IS NULL
            SET @RecordFilter = '{}'
        ELSE IF ISJSON(@RecordFilter) = 0
            THROW 51000, 'Valor de @RecordFilter não está no formato JSON', 1
        SET @OrderBy = TRIM(ISNULL(@OrderBy, ''))
        IF @OrderBy = ''
            SET @OrderBy = '[Id]'
        ELSE BEGIN
            SET @OrderBy = REPLACE(REPLACE(@OrderBy, '[', ''), ']', '')
            IF EXISTS(SELECT 1 
                         FROM (SELECT CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                           WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                           ELSE TRIM([value])
                                      END AS [ColumnName]
                                  FROM STRING_SPLIT(@OrderBy, ',')) AS [O]
                                      LEFT JOIN (SELECT [#1].[name] AS ColumnName
                                                    FROM [sys].[columns] [#1]
                                                        INNER JOIN [sys].[tables] [#2] ON [#1].[object_id] = [#2].[object_id]
                                                    WHERE [#2].[name] = 'Operations') AS [T] ON [T].[ColumnName] = [O].[ColumnName]
                         WHERE [T].[ColumnName] IS NULL)
                THROW 51000, 'Nome de coluna em @OrderBy é inválido', 1
            SELECT @OrderBy = STRING_AGG('[' + TRIM(CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 4)
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN LEFT(TRIM([value]), LEN(TRIM([value])) - 3)
                                                         ELSE TRIM([value])
                                                    END) + '] ' + 
                                                    CASE WHEN TRIM(RIGHT([value], 4)) = 'DESC' THEN 'DESC'
                                                         WHEN TRIM(RIGHT([value], 3)) = 'ASC' THEN 'ASC'
                                                         ELSE 'ASC'
                                                    END, ', ')
                FROM STRING_SPLIT(@OrderBy, ',')
        END

        DECLARE @TransactionId BIGINT = (SELECT MAX([Id]) FROM [dbo].[Transactions] WHERE [LoginId] = @LoginId)

        IF NOT EXISTS(SELECT 1 FROM [dbo].[Transactions] WHERE [Id] = @TransactionId AND [IsConfirmed] IS NULL)
            SET @TransactionId = NULL
        SELECT [Action] AS [_]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Id') AS bigint) AS [Id]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.TransactionId') AS bigint) AS [TransactionId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.TableName') AS nvarchar(25)) AS [TableName]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ParentOperationId') AS bigint) AS [ParentOperationId]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.Action') AS nvarchar(15)) AS [Action]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.OriginalRecord') AS nvarchar(max)) AS [OriginalRecord]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.ActualRecord') AS nvarchar(max)) AS [ActualRecord]
              ,CAST([crudex].[JSON_EXTRACT]([ActualRecord], '$.IsConfirmed') AS bit) AS [IsConfirmed]
            INTO [dbo].[#operations]
            FROM [dbo].[Operations]
            WHERE [TransactionId] = @TransactionId
                  AND [TableName] = 'Operations'
                  AND [IsConfirmed] IS NULL
        CREATE UNIQUE INDEX [#unqOperations] ON [dbo].[#operations]([Id])

        DECLARE @_ NVARCHAR(MAX) = (SELECT STRING_AGG(value, ',') FROM OPENJSON(@RecordFilter, '$._'))
               ,@Where NVARCHAR(MAX) = ''
               ,@sql NVARCHAR(MAX)

        IF @_ IS NULL BEGIN
            DECLARE @W_Id bigint = CAST([crudex].[JSON_EXTRACT](@RecordFilter, '$.Id') AS bigint)

            IF @W_Id IS NOT NULL BEGIN
                IF @W_Id < CAST('1' AS bigint)
                    THROW 51000, 'Valor de Id deve ser maior que ou igual a ''1''', 1
                SET @Where = @Where + ' AND [T].[Id] = @Id'
            END
        END ELSE
            SET @Where = ' AND [T].[Id] IN (' + @_ + ')'
        SET @sql = 'INSERT [dbo].[#table]
                        SELECT ''T'' AS [_]
                              ,[T].[Id]
                            FROM [dbo].[Operations] [T]
                                LEFT JOIN [dbo].[#operations] [#] ON [#].[Id] = [T].[Id]
                            WHERE [#].[Id] IS NULL' + @Where + '
                        UNION ALL
                            SELECT ''O'' AS [_]
                                  ,[T].[Id]
                                FROM [dbo].[#operations] [T]
                                WHERE [T].[_] <> ''delete''' + @Where
        CREATE TABLE [dbo].[#table]([_] CHAR(1), [Id] bigint)
        IF @_ IS NULL
            EXEC sp_executesql @sql
                               ,N'@Id bigint'
                           ,@Id = @W_Id
        ELSE
            EXEC sp_executesql @sql

        DECLARE @RowCount INT = @@ROWCOUNT
               ,@OffSet INT

        CREATE UNIQUE INDEX [#unqTable] ON [dbo].[#table]([Id])
        IF @RowCount = 0 OR ISNULL(@PageNumber, 0) = 0 OR ISNULL(@LimitRows, 0) <= 0 BEGIN
            SET @OffSet = 0
            SET @LimitRows = CASE WHEN @RowCount = 0 THEN 1 ELSE @RowCount END
            SET @PageNumber = 1
            SET @MaxPage = 1
        END ELSE BEGIN
            SET @MaxPage = @RowCount / @LimitRows + CASE WHEN @RowCount % @LimitRows = 0 THEN 0 ELSE 1 END
            IF ABS(@PageNumber) > @MaxPage
                SET @PageNumber = CASE WHEN @PageNumber < 0 THEN -@MaxPage ELSE @MaxPage END
            IF @PageNumber < 0
                SET @PageNumber = @MaxPage - ABS(@PageNumber) + 1
            SET @OffSet = (@PageNumber - 1) * @LimitRows
            IF @PaddingGridLastPage = 1 AND @OffSet + @LimitRows > @RowCount
                SET @OffSet = CASE WHEN @RowCount > @LimitRows THEN @RowCount - @LimitRows ELSE 0 END
        END
        SELECT TOP 0 CAST(NULL AS NVARCHAR(50)) AS [ClassName]
                    ,CAST(NULL AS bigint) AS [Id]
                    ,CAST(NULL AS bigint) AS [TransactionId]
                    ,CAST(NULL AS nvarchar(25)) AS [TableName]
                    ,CAST(NULL AS bigint) AS [ParentOperationId]
                    ,CAST(NULL AS nvarchar(15)) AS [Action]
                    ,CAST(NULL AS nvarchar(max)) AS [OriginalRecord]
                    ,CAST(NULL AS nvarchar(max)) AS [ActualRecord]
                    ,CAST(NULL AS bit) AS [IsConfirmed]
            INTO [dbo].[#result]
        SET @sql = 'INSERT #result
                        SELECT ''Operation'' AS [ClassName]
                              ,[T].[Id]
                              ,[T].[TransactionId]
                              ,[T].[TableName]
                              ,[T].[ParentOperationId]
                              ,[T].[Action]
                              ,[T].[OriginalRecord]
                              ,[T].[ActualRecord]
                              ,[T].[IsConfirmed]
                            FROM [dbo].[#table] [#]
                                INNER JOIN [dbo].[Operations] [T] ON [T].[Id] = [#].[Id]
                            WHERE [#].[_] = ''T''
                        UNION ALL
                            SELECT ''Operation'' AS [ClassName]
                                  ,[O].[Id]
                                  ,[O].[TransactionId]
                                  ,[O].[TableName]
                                  ,[O].[ParentOperationId]
                                  ,[O].[Action]
                                  ,[O].[OriginalRecord]
                                  ,[O].[ActualRecord]
                                  ,[O].[IsConfirmed]
                                FROM [dbo].[#table] [#]
                                    INNER JOIN [dbo].[#operations] [O] ON [O].[Id] = [#].[Id]
                                WHERE [#].[_] = ''O''
                        ORDER BY ' + @OrderBy + '
                        OFFSET ' + CAST(@offset AS NVARCHAR(20)) + ' ROWS
                        FETCH NEXT ' + CAST(@LimitRows AS NVARCHAR(20)) + ' ROWS ONLY'
        EXEC sp_executesql @sql
        SELECT [ClassName]
              ,[Id]
              ,[TransactionId]
              ,[TableName]
              ,[ParentOperationId]
              ,[Action]
              ,[OriginalRecord]
              ,[ActualRecord]
              ,[IsConfirmed]
            FROM [dbo].[#result]
        SELECT 'Transaction' AS ClassName
              ,[R].[Id]
              ,[R].[LoginId]
              ,[R].[IsConfirmed]
            FROM [dbo].[Transactions] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [TransactionId] =  [R].[Id])
        SELECT 'Operation' AS ClassName
              ,[R].[Id]
              ,[R].[TransactionId]
              ,[R].[TableName]
              ,[R].[ParentOperationId]
              ,[R].[Action]
              ,[R].[OriginalRecord]
              ,[R].[ActualRecord]
              ,[R].[IsConfirmed]
            FROM [dbo].[Operations] [R]
            WHERE EXISTS(SELECT 1 FROM [dbo].[#result] WHERE [ParentOperationId] =  [R].[Id])
        SET @ReturnValue = @RowCount

        RETURN 0
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = '[' + ERROR_PROCEDURE() + ']: ' + ERROR_MESSAGE() + ', Line: ' + CAST(ERROR_LINE() AS NVARCHAR(10));
        THROW 51000, @ErrorMessage, 1;
    END CATCH
END
GO


